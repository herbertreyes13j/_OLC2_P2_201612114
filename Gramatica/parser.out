Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> Sentencias_G
Rule 2     S -> <empty>
Rule 3     Sentencias_G -> Sentencias_G Sentencia_G
Rule 4     Sentencias_G -> Sentencia_G
Rule 5     Sentencia_G -> error
Rule 6     Sentencia_G -> Declaracion
Rule 7     Sentencia_G -> LASIGNACION pyc
Rule 8     Sentencia_G -> STRUCT pyc
Rule 9     Sentencia_G -> Funcion
Rule 10    Declaracion -> Tipos L_Dec pyc
Rule 11    L_Dec -> L_Dec coma Dec
Rule 12    L_Dec -> Dec
Rule 13    Dec -> iden
Rule 14    Dec -> iden asigna EXP
Rule 15    Dec -> iden cor1 cor2 asigna EXP
Rule 16    Dec -> iden LACCESO
Rule 17    Dec -> iden LACCESO asigna EXP
Rule 18    LACCESO -> LACCESO cor1 EXP cor2
Rule 19    LACCESO -> cor1 EXP cor2
Rule 20    LASIGNACION -> LASIGNACION coma ASIGNACION
Rule 21    LASIGNACION -> ASIGNACION
Rule 22    ASIGNACION -> iden
Rule 23    ASIGNACION -> iden OP EXP
Rule 24    ASIGNACION -> iden LACCESO
Rule 25    ASIGNACION -> iden LACCESO OP EXP
Rule 26    ASIGNACION -> ACCESO_STRUCT OP EXP
Rule 27    ASIGNACION -> ACCESO_STRUCT
Rule 28    OP -> andbasigna
Rule 29    OP -> divasigna
Rule 30    OP -> masasigna
Rule 31    OP -> menosasigna
Rule 32    OP -> modasigna
Rule 33    OP -> orbasigna
Rule 34    OP -> porasigna
Rule 35    OP -> shiftizqasigna
Rule 36    OP -> shiftderasigna
Rule 37    OP -> xorbasinga
Rule 38    OP -> asigna
Rule 39    STRUCT -> t_struct iden llav1 ATRIBUTOS llav2
Rule 40    ATRIBUTOS -> ATRIBUTOS ATRIBUTO
Rule 41    ATRIBUTOS -> ATRIBUTO
Rule 42    ATRIBUTO -> Tipos LItemsStruct pyc
Rule 43    LItemsStruct -> LItemsStruct coma ItemsStruct
Rule 44    LItemsStruct -> ItemsStruct
Rule 45    ItemsStruct -> iden
Rule 46    ItemsStruct -> iden LACCESO
Rule 47    ItemsStruct -> iden cor1 cor2
Rule 48    ItemsStruct2 -> iden
Rule 49    ItemsStruct2 -> iden LACCESO
Rule 50    ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2
Rule 51    Tipos -> t_char
Rule 52    Tipos -> t_int
Rule 53    Tipos -> t_double
Rule 54    Tipos -> t_float
Rule 55    Funcion -> Tipos iden par1 Parametros par2 BLOQUE
Rule 56    Funcion -> t_void iden par1 Parametros par2 BLOQUE
Rule 57    Parametros -> <empty>
Rule 58    Parametros -> Parametros coma Parametro
Rule 59    Parametros -> Parametro
Rule 60    SS_F -> SS_F S_F
Rule 61    SS_F -> S_F
Rule 62    S_F -> error
Rule 63    S_F -> Declaracion
Rule 64    S_F -> LASIGNACION pyc
Rule 65    S_F -> INSTANCIA pyc
Rule 66    S_F -> STRUCT pyc
Rule 67    S_F -> IF
Rule 68    S_F -> LLAMADA pyc
Rule 69    S_F -> BREAK pyc
Rule 70    S_F -> CONTINUE pyc
Rule 71    S_F -> SWITCH
Rule 72    S_F -> DO_WHILE pyc
Rule 73    S_F -> WHILE
Rule 74    S_F -> RETURN pyc
Rule 75    S_F -> ETIQUETA
Rule 76    S_F -> GOTO pyc
Rule 77    S_F -> FOR
Rule 78    S_F -> PRINTF pyc
Rule 79    S_F -> INC_POST pyc
Rule 80    S_F -> INC_PRE pyc
Rule 81    PRINTF -> t_printf par1 string coma ELEMENTS par2
Rule 82    PRINTF -> t_printf par1 string par2
Rule 83    INSTANCIA -> t_struct iden iden LACCESO
Rule 84    INSTANCIA -> t_struct iden iden
Rule 85    BLOQUE -> llav1 SS_F llav2
Rule 86    BLOQUE -> llav1 llav2
Rule 87    FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE
Rule 88    INICIO -> Tipos Dec pyc
Rule 89    INICIO -> ASIGNACION pyc
Rule 90    INICIO -> pyc
Rule 91    INCDC -> EXP par2
Rule 92    INCDC -> par2
Rule 93    ETIQUETA -> iden bipunto
Rule 94    GOTO -> t_goto iden
Rule 95    DO_WHILE -> t_do BLOQUE t_while par1 EXP par2
Rule 96    WHILE -> t_while par1 EXP par2 BLOQUE
Rule 97    RETURN -> t_return EXP
Rule 98    RETURN -> t_return
Rule 99    SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2
Rule 100   SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
Rule 101   CASOS -> CASOS CASO
Rule 102   CASOS -> CASO
Rule 103   CASO -> t_case EXP bipunto SS_F
Rule 104   CASO -> t_case EXP bipunto
Rule 105   DEFAULT -> t_default bipunto SS_F
Rule 106   DEFAULT -> t_default bipunto
Rule 107   BREAK -> t_break
Rule 108   CONTINUE -> t_continue
Rule 109   IF -> t_if par1 EXP par2 BLOQUE
Rule 110   IF -> t_if par1 EXP par2 BLOQUE t_else IF
Rule 111   IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE
Rule 112   Parametro -> Tipos iden
Rule 113   Parametro -> Tipos iden LACCESO
Rule 114   LLAMADA -> iden par1 ELEMENTS par2
Rule 115   LLAMADA -> iden par1 par2
Rule 116   EXP -> EXP mas EXP
Rule 117   EXP -> EXP menos EXP
Rule 118   EXP -> EXP por EXP
Rule 119   EXP -> EXP division EXP
Rule 120   EXP -> EXP modulo EXP
Rule 121   EXP -> EXP mayor EXP
Rule 122   EXP -> EXP mayori EXP
Rule 123   EXP -> EXP menor EXP
Rule 124   EXP -> EXP menori EXP
Rule 125   EXP -> EXP igual EXP
Rule 126   EXP -> EXP diferente EXP
Rule 127   EXP -> EXP and EXP
Rule 128   EXP -> EXP or EXP
Rule 129   EXP -> iden LACCESO
Rule 130   EXP -> par1 t_char par2 EXP
Rule 131   EXP -> par1 t_int par2 EXP
Rule 132   EXP -> par1 t_float par2 EXP
Rule 133   EXP -> string
Rule 134   EXP -> entero
Rule 135   EXP -> decimal
Rule 136   EXP -> char
Rule 137   EXP -> iden
Rule 138   EXP -> par1 EXP par2
Rule 139   EXP -> EXP shiftizq EXP
Rule 140   EXP -> EXP shiftder EXP
Rule 141   EXP -> EXP andb EXP
Rule 142   EXP -> EXP xorb EXP
Rule 143   EXP -> EXP orb EXP
Rule 144   EXP -> t_scanf par1 par2
Rule 145   EXP -> mas EXP
Rule 146   EXP -> menos EXP
Rule 147   EXP -> not EXP
Rule 148   EXP -> notb EXP
Rule 149   EXP -> andb EXP
Rule 150   INC_PRE -> incremento EXP
Rule 151   INC_PRE -> decremento EXP
Rule 152   INC_POST -> EXP incremento
Rule 153   INC_POST -> EXP decremento
Rule 154   EXP -> incremento EXP
Rule 155   EXP -> decremento EXP
Rule 156   EXP -> EXP condicional EXP bipunto EXP
Rule 157   EXP -> EXP incremento
Rule 158   EXP -> EXP decremento
Rule 159   EXP -> llav1 ELEMENTS llav2
Rule 160   ELEMENTS -> ELEMENTS coma EXP
Rule 161   ELEMENTS -> EXP
Rule 162   EXP -> LLAMADA
Rule 163   EXP -> ACCESO_STRUCT
Rule 164   EXP -> t_sizeof par1 EXP par2

Terminals, with rules where they appear

and                  : 127
andb                 : 141 149
andbasigna           : 28
asigna               : 14 15 17 38
bipunto              : 93 103 104 105 106 156
char                 : 136
coma                 : 11 20 43 58 81 160
condicional          : 156
cor1                 : 15 18 19 47
cor2                 : 15 18 19 47
decimal              : 135
decremento           : 151 153 155 158
diferente            : 126
divasigna            : 29
division             : 119
entero               : 134
error                : 5 62
iden                 : 13 14 15 16 17 22 23 24 25 39 45 46 47 48 49 55 56 83 83 84 84 93 94 112 113 114 115 129 137
igual                : 125
incremento           : 150 152 154 157
llav1                : 39 85 86 99 100 159
llav2                : 39 85 86 99 100 159
mas                  : 116 145
masasigna            : 30
mayor                : 121
mayori               : 122
menor                : 123
menori               : 124
menos                : 117 146
menosasigna          : 31
modasigna            : 32
modulo               : 120
not                  : 147
notb                 : 148
or                   : 128
orb                  : 143
orbasigna            : 33
par1                 : 55 56 81 82 87 95 96 99 100 109 110 111 114 115 130 131 132 138 144 164
par2                 : 55 56 81 82 91 92 95 96 99 100 109 110 111 114 115 130 131 132 138 144 164
por                  : 118
porasigna            : 34
punto                : 50
pyc                  : 7 8 10 42 64 65 66 68 69 70 72 74 76 78 79 80 87 88 89 90
shiftder             : 140
shiftderasigna       : 36
shiftizq             : 139
shiftizqasigna       : 35
string               : 81 82 133
t_break              : 107
t_case               : 103 104
t_char               : 51 130
t_continue           : 108
t_default            : 105 106
t_do                 : 95
t_double             : 53
t_else               : 110 111
t_float              : 54 132
t_for                : 87
t_goto               : 94
t_if                 : 109 110 111
t_int                : 52 131
t_printf             : 81 82
t_return             : 97 98
t_scanf              : 144
t_sizeof             : 164
t_struct             : 39 83 84
t_switch             : 99 100
t_void               : 56
t_while              : 95 96
xorb                 : 142
xorbasinga           : 37

Nonterminals, with rules where they appear

ACCESO_STRUCT        : 26 27 163
ASIGNACION           : 20 21 89
ATRIBUTO             : 40 41
ATRIBUTOS            : 39 40
BLOQUE               : 55 56 87 95 96 109 110 111 111
BREAK                : 69
CASO                 : 101 102
CASOS                : 99 100 101
CONTINUE             : 70
DEFAULT              : 100
DO_WHILE             : 72
Dec                  : 11 12 88
Declaracion          : 6 63
ELEMENTS             : 81 114 159 160
ETIQUETA             : 75
EXP                  : 14 15 17 18 19 23 25 26 87 91 95 96 97 99 100 103 104 109 110 111 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 130 131 132 138 139 139 140 140 141 141 142 142 143 143 145 146 147 148 149 150 151 152 153 154 155 156 156 156 157 158 160 161 164
FOR                  : 77
Funcion              : 9
GOTO                 : 76
IF                   : 67 110
INCDC                : 87
INC_POST             : 79
INC_PRE              : 80
INICIO               : 87
INSTANCIA            : 65
ItemsStruct          : 43 44
ItemsStruct2         : 50 50
LACCESO              : 16 17 18 24 25 46 49 83 113 129
LASIGNACION          : 7 20 64
LItemsStruct         : 42 43
LLAMADA              : 68 162
L_Dec                : 10 11
OP                   : 23 25 26
PRINTF               : 78
Parametro            : 58 59
Parametros           : 55 56 58
RETURN               : 74
S                    : 0
SS_F                 : 60 85 103 105
STRUCT               : 8 66
SWITCH               : 71
S_F                  : 60 61
Sentencia_G          : 3 4
Sentencias_G         : 1 3
Tipos                : 10 42 55 88 112 113
WHILE                : 73

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . Sentencias_G
    (2) S -> .
    (3) Sentencias_G -> . Sentencias_G Sentencia_G
    (4) Sentencias_G -> . Sentencia_G
    (5) Sentencia_G -> . error
    (6) Sentencia_G -> . Declaracion
    (7) Sentencia_G -> . LASIGNACION pyc
    (8) Sentencia_G -> . STRUCT pyc
    (9) Sentencia_G -> . Funcion
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (55) Funcion -> . Tipos iden par1 Parametros par2 BLOQUE
    (56) Funcion -> . t_void iden par1 Parametros par2 BLOQUE
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    $end            reduce using rule 2 (S -> .)
    error           shift and go to state 4
    t_struct        shift and go to state 11
    t_void          shift and go to state 13
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    iden            shift and go to state 12

    S                              shift and go to state 1
    Sentencias_G                   shift and go to state 2
    Sentencia_G                    shift and go to state 3
    Declaracion                    shift and go to state 5
    LASIGNACION                    shift and go to state 6
    STRUCT                         shift and go to state 7
    Funcion                        shift and go to state 8
    Tipos                          shift and go to state 9
    ASIGNACION                     shift and go to state 10
    ACCESO_STRUCT                  shift and go to state 18
    ItemsStruct2                   shift and go to state 19

state 1

    (0) S' -> S .



state 2

    (1) S -> Sentencias_G .
    (3) Sentencias_G -> Sentencias_G . Sentencia_G
    (5) Sentencia_G -> . error
    (6) Sentencia_G -> . Declaracion
    (7) Sentencia_G -> . LASIGNACION pyc
    (8) Sentencia_G -> . STRUCT pyc
    (9) Sentencia_G -> . Funcion
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (55) Funcion -> . Tipos iden par1 Parametros par2 BLOQUE
    (56) Funcion -> . t_void iden par1 Parametros par2 BLOQUE
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    $end            reduce using rule 1 (S -> Sentencias_G .)
    error           shift and go to state 4
    t_struct        shift and go to state 11
    t_void          shift and go to state 13
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    iden            shift and go to state 12

    Sentencia_G                    shift and go to state 20
    Declaracion                    shift and go to state 5
    LASIGNACION                    shift and go to state 6
    STRUCT                         shift and go to state 7
    Funcion                        shift and go to state 8
    Tipos                          shift and go to state 9
    ASIGNACION                     shift and go to state 10
    ACCESO_STRUCT                  shift and go to state 18
    ItemsStruct2                   shift and go to state 19

state 3

    (4) Sentencias_G -> Sentencia_G .

    error           reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_struct        reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_void          reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_char          reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_int           reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_double        reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_float         reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    iden            reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    $end            reduce using rule 4 (Sentencias_G -> Sentencia_G .)


state 4

    (5) Sentencia_G -> error .

    error           reduce using rule 5 (Sentencia_G -> error .)
    t_struct        reduce using rule 5 (Sentencia_G -> error .)
    t_void          reduce using rule 5 (Sentencia_G -> error .)
    t_char          reduce using rule 5 (Sentencia_G -> error .)
    t_int           reduce using rule 5 (Sentencia_G -> error .)
    t_double        reduce using rule 5 (Sentencia_G -> error .)
    t_float         reduce using rule 5 (Sentencia_G -> error .)
    iden            reduce using rule 5 (Sentencia_G -> error .)
    $end            reduce using rule 5 (Sentencia_G -> error .)


state 5

    (6) Sentencia_G -> Declaracion .

    error           reduce using rule 6 (Sentencia_G -> Declaracion .)
    t_struct        reduce using rule 6 (Sentencia_G -> Declaracion .)
    t_void          reduce using rule 6 (Sentencia_G -> Declaracion .)
    t_char          reduce using rule 6 (Sentencia_G -> Declaracion .)
    t_int           reduce using rule 6 (Sentencia_G -> Declaracion .)
    t_double        reduce using rule 6 (Sentencia_G -> Declaracion .)
    t_float         reduce using rule 6 (Sentencia_G -> Declaracion .)
    iden            reduce using rule 6 (Sentencia_G -> Declaracion .)
    $end            reduce using rule 6 (Sentencia_G -> Declaracion .)


state 6

    (7) Sentencia_G -> LASIGNACION . pyc
    (20) LASIGNACION -> LASIGNACION . coma ASIGNACION

    pyc             shift and go to state 21
    coma            shift and go to state 22


state 7

    (8) Sentencia_G -> STRUCT . pyc

    pyc             shift and go to state 23


state 8

    (9) Sentencia_G -> Funcion .

    error           reduce using rule 9 (Sentencia_G -> Funcion .)
    t_struct        reduce using rule 9 (Sentencia_G -> Funcion .)
    t_void          reduce using rule 9 (Sentencia_G -> Funcion .)
    t_char          reduce using rule 9 (Sentencia_G -> Funcion .)
    t_int           reduce using rule 9 (Sentencia_G -> Funcion .)
    t_double        reduce using rule 9 (Sentencia_G -> Funcion .)
    t_float         reduce using rule 9 (Sentencia_G -> Funcion .)
    iden            reduce using rule 9 (Sentencia_G -> Funcion .)
    $end            reduce using rule 9 (Sentencia_G -> Funcion .)


state 9

    (10) Declaracion -> Tipos . L_Dec pyc
    (55) Funcion -> Tipos . iden par1 Parametros par2 BLOQUE
    (11) L_Dec -> . L_Dec coma Dec
    (12) L_Dec -> . Dec
    (13) Dec -> . iden
    (14) Dec -> . iden asigna EXP
    (15) Dec -> . iden cor1 cor2 asigna EXP
    (16) Dec -> . iden LACCESO
    (17) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 25

    L_Dec                          shift and go to state 24
    Dec                            shift and go to state 26

state 10

    (21) LASIGNACION -> ASIGNACION .

    pyc             reduce using rule 21 (LASIGNACION -> ASIGNACION .)
    coma            reduce using rule 21 (LASIGNACION -> ASIGNACION .)


state 11

    (39) STRUCT -> t_struct . iden llav1 ATRIBUTOS llav2

    iden            shift and go to state 27


state 12

    (22) ASIGNACION -> iden .
    (23) ASIGNACION -> iden . OP EXP
    (24) ASIGNACION -> iden . LACCESO
    (25) ASIGNACION -> iden . LACCESO OP EXP
    (48) ItemsStruct2 -> iden .
    (49) ItemsStruct2 -> iden . LACCESO
    (28) OP -> . andbasigna
    (29) OP -> . divasigna
    (30) OP -> . masasigna
    (31) OP -> . menosasigna
    (32) OP -> . modasigna
    (33) OP -> . orbasigna
    (34) OP -> . porasigna
    (35) OP -> . shiftizqasigna
    (36) OP -> . shiftderasigna
    (37) OP -> . xorbasinga
    (38) OP -> . asigna
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 22 (ASIGNACION -> iden .)
    coma            reduce using rule 22 (ASIGNACION -> iden .)
    punto           reduce using rule 48 (ItemsStruct2 -> iden .)
    andbasigna      shift and go to state 30
    divasigna       shift and go to state 31
    masasigna       shift and go to state 32
    menosasigna     shift and go to state 33
    modasigna       shift and go to state 34
    orbasigna       shift and go to state 35
    porasigna       shift and go to state 36
    shiftizqasigna  shift and go to state 37
    shiftderasigna  shift and go to state 38
    xorbasinga      shift and go to state 39
    asigna          shift and go to state 40
    cor1            shift and go to state 41

    OP                             shift and go to state 28
    LACCESO                        shift and go to state 29

state 13

    (56) Funcion -> t_void . iden par1 Parametros par2 BLOQUE

    iden            shift and go to state 42


state 14

    (51) Tipos -> t_char .

    iden            reduce using rule 51 (Tipos -> t_char .)


state 15

    (52) Tipos -> t_int .

    iden            reduce using rule 52 (Tipos -> t_int .)


state 16

    (53) Tipos -> t_double .

    iden            reduce using rule 53 (Tipos -> t_double .)


state 17

    (54) Tipos -> t_float .

    iden            reduce using rule 54 (Tipos -> t_float .)


state 18

    (26) ASIGNACION -> ACCESO_STRUCT . OP EXP
    (27) ASIGNACION -> ACCESO_STRUCT .
    (28) OP -> . andbasigna
    (29) OP -> . divasigna
    (30) OP -> . masasigna
    (31) OP -> . menosasigna
    (32) OP -> . modasigna
    (33) OP -> . orbasigna
    (34) OP -> . porasigna
    (35) OP -> . shiftizqasigna
    (36) OP -> . shiftderasigna
    (37) OP -> . xorbasinga
    (38) OP -> . asigna

    pyc             reduce using rule 27 (ASIGNACION -> ACCESO_STRUCT .)
    coma            reduce using rule 27 (ASIGNACION -> ACCESO_STRUCT .)
    andbasigna      shift and go to state 30
    divasigna       shift and go to state 31
    masasigna       shift and go to state 32
    menosasigna     shift and go to state 33
    modasigna       shift and go to state 34
    orbasigna       shift and go to state 35
    porasigna       shift and go to state 36
    shiftizqasigna  shift and go to state 37
    shiftderasigna  shift and go to state 38
    xorbasinga      shift and go to state 39
    asigna          shift and go to state 40

    OP                             shift and go to state 43

state 19

    (50) ACCESO_STRUCT -> ItemsStruct2 . punto ItemsStruct2

    punto           shift and go to state 44


state 20

    (3) Sentencias_G -> Sentencias_G Sentencia_G .

    error           reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_struct        reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_void          reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_char          reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_int           reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_double        reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_float         reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    iden            reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    $end            reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)


state 21

    (7) Sentencia_G -> LASIGNACION pyc .

    error           reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    t_struct        reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    t_void          reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    t_char          reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    t_int           reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    t_double        reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    t_float         reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    iden            reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)
    $end            reduce using rule 7 (Sentencia_G -> LASIGNACION pyc .)


state 22

    (20) LASIGNACION -> LASIGNACION coma . ASIGNACION
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 12

    ASIGNACION                     shift and go to state 45
    ACCESO_STRUCT                  shift and go to state 18
    ItemsStruct2                   shift and go to state 19

state 23

    (8) Sentencia_G -> STRUCT pyc .

    error           reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    t_struct        reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    t_void          reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    t_char          reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    t_int           reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    t_double        reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    t_float         reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    iden            reduce using rule 8 (Sentencia_G -> STRUCT pyc .)
    $end            reduce using rule 8 (Sentencia_G -> STRUCT pyc .)


state 24

    (10) Declaracion -> Tipos L_Dec . pyc
    (11) L_Dec -> L_Dec . coma Dec

    pyc             shift and go to state 46
    coma            shift and go to state 47


state 25

    (55) Funcion -> Tipos iden . par1 Parametros par2 BLOQUE
    (13) Dec -> iden .
    (14) Dec -> iden . asigna EXP
    (15) Dec -> iden . cor1 cor2 asigna EXP
    (16) Dec -> iden . LACCESO
    (17) Dec -> iden . LACCESO asigna EXP
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    par1            shift and go to state 48
    pyc             reduce using rule 13 (Dec -> iden .)
    coma            reduce using rule 13 (Dec -> iden .)
    asigna          shift and go to state 49
    cor1            shift and go to state 50

    LACCESO                        shift and go to state 51

state 26

    (12) L_Dec -> Dec .

    pyc             reduce using rule 12 (L_Dec -> Dec .)
    coma            reduce using rule 12 (L_Dec -> Dec .)


state 27

    (39) STRUCT -> t_struct iden . llav1 ATRIBUTOS llav2

    llav1           shift and go to state 52


state 28

    (23) ASIGNACION -> iden OP . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 54
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 29

    (24) ASIGNACION -> iden LACCESO .
    (25) ASIGNACION -> iden LACCESO . OP EXP
    (49) ItemsStruct2 -> iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2
    (28) OP -> . andbasigna
    (29) OP -> . divasigna
    (30) OP -> . masasigna
    (31) OP -> . menosasigna
    (32) OP -> . modasigna
    (33) OP -> . orbasigna
    (34) OP -> . porasigna
    (35) OP -> . shiftizqasigna
    (36) OP -> . shiftderasigna
    (37) OP -> . xorbasinga
    (38) OP -> . asigna

    pyc             reduce using rule 24 (ASIGNACION -> iden LACCESO .)
    coma            reduce using rule 24 (ASIGNACION -> iden LACCESO .)
    punto           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    cor1            shift and go to state 73
    andbasigna      shift and go to state 30
    divasigna       shift and go to state 31
    masasigna       shift and go to state 32
    menosasigna     shift and go to state 33
    modasigna       shift and go to state 34
    orbasigna       shift and go to state 35
    porasigna       shift and go to state 36
    shiftizqasigna  shift and go to state 37
    shiftderasigna  shift and go to state 38
    xorbasinga      shift and go to state 39
    asigna          shift and go to state 40

    OP                             shift and go to state 72

state 30

    (28) OP -> andbasigna .

    iden            reduce using rule 28 (OP -> andbasigna .)
    par1            reduce using rule 28 (OP -> andbasigna .)
    string          reduce using rule 28 (OP -> andbasigna .)
    entero          reduce using rule 28 (OP -> andbasigna .)
    decimal         reduce using rule 28 (OP -> andbasigna .)
    char            reduce using rule 28 (OP -> andbasigna .)
    t_scanf         reduce using rule 28 (OP -> andbasigna .)
    mas             reduce using rule 28 (OP -> andbasigna .)
    menos           reduce using rule 28 (OP -> andbasigna .)
    not             reduce using rule 28 (OP -> andbasigna .)
    notb            reduce using rule 28 (OP -> andbasigna .)
    andb            reduce using rule 28 (OP -> andbasigna .)
    incremento      reduce using rule 28 (OP -> andbasigna .)
    decremento      reduce using rule 28 (OP -> andbasigna .)
    llav1           reduce using rule 28 (OP -> andbasigna .)
    t_sizeof        reduce using rule 28 (OP -> andbasigna .)


state 31

    (29) OP -> divasigna .

    iden            reduce using rule 29 (OP -> divasigna .)
    par1            reduce using rule 29 (OP -> divasigna .)
    string          reduce using rule 29 (OP -> divasigna .)
    entero          reduce using rule 29 (OP -> divasigna .)
    decimal         reduce using rule 29 (OP -> divasigna .)
    char            reduce using rule 29 (OP -> divasigna .)
    t_scanf         reduce using rule 29 (OP -> divasigna .)
    mas             reduce using rule 29 (OP -> divasigna .)
    menos           reduce using rule 29 (OP -> divasigna .)
    not             reduce using rule 29 (OP -> divasigna .)
    notb            reduce using rule 29 (OP -> divasigna .)
    andb            reduce using rule 29 (OP -> divasigna .)
    incremento      reduce using rule 29 (OP -> divasigna .)
    decremento      reduce using rule 29 (OP -> divasigna .)
    llav1           reduce using rule 29 (OP -> divasigna .)
    t_sizeof        reduce using rule 29 (OP -> divasigna .)


state 32

    (30) OP -> masasigna .

    iden            reduce using rule 30 (OP -> masasigna .)
    par1            reduce using rule 30 (OP -> masasigna .)
    string          reduce using rule 30 (OP -> masasigna .)
    entero          reduce using rule 30 (OP -> masasigna .)
    decimal         reduce using rule 30 (OP -> masasigna .)
    char            reduce using rule 30 (OP -> masasigna .)
    t_scanf         reduce using rule 30 (OP -> masasigna .)
    mas             reduce using rule 30 (OP -> masasigna .)
    menos           reduce using rule 30 (OP -> masasigna .)
    not             reduce using rule 30 (OP -> masasigna .)
    notb            reduce using rule 30 (OP -> masasigna .)
    andb            reduce using rule 30 (OP -> masasigna .)
    incremento      reduce using rule 30 (OP -> masasigna .)
    decremento      reduce using rule 30 (OP -> masasigna .)
    llav1           reduce using rule 30 (OP -> masasigna .)
    t_sizeof        reduce using rule 30 (OP -> masasigna .)


state 33

    (31) OP -> menosasigna .

    iden            reduce using rule 31 (OP -> menosasigna .)
    par1            reduce using rule 31 (OP -> menosasigna .)
    string          reduce using rule 31 (OP -> menosasigna .)
    entero          reduce using rule 31 (OP -> menosasigna .)
    decimal         reduce using rule 31 (OP -> menosasigna .)
    char            reduce using rule 31 (OP -> menosasigna .)
    t_scanf         reduce using rule 31 (OP -> menosasigna .)
    mas             reduce using rule 31 (OP -> menosasigna .)
    menos           reduce using rule 31 (OP -> menosasigna .)
    not             reduce using rule 31 (OP -> menosasigna .)
    notb            reduce using rule 31 (OP -> menosasigna .)
    andb            reduce using rule 31 (OP -> menosasigna .)
    incremento      reduce using rule 31 (OP -> menosasigna .)
    decremento      reduce using rule 31 (OP -> menosasigna .)
    llav1           reduce using rule 31 (OP -> menosasigna .)
    t_sizeof        reduce using rule 31 (OP -> menosasigna .)


state 34

    (32) OP -> modasigna .

    iden            reduce using rule 32 (OP -> modasigna .)
    par1            reduce using rule 32 (OP -> modasigna .)
    string          reduce using rule 32 (OP -> modasigna .)
    entero          reduce using rule 32 (OP -> modasigna .)
    decimal         reduce using rule 32 (OP -> modasigna .)
    char            reduce using rule 32 (OP -> modasigna .)
    t_scanf         reduce using rule 32 (OP -> modasigna .)
    mas             reduce using rule 32 (OP -> modasigna .)
    menos           reduce using rule 32 (OP -> modasigna .)
    not             reduce using rule 32 (OP -> modasigna .)
    notb            reduce using rule 32 (OP -> modasigna .)
    andb            reduce using rule 32 (OP -> modasigna .)
    incremento      reduce using rule 32 (OP -> modasigna .)
    decremento      reduce using rule 32 (OP -> modasigna .)
    llav1           reduce using rule 32 (OP -> modasigna .)
    t_sizeof        reduce using rule 32 (OP -> modasigna .)


state 35

    (33) OP -> orbasigna .

    iden            reduce using rule 33 (OP -> orbasigna .)
    par1            reduce using rule 33 (OP -> orbasigna .)
    string          reduce using rule 33 (OP -> orbasigna .)
    entero          reduce using rule 33 (OP -> orbasigna .)
    decimal         reduce using rule 33 (OP -> orbasigna .)
    char            reduce using rule 33 (OP -> orbasigna .)
    t_scanf         reduce using rule 33 (OP -> orbasigna .)
    mas             reduce using rule 33 (OP -> orbasigna .)
    menos           reduce using rule 33 (OP -> orbasigna .)
    not             reduce using rule 33 (OP -> orbasigna .)
    notb            reduce using rule 33 (OP -> orbasigna .)
    andb            reduce using rule 33 (OP -> orbasigna .)
    incremento      reduce using rule 33 (OP -> orbasigna .)
    decremento      reduce using rule 33 (OP -> orbasigna .)
    llav1           reduce using rule 33 (OP -> orbasigna .)
    t_sizeof        reduce using rule 33 (OP -> orbasigna .)


state 36

    (34) OP -> porasigna .

    iden            reduce using rule 34 (OP -> porasigna .)
    par1            reduce using rule 34 (OP -> porasigna .)
    string          reduce using rule 34 (OP -> porasigna .)
    entero          reduce using rule 34 (OP -> porasigna .)
    decimal         reduce using rule 34 (OP -> porasigna .)
    char            reduce using rule 34 (OP -> porasigna .)
    t_scanf         reduce using rule 34 (OP -> porasigna .)
    mas             reduce using rule 34 (OP -> porasigna .)
    menos           reduce using rule 34 (OP -> porasigna .)
    not             reduce using rule 34 (OP -> porasigna .)
    notb            reduce using rule 34 (OP -> porasigna .)
    andb            reduce using rule 34 (OP -> porasigna .)
    incremento      reduce using rule 34 (OP -> porasigna .)
    decremento      reduce using rule 34 (OP -> porasigna .)
    llav1           reduce using rule 34 (OP -> porasigna .)
    t_sizeof        reduce using rule 34 (OP -> porasigna .)


state 37

    (35) OP -> shiftizqasigna .

    iden            reduce using rule 35 (OP -> shiftizqasigna .)
    par1            reduce using rule 35 (OP -> shiftizqasigna .)
    string          reduce using rule 35 (OP -> shiftizqasigna .)
    entero          reduce using rule 35 (OP -> shiftizqasigna .)
    decimal         reduce using rule 35 (OP -> shiftizqasigna .)
    char            reduce using rule 35 (OP -> shiftizqasigna .)
    t_scanf         reduce using rule 35 (OP -> shiftizqasigna .)
    mas             reduce using rule 35 (OP -> shiftizqasigna .)
    menos           reduce using rule 35 (OP -> shiftizqasigna .)
    not             reduce using rule 35 (OP -> shiftizqasigna .)
    notb            reduce using rule 35 (OP -> shiftizqasigna .)
    andb            reduce using rule 35 (OP -> shiftizqasigna .)
    incremento      reduce using rule 35 (OP -> shiftizqasigna .)
    decremento      reduce using rule 35 (OP -> shiftizqasigna .)
    llav1           reduce using rule 35 (OP -> shiftizqasigna .)
    t_sizeof        reduce using rule 35 (OP -> shiftizqasigna .)


state 38

    (36) OP -> shiftderasigna .

    iden            reduce using rule 36 (OP -> shiftderasigna .)
    par1            reduce using rule 36 (OP -> shiftderasigna .)
    string          reduce using rule 36 (OP -> shiftderasigna .)
    entero          reduce using rule 36 (OP -> shiftderasigna .)
    decimal         reduce using rule 36 (OP -> shiftderasigna .)
    char            reduce using rule 36 (OP -> shiftderasigna .)
    t_scanf         reduce using rule 36 (OP -> shiftderasigna .)
    mas             reduce using rule 36 (OP -> shiftderasigna .)
    menos           reduce using rule 36 (OP -> shiftderasigna .)
    not             reduce using rule 36 (OP -> shiftderasigna .)
    notb            reduce using rule 36 (OP -> shiftderasigna .)
    andb            reduce using rule 36 (OP -> shiftderasigna .)
    incremento      reduce using rule 36 (OP -> shiftderasigna .)
    decremento      reduce using rule 36 (OP -> shiftderasigna .)
    llav1           reduce using rule 36 (OP -> shiftderasigna .)
    t_sizeof        reduce using rule 36 (OP -> shiftderasigna .)


state 39

    (37) OP -> xorbasinga .

    iden            reduce using rule 37 (OP -> xorbasinga .)
    par1            reduce using rule 37 (OP -> xorbasinga .)
    string          reduce using rule 37 (OP -> xorbasinga .)
    entero          reduce using rule 37 (OP -> xorbasinga .)
    decimal         reduce using rule 37 (OP -> xorbasinga .)
    char            reduce using rule 37 (OP -> xorbasinga .)
    t_scanf         reduce using rule 37 (OP -> xorbasinga .)
    mas             reduce using rule 37 (OP -> xorbasinga .)
    menos           reduce using rule 37 (OP -> xorbasinga .)
    not             reduce using rule 37 (OP -> xorbasinga .)
    notb            reduce using rule 37 (OP -> xorbasinga .)
    andb            reduce using rule 37 (OP -> xorbasinga .)
    incremento      reduce using rule 37 (OP -> xorbasinga .)
    decremento      reduce using rule 37 (OP -> xorbasinga .)
    llav1           reduce using rule 37 (OP -> xorbasinga .)
    t_sizeof        reduce using rule 37 (OP -> xorbasinga .)


state 40

    (38) OP -> asigna .

    iden            reduce using rule 38 (OP -> asigna .)
    par1            reduce using rule 38 (OP -> asigna .)
    string          reduce using rule 38 (OP -> asigna .)
    entero          reduce using rule 38 (OP -> asigna .)
    decimal         reduce using rule 38 (OP -> asigna .)
    char            reduce using rule 38 (OP -> asigna .)
    t_scanf         reduce using rule 38 (OP -> asigna .)
    mas             reduce using rule 38 (OP -> asigna .)
    menos           reduce using rule 38 (OP -> asigna .)
    not             reduce using rule 38 (OP -> asigna .)
    notb            reduce using rule 38 (OP -> asigna .)
    andb            reduce using rule 38 (OP -> asigna .)
    incremento      reduce using rule 38 (OP -> asigna .)
    decremento      reduce using rule 38 (OP -> asigna .)
    llav1           reduce using rule 38 (OP -> asigna .)
    t_sizeof        reduce using rule 38 (OP -> asigna .)


state 41

    (19) LACCESO -> cor1 . EXP cor2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 74
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 42

    (56) Funcion -> t_void iden . par1 Parametros par2 BLOQUE

    par1            shift and go to state 75


state 43

    (26) ASIGNACION -> ACCESO_STRUCT OP . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    ACCESO_STRUCT                  shift and go to state 70
    EXP                            shift and go to state 76
    LLAMADA                        shift and go to state 69
    ItemsStruct2                   shift and go to state 19

state 44

    (50) ACCESO_STRUCT -> ItemsStruct2 punto . ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 78

    ItemsStruct2                   shift and go to state 77

state 45

    (20) LASIGNACION -> LASIGNACION coma ASIGNACION .

    pyc             reduce using rule 20 (LASIGNACION -> LASIGNACION coma ASIGNACION .)
    coma            reduce using rule 20 (LASIGNACION -> LASIGNACION coma ASIGNACION .)


state 46

    (10) Declaracion -> Tipos L_Dec pyc .

    error           reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_struct        reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_void          reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_char          reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_int           reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_double        reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_float         reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    iden            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    $end            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    llav2           reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_if            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_break         reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_continue      reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_switch        reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_do            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_while         reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_return        reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_goto          reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_for           reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_printf        reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    incremento      reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    decremento      reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    par1            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    string          reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    entero          reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    decimal         reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    char            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_scanf         reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    mas             reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    menos           reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    not             reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    notb            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    andb            reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    llav1           reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_sizeof        reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_default       reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)
    t_case          reduce using rule 10 (Declaracion -> Tipos L_Dec pyc .)


state 47

    (11) L_Dec -> L_Dec coma . Dec
    (13) Dec -> . iden
    (14) Dec -> . iden asigna EXP
    (15) Dec -> . iden cor1 cor2 asigna EXP
    (16) Dec -> . iden LACCESO
    (17) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 80

    Dec                            shift and go to state 79

state 48

    (55) Funcion -> Tipos iden par1 . Parametros par2 BLOQUE
    (57) Parametros -> .
    (58) Parametros -> . Parametros coma Parametro
    (59) Parametros -> . Parametro
    (112) Parametro -> . Tipos iden
    (113) Parametro -> . Tipos iden LACCESO
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float

    par2            reduce using rule 57 (Parametros -> .)
    coma            reduce using rule 57 (Parametros -> .)
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17

    Tipos                          shift and go to state 81
    Parametros                     shift and go to state 82
    Parametro                      shift and go to state 83

state 49

    (14) Dec -> iden asigna . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 84
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 50

    (15) Dec -> iden cor1 . cor2 asigna EXP
    (19) LACCESO -> cor1 . EXP cor2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    cor2            shift and go to state 85
    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 74
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 51

    (16) Dec -> iden LACCESO .
    (17) Dec -> iden LACCESO . asigna EXP
    (18) LACCESO -> LACCESO . cor1 EXP cor2

    pyc             reduce using rule 16 (Dec -> iden LACCESO .)
    coma            reduce using rule 16 (Dec -> iden LACCESO .)
    asigna          shift and go to state 86
    cor1            shift and go to state 73


state 52

    (39) STRUCT -> t_struct iden llav1 . ATRIBUTOS llav2
    (40) ATRIBUTOS -> . ATRIBUTOS ATRIBUTO
    (41) ATRIBUTOS -> . ATRIBUTO
    (42) ATRIBUTO -> . Tipos LItemsStruct pyc
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float

    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17

    ATRIBUTOS                      shift and go to state 87
    ATRIBUTO                       shift and go to state 88
    Tipos                          shift and go to state 89

state 53

    (129) EXP -> iden . LACCESO
    (137) EXP -> iden .
    (114) LLAMADA -> iden . par1 ELEMENTS par2
    (115) LLAMADA -> iden . par1 par2
    (48) ItemsStruct2 -> iden .
    (49) ItemsStruct2 -> iden . LACCESO
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    mas             reduce using rule 137 (EXP -> iden .)
    menos           reduce using rule 137 (EXP -> iden .)
    por             reduce using rule 137 (EXP -> iden .)
    division        reduce using rule 137 (EXP -> iden .)
    modulo          reduce using rule 137 (EXP -> iden .)
    mayor           reduce using rule 137 (EXP -> iden .)
    mayori          reduce using rule 137 (EXP -> iden .)
    menor           reduce using rule 137 (EXP -> iden .)
    menori          reduce using rule 137 (EXP -> iden .)
    igual           reduce using rule 137 (EXP -> iden .)
    diferente       reduce using rule 137 (EXP -> iden .)
    and             reduce using rule 137 (EXP -> iden .)
    or              reduce using rule 137 (EXP -> iden .)
    shiftizq        reduce using rule 137 (EXP -> iden .)
    shiftder        reduce using rule 137 (EXP -> iden .)
    andb            reduce using rule 137 (EXP -> iden .)
    xorb            reduce using rule 137 (EXP -> iden .)
    orb             reduce using rule 137 (EXP -> iden .)
    condicional     reduce using rule 137 (EXP -> iden .)
    incremento      reduce using rule 137 (EXP -> iden .)
    decremento      reduce using rule 137 (EXP -> iden .)
    pyc             reduce using rule 137 (EXP -> iden .)
    coma            reduce using rule 137 (EXP -> iden .)
    cor2            reduce using rule 137 (EXP -> iden .)
    par2            reduce using rule 137 (EXP -> iden .)
    llav2           reduce using rule 137 (EXP -> iden .)
    bipunto         reduce using rule 137 (EXP -> iden .)
    par1            shift and go to state 91
    punto           reduce using rule 48 (ItemsStruct2 -> iden .)
    cor1            shift and go to state 41

    LACCESO                        shift and go to state 90

state 54

    (23) ASIGNACION -> iden OP EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 23 (ASIGNACION -> iden OP EXP .)
    coma            reduce using rule 23 (ASIGNACION -> iden OP EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 55

    (145) EXP -> mas . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 113
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 56

    (146) EXP -> menos . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 114
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 57

    (130) EXP -> par1 . t_char par2 EXP
    (131) EXP -> par1 . t_int par2 EXP
    (132) EXP -> par1 . t_float par2 EXP
    (138) EXP -> par1 . EXP par2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    t_char          shift and go to state 115
    t_int           shift and go to state 117
    t_float         shift and go to state 118
    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 116
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 58

    (133) EXP -> string .

    mas             reduce using rule 133 (EXP -> string .)
    menos           reduce using rule 133 (EXP -> string .)
    por             reduce using rule 133 (EXP -> string .)
    division        reduce using rule 133 (EXP -> string .)
    modulo          reduce using rule 133 (EXP -> string .)
    mayor           reduce using rule 133 (EXP -> string .)
    mayori          reduce using rule 133 (EXP -> string .)
    menor           reduce using rule 133 (EXP -> string .)
    menori          reduce using rule 133 (EXP -> string .)
    igual           reduce using rule 133 (EXP -> string .)
    diferente       reduce using rule 133 (EXP -> string .)
    and             reduce using rule 133 (EXP -> string .)
    or              reduce using rule 133 (EXP -> string .)
    shiftizq        reduce using rule 133 (EXP -> string .)
    shiftder        reduce using rule 133 (EXP -> string .)
    andb            reduce using rule 133 (EXP -> string .)
    xorb            reduce using rule 133 (EXP -> string .)
    orb             reduce using rule 133 (EXP -> string .)
    condicional     reduce using rule 133 (EXP -> string .)
    incremento      reduce using rule 133 (EXP -> string .)
    decremento      reduce using rule 133 (EXP -> string .)
    pyc             reduce using rule 133 (EXP -> string .)
    coma            reduce using rule 133 (EXP -> string .)
    cor2            reduce using rule 133 (EXP -> string .)
    par2            reduce using rule 133 (EXP -> string .)
    llav2           reduce using rule 133 (EXP -> string .)
    bipunto         reduce using rule 133 (EXP -> string .)


state 59

    (134) EXP -> entero .

    mas             reduce using rule 134 (EXP -> entero .)
    menos           reduce using rule 134 (EXP -> entero .)
    por             reduce using rule 134 (EXP -> entero .)
    division        reduce using rule 134 (EXP -> entero .)
    modulo          reduce using rule 134 (EXP -> entero .)
    mayor           reduce using rule 134 (EXP -> entero .)
    mayori          reduce using rule 134 (EXP -> entero .)
    menor           reduce using rule 134 (EXP -> entero .)
    menori          reduce using rule 134 (EXP -> entero .)
    igual           reduce using rule 134 (EXP -> entero .)
    diferente       reduce using rule 134 (EXP -> entero .)
    and             reduce using rule 134 (EXP -> entero .)
    or              reduce using rule 134 (EXP -> entero .)
    shiftizq        reduce using rule 134 (EXP -> entero .)
    shiftder        reduce using rule 134 (EXP -> entero .)
    andb            reduce using rule 134 (EXP -> entero .)
    xorb            reduce using rule 134 (EXP -> entero .)
    orb             reduce using rule 134 (EXP -> entero .)
    condicional     reduce using rule 134 (EXP -> entero .)
    incremento      reduce using rule 134 (EXP -> entero .)
    decremento      reduce using rule 134 (EXP -> entero .)
    pyc             reduce using rule 134 (EXP -> entero .)
    coma            reduce using rule 134 (EXP -> entero .)
    cor2            reduce using rule 134 (EXP -> entero .)
    par2            reduce using rule 134 (EXP -> entero .)
    llav2           reduce using rule 134 (EXP -> entero .)
    bipunto         reduce using rule 134 (EXP -> entero .)


state 60

    (135) EXP -> decimal .

    mas             reduce using rule 135 (EXP -> decimal .)
    menos           reduce using rule 135 (EXP -> decimal .)
    por             reduce using rule 135 (EXP -> decimal .)
    division        reduce using rule 135 (EXP -> decimal .)
    modulo          reduce using rule 135 (EXP -> decimal .)
    mayor           reduce using rule 135 (EXP -> decimal .)
    mayori          reduce using rule 135 (EXP -> decimal .)
    menor           reduce using rule 135 (EXP -> decimal .)
    menori          reduce using rule 135 (EXP -> decimal .)
    igual           reduce using rule 135 (EXP -> decimal .)
    diferente       reduce using rule 135 (EXP -> decimal .)
    and             reduce using rule 135 (EXP -> decimal .)
    or              reduce using rule 135 (EXP -> decimal .)
    shiftizq        reduce using rule 135 (EXP -> decimal .)
    shiftder        reduce using rule 135 (EXP -> decimal .)
    andb            reduce using rule 135 (EXP -> decimal .)
    xorb            reduce using rule 135 (EXP -> decimal .)
    orb             reduce using rule 135 (EXP -> decimal .)
    condicional     reduce using rule 135 (EXP -> decimal .)
    incremento      reduce using rule 135 (EXP -> decimal .)
    decremento      reduce using rule 135 (EXP -> decimal .)
    pyc             reduce using rule 135 (EXP -> decimal .)
    coma            reduce using rule 135 (EXP -> decimal .)
    cor2            reduce using rule 135 (EXP -> decimal .)
    par2            reduce using rule 135 (EXP -> decimal .)
    llav2           reduce using rule 135 (EXP -> decimal .)
    bipunto         reduce using rule 135 (EXP -> decimal .)


state 61

    (136) EXP -> char .

    mas             reduce using rule 136 (EXP -> char .)
    menos           reduce using rule 136 (EXP -> char .)
    por             reduce using rule 136 (EXP -> char .)
    division        reduce using rule 136 (EXP -> char .)
    modulo          reduce using rule 136 (EXP -> char .)
    mayor           reduce using rule 136 (EXP -> char .)
    mayori          reduce using rule 136 (EXP -> char .)
    menor           reduce using rule 136 (EXP -> char .)
    menori          reduce using rule 136 (EXP -> char .)
    igual           reduce using rule 136 (EXP -> char .)
    diferente       reduce using rule 136 (EXP -> char .)
    and             reduce using rule 136 (EXP -> char .)
    or              reduce using rule 136 (EXP -> char .)
    shiftizq        reduce using rule 136 (EXP -> char .)
    shiftder        reduce using rule 136 (EXP -> char .)
    andb            reduce using rule 136 (EXP -> char .)
    xorb            reduce using rule 136 (EXP -> char .)
    orb             reduce using rule 136 (EXP -> char .)
    condicional     reduce using rule 136 (EXP -> char .)
    incremento      reduce using rule 136 (EXP -> char .)
    decremento      reduce using rule 136 (EXP -> char .)
    pyc             reduce using rule 136 (EXP -> char .)
    coma            reduce using rule 136 (EXP -> char .)
    cor2            reduce using rule 136 (EXP -> char .)
    par2            reduce using rule 136 (EXP -> char .)
    llav2           reduce using rule 136 (EXP -> char .)
    bipunto         reduce using rule 136 (EXP -> char .)


state 62

    (149) EXP -> andb . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 119
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 63

    (144) EXP -> t_scanf . par1 par2

    par1            shift and go to state 120


state 64

    (147) EXP -> not . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 121
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 65

    (148) EXP -> notb . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 122
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 66

    (154) EXP -> incremento . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 123
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 67

    (155) EXP -> decremento . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 124
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 68

    (159) EXP -> llav1 . ELEMENTS llav2
    (160) ELEMENTS -> . ELEMENTS coma EXP
    (161) ELEMENTS -> . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    ELEMENTS                       shift and go to state 125
    EXP                            shift and go to state 126
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 69

    (162) EXP -> LLAMADA .

    mas             reduce using rule 162 (EXP -> LLAMADA .)
    menos           reduce using rule 162 (EXP -> LLAMADA .)
    por             reduce using rule 162 (EXP -> LLAMADA .)
    division        reduce using rule 162 (EXP -> LLAMADA .)
    modulo          reduce using rule 162 (EXP -> LLAMADA .)
    mayor           reduce using rule 162 (EXP -> LLAMADA .)
    mayori          reduce using rule 162 (EXP -> LLAMADA .)
    menor           reduce using rule 162 (EXP -> LLAMADA .)
    menori          reduce using rule 162 (EXP -> LLAMADA .)
    igual           reduce using rule 162 (EXP -> LLAMADA .)
    diferente       reduce using rule 162 (EXP -> LLAMADA .)
    and             reduce using rule 162 (EXP -> LLAMADA .)
    or              reduce using rule 162 (EXP -> LLAMADA .)
    shiftizq        reduce using rule 162 (EXP -> LLAMADA .)
    shiftder        reduce using rule 162 (EXP -> LLAMADA .)
    andb            reduce using rule 162 (EXP -> LLAMADA .)
    xorb            reduce using rule 162 (EXP -> LLAMADA .)
    orb             reduce using rule 162 (EXP -> LLAMADA .)
    condicional     reduce using rule 162 (EXP -> LLAMADA .)
    incremento      reduce using rule 162 (EXP -> LLAMADA .)
    decremento      reduce using rule 162 (EXP -> LLAMADA .)
    pyc             reduce using rule 162 (EXP -> LLAMADA .)
    coma            reduce using rule 162 (EXP -> LLAMADA .)
    cor2            reduce using rule 162 (EXP -> LLAMADA .)
    par2            reduce using rule 162 (EXP -> LLAMADA .)
    llav2           reduce using rule 162 (EXP -> LLAMADA .)
    bipunto         reduce using rule 162 (EXP -> LLAMADA .)


state 70

    (163) EXP -> ACCESO_STRUCT .

    mas             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    menos           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    por             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    division        reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    modulo          reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    mayor           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    mayori          reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    menor           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    menori          reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    igual           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    diferente       reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    and             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    or              reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    shiftizq        reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    shiftder        reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    andb            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    xorb            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    orb             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    condicional     reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    incremento      reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    decremento      reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    pyc             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    coma            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    cor2            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    par2            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    llav2           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    bipunto         reduce using rule 163 (EXP -> ACCESO_STRUCT .)


state 71

    (164) EXP -> t_sizeof . par1 EXP par2

    par1            shift and go to state 127


state 72

    (25) ASIGNACION -> iden LACCESO OP . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 128
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 73

    (18) LACCESO -> LACCESO cor1 . EXP cor2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 129
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 74

    (19) LACCESO -> cor1 EXP . cor2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    cor2            shift and go to state 130
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 75

    (56) Funcion -> t_void iden par1 . Parametros par2 BLOQUE
    (57) Parametros -> .
    (58) Parametros -> . Parametros coma Parametro
    (59) Parametros -> . Parametro
    (112) Parametro -> . Tipos iden
    (113) Parametro -> . Tipos iden LACCESO
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float

    par2            reduce using rule 57 (Parametros -> .)
    coma            reduce using rule 57 (Parametros -> .)
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17

    Parametros                     shift and go to state 131
    Parametro                      shift and go to state 83
    Tipos                          shift and go to state 81

state 76

    (26) ASIGNACION -> ACCESO_STRUCT OP EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 26 (ASIGNACION -> ACCESO_STRUCT OP EXP .)
    coma            reduce using rule 26 (ASIGNACION -> ACCESO_STRUCT OP EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 77

    (50) ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .

    andbasigna      reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    divasigna       reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    masasigna       reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menosasigna     reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    modasigna       reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    orbasigna       reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    porasigna       reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftizqasigna  reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftderasigna  reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    xorbasinga      reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    asigna          reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    pyc             reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    coma            reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    mas             reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menos           reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    por             reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    division        reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    modulo          reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    mayor           reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    mayori          reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menor           reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menori          reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    igual           reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    diferente       reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    and             reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    or              reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftizq        reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftder        reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    andb            reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    xorb            reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    orb             reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    condicional     reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    incremento      reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    decremento      reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    cor2            reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    par2            reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    llav2           reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    bipunto         reduce using rule 50 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)


state 78

    (48) ItemsStruct2 -> iden .
    (49) ItemsStruct2 -> iden . LACCESO
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    andbasigna      reduce using rule 48 (ItemsStruct2 -> iden .)
    divasigna       reduce using rule 48 (ItemsStruct2 -> iden .)
    masasigna       reduce using rule 48 (ItemsStruct2 -> iden .)
    menosasigna     reduce using rule 48 (ItemsStruct2 -> iden .)
    modasigna       reduce using rule 48 (ItemsStruct2 -> iden .)
    orbasigna       reduce using rule 48 (ItemsStruct2 -> iden .)
    porasigna       reduce using rule 48 (ItemsStruct2 -> iden .)
    shiftizqasigna  reduce using rule 48 (ItemsStruct2 -> iden .)
    shiftderasigna  reduce using rule 48 (ItemsStruct2 -> iden .)
    xorbasinga      reduce using rule 48 (ItemsStruct2 -> iden .)
    asigna          reduce using rule 48 (ItemsStruct2 -> iden .)
    pyc             reduce using rule 48 (ItemsStruct2 -> iden .)
    coma            reduce using rule 48 (ItemsStruct2 -> iden .)
    mas             reduce using rule 48 (ItemsStruct2 -> iden .)
    menos           reduce using rule 48 (ItemsStruct2 -> iden .)
    por             reduce using rule 48 (ItemsStruct2 -> iden .)
    division        reduce using rule 48 (ItemsStruct2 -> iden .)
    modulo          reduce using rule 48 (ItemsStruct2 -> iden .)
    mayor           reduce using rule 48 (ItemsStruct2 -> iden .)
    mayori          reduce using rule 48 (ItemsStruct2 -> iden .)
    menor           reduce using rule 48 (ItemsStruct2 -> iden .)
    menori          reduce using rule 48 (ItemsStruct2 -> iden .)
    igual           reduce using rule 48 (ItemsStruct2 -> iden .)
    diferente       reduce using rule 48 (ItemsStruct2 -> iden .)
    and             reduce using rule 48 (ItemsStruct2 -> iden .)
    or              reduce using rule 48 (ItemsStruct2 -> iden .)
    shiftizq        reduce using rule 48 (ItemsStruct2 -> iden .)
    shiftder        reduce using rule 48 (ItemsStruct2 -> iden .)
    andb            reduce using rule 48 (ItemsStruct2 -> iden .)
    xorb            reduce using rule 48 (ItemsStruct2 -> iden .)
    orb             reduce using rule 48 (ItemsStruct2 -> iden .)
    condicional     reduce using rule 48 (ItemsStruct2 -> iden .)
    incremento      reduce using rule 48 (ItemsStruct2 -> iden .)
    decremento      reduce using rule 48 (ItemsStruct2 -> iden .)
    cor2            reduce using rule 48 (ItemsStruct2 -> iden .)
    par2            reduce using rule 48 (ItemsStruct2 -> iden .)
    llav2           reduce using rule 48 (ItemsStruct2 -> iden .)
    bipunto         reduce using rule 48 (ItemsStruct2 -> iden .)
    cor1            shift and go to state 41

    LACCESO                        shift and go to state 132

state 79

    (11) L_Dec -> L_Dec coma Dec .

    pyc             reduce using rule 11 (L_Dec -> L_Dec coma Dec .)
    coma            reduce using rule 11 (L_Dec -> L_Dec coma Dec .)


state 80

    (13) Dec -> iden .
    (14) Dec -> iden . asigna EXP
    (15) Dec -> iden . cor1 cor2 asigna EXP
    (16) Dec -> iden . LACCESO
    (17) Dec -> iden . LACCESO asigna EXP
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 13 (Dec -> iden .)
    coma            reduce using rule 13 (Dec -> iden .)
    asigna          shift and go to state 49
    cor1            shift and go to state 50

    LACCESO                        shift and go to state 51

state 81

    (112) Parametro -> Tipos . iden
    (113) Parametro -> Tipos . iden LACCESO

    iden            shift and go to state 133


state 82

    (55) Funcion -> Tipos iden par1 Parametros . par2 BLOQUE
    (58) Parametros -> Parametros . coma Parametro

    par2            shift and go to state 134
    coma            shift and go to state 135


state 83

    (59) Parametros -> Parametro .

    par2            reduce using rule 59 (Parametros -> Parametro .)
    coma            reduce using rule 59 (Parametros -> Parametro .)


state 84

    (14) Dec -> iden asigna EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 14 (Dec -> iden asigna EXP .)
    coma            reduce using rule 14 (Dec -> iden asigna EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 85

    (15) Dec -> iden cor1 cor2 . asigna EXP

    asigna          shift and go to state 136


state 86

    (17) Dec -> iden LACCESO asigna . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 137
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 87

    (39) STRUCT -> t_struct iden llav1 ATRIBUTOS . llav2
    (40) ATRIBUTOS -> ATRIBUTOS . ATRIBUTO
    (42) ATRIBUTO -> . Tipos LItemsStruct pyc
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float

    llav2           shift and go to state 138
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17

    ATRIBUTO                       shift and go to state 139
    Tipos                          shift and go to state 89

state 88

    (41) ATRIBUTOS -> ATRIBUTO .

    llav2           reduce using rule 41 (ATRIBUTOS -> ATRIBUTO .)
    t_char          reduce using rule 41 (ATRIBUTOS -> ATRIBUTO .)
    t_int           reduce using rule 41 (ATRIBUTOS -> ATRIBUTO .)
    t_double        reduce using rule 41 (ATRIBUTOS -> ATRIBUTO .)
    t_float         reduce using rule 41 (ATRIBUTOS -> ATRIBUTO .)


state 89

    (42) ATRIBUTO -> Tipos . LItemsStruct pyc
    (43) LItemsStruct -> . LItemsStruct coma ItemsStruct
    (44) LItemsStruct -> . ItemsStruct
    (45) ItemsStruct -> . iden
    (46) ItemsStruct -> . iden LACCESO
    (47) ItemsStruct -> . iden cor1 cor2

    iden            shift and go to state 142

    LItemsStruct                   shift and go to state 140
    ItemsStruct                    shift and go to state 141

state 90

    (129) EXP -> iden LACCESO .
    (49) ItemsStruct2 -> iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2

    mas             reduce using rule 129 (EXP -> iden LACCESO .)
    menos           reduce using rule 129 (EXP -> iden LACCESO .)
    por             reduce using rule 129 (EXP -> iden LACCESO .)
    division        reduce using rule 129 (EXP -> iden LACCESO .)
    modulo          reduce using rule 129 (EXP -> iden LACCESO .)
    mayor           reduce using rule 129 (EXP -> iden LACCESO .)
    mayori          reduce using rule 129 (EXP -> iden LACCESO .)
    menor           reduce using rule 129 (EXP -> iden LACCESO .)
    menori          reduce using rule 129 (EXP -> iden LACCESO .)
    igual           reduce using rule 129 (EXP -> iden LACCESO .)
    diferente       reduce using rule 129 (EXP -> iden LACCESO .)
    and             reduce using rule 129 (EXP -> iden LACCESO .)
    or              reduce using rule 129 (EXP -> iden LACCESO .)
    shiftizq        reduce using rule 129 (EXP -> iden LACCESO .)
    shiftder        reduce using rule 129 (EXP -> iden LACCESO .)
    andb            reduce using rule 129 (EXP -> iden LACCESO .)
    xorb            reduce using rule 129 (EXP -> iden LACCESO .)
    orb             reduce using rule 129 (EXP -> iden LACCESO .)
    condicional     reduce using rule 129 (EXP -> iden LACCESO .)
    incremento      reduce using rule 129 (EXP -> iden LACCESO .)
    decremento      reduce using rule 129 (EXP -> iden LACCESO .)
    pyc             reduce using rule 129 (EXP -> iden LACCESO .)
    coma            reduce using rule 129 (EXP -> iden LACCESO .)
    cor2            reduce using rule 129 (EXP -> iden LACCESO .)
    par2            reduce using rule 129 (EXP -> iden LACCESO .)
    llav2           reduce using rule 129 (EXP -> iden LACCESO .)
    bipunto         reduce using rule 129 (EXP -> iden LACCESO .)
    punto           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    cor1            shift and go to state 73


state 91

    (114) LLAMADA -> iden par1 . ELEMENTS par2
    (115) LLAMADA -> iden par1 . par2
    (160) ELEMENTS -> . ELEMENTS coma EXP
    (161) ELEMENTS -> . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    par2            shift and go to state 144
    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    ELEMENTS                       shift and go to state 143
    EXP                            shift and go to state 126
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 92

    (116) EXP -> EXP mas . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 145
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 93

    (117) EXP -> EXP menos . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 146
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 94

    (118) EXP -> EXP por . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 147
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 95

    (119) EXP -> EXP division . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 148
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 96

    (120) EXP -> EXP modulo . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 149
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 97

    (121) EXP -> EXP mayor . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 150
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 98

    (122) EXP -> EXP mayori . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 151
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 99

    (123) EXP -> EXP menor . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 152
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 100

    (124) EXP -> EXP menori . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 153
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 101

    (125) EXP -> EXP igual . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 154
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 102

    (126) EXP -> EXP diferente . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 155
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 103

    (127) EXP -> EXP and . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 156
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 104

    (128) EXP -> EXP or . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 157
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 105

    (139) EXP -> EXP shiftizq . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 158
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 106

    (140) EXP -> EXP shiftder . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 159
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 107

    (141) EXP -> EXP andb . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 160
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 108

    (142) EXP -> EXP xorb . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 161
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 109

    (143) EXP -> EXP orb . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 162
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 110

    (156) EXP -> EXP condicional . EXP bipunto EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 163
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 111

    (157) EXP -> EXP incremento .

    mas             reduce using rule 157 (EXP -> EXP incremento .)
    menos           reduce using rule 157 (EXP -> EXP incremento .)
    por             reduce using rule 157 (EXP -> EXP incremento .)
    division        reduce using rule 157 (EXP -> EXP incremento .)
    modulo          reduce using rule 157 (EXP -> EXP incremento .)
    mayor           reduce using rule 157 (EXP -> EXP incremento .)
    mayori          reduce using rule 157 (EXP -> EXP incremento .)
    menor           reduce using rule 157 (EXP -> EXP incremento .)
    menori          reduce using rule 157 (EXP -> EXP incremento .)
    igual           reduce using rule 157 (EXP -> EXP incremento .)
    diferente       reduce using rule 157 (EXP -> EXP incremento .)
    and             reduce using rule 157 (EXP -> EXP incremento .)
    or              reduce using rule 157 (EXP -> EXP incremento .)
    shiftizq        reduce using rule 157 (EXP -> EXP incremento .)
    shiftder        reduce using rule 157 (EXP -> EXP incremento .)
    andb            reduce using rule 157 (EXP -> EXP incremento .)
    xorb            reduce using rule 157 (EXP -> EXP incremento .)
    orb             reduce using rule 157 (EXP -> EXP incremento .)
    condicional     reduce using rule 157 (EXP -> EXP incremento .)
    incremento      reduce using rule 157 (EXP -> EXP incremento .)
    decremento      reduce using rule 157 (EXP -> EXP incremento .)
    pyc             reduce using rule 157 (EXP -> EXP incremento .)
    coma            reduce using rule 157 (EXP -> EXP incremento .)
    cor2            reduce using rule 157 (EXP -> EXP incremento .)
    par2            reduce using rule 157 (EXP -> EXP incremento .)
    llav2           reduce using rule 157 (EXP -> EXP incremento .)
    bipunto         reduce using rule 157 (EXP -> EXP incremento .)


state 112

    (158) EXP -> EXP decremento .

    mas             reduce using rule 158 (EXP -> EXP decremento .)
    menos           reduce using rule 158 (EXP -> EXP decremento .)
    por             reduce using rule 158 (EXP -> EXP decremento .)
    division        reduce using rule 158 (EXP -> EXP decremento .)
    modulo          reduce using rule 158 (EXP -> EXP decremento .)
    mayor           reduce using rule 158 (EXP -> EXP decremento .)
    mayori          reduce using rule 158 (EXP -> EXP decremento .)
    menor           reduce using rule 158 (EXP -> EXP decremento .)
    menori          reduce using rule 158 (EXP -> EXP decremento .)
    igual           reduce using rule 158 (EXP -> EXP decremento .)
    diferente       reduce using rule 158 (EXP -> EXP decremento .)
    and             reduce using rule 158 (EXP -> EXP decremento .)
    or              reduce using rule 158 (EXP -> EXP decremento .)
    shiftizq        reduce using rule 158 (EXP -> EXP decremento .)
    shiftder        reduce using rule 158 (EXP -> EXP decremento .)
    andb            reduce using rule 158 (EXP -> EXP decremento .)
    xorb            reduce using rule 158 (EXP -> EXP decremento .)
    orb             reduce using rule 158 (EXP -> EXP decremento .)
    condicional     reduce using rule 158 (EXP -> EXP decremento .)
    incremento      reduce using rule 158 (EXP -> EXP decremento .)
    decremento      reduce using rule 158 (EXP -> EXP decremento .)
    pyc             reduce using rule 158 (EXP -> EXP decremento .)
    coma            reduce using rule 158 (EXP -> EXP decremento .)
    cor2            reduce using rule 158 (EXP -> EXP decremento .)
    par2            reduce using rule 158 (EXP -> EXP decremento .)
    llav2           reduce using rule 158 (EXP -> EXP decremento .)
    bipunto         reduce using rule 158 (EXP -> EXP decremento .)


state 113

    (145) EXP -> mas EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 145 (EXP -> mas EXP .)
    menos           reduce using rule 145 (EXP -> mas EXP .)
    mayor           reduce using rule 145 (EXP -> mas EXP .)
    mayori          reduce using rule 145 (EXP -> mas EXP .)
    menor           reduce using rule 145 (EXP -> mas EXP .)
    menori          reduce using rule 145 (EXP -> mas EXP .)
    igual           reduce using rule 145 (EXP -> mas EXP .)
    diferente       reduce using rule 145 (EXP -> mas EXP .)
    and             reduce using rule 145 (EXP -> mas EXP .)
    or              reduce using rule 145 (EXP -> mas EXP .)
    shiftizq        reduce using rule 145 (EXP -> mas EXP .)
    shiftder        reduce using rule 145 (EXP -> mas EXP .)
    andb            reduce using rule 145 (EXP -> mas EXP .)
    xorb            reduce using rule 145 (EXP -> mas EXP .)
    orb             reduce using rule 145 (EXP -> mas EXP .)
    condicional     reduce using rule 145 (EXP -> mas EXP .)
    pyc             reduce using rule 145 (EXP -> mas EXP .)
    coma            reduce using rule 145 (EXP -> mas EXP .)
    cor2            reduce using rule 145 (EXP -> mas EXP .)
    par2            reduce using rule 145 (EXP -> mas EXP .)
    llav2           reduce using rule 145 (EXP -> mas EXP .)
    bipunto         reduce using rule 145 (EXP -> mas EXP .)
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! por             [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! division        [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! modulo          [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! incremento      [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! decremento      [ reduce using rule 145 (EXP -> mas EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 114

    (146) EXP -> menos EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 146 (EXP -> menos EXP .)
    menos           reduce using rule 146 (EXP -> menos EXP .)
    mayor           reduce using rule 146 (EXP -> menos EXP .)
    mayori          reduce using rule 146 (EXP -> menos EXP .)
    menor           reduce using rule 146 (EXP -> menos EXP .)
    menori          reduce using rule 146 (EXP -> menos EXP .)
    igual           reduce using rule 146 (EXP -> menos EXP .)
    diferente       reduce using rule 146 (EXP -> menos EXP .)
    and             reduce using rule 146 (EXP -> menos EXP .)
    or              reduce using rule 146 (EXP -> menos EXP .)
    shiftizq        reduce using rule 146 (EXP -> menos EXP .)
    shiftder        reduce using rule 146 (EXP -> menos EXP .)
    andb            reduce using rule 146 (EXP -> menos EXP .)
    xorb            reduce using rule 146 (EXP -> menos EXP .)
    orb             reduce using rule 146 (EXP -> menos EXP .)
    condicional     reduce using rule 146 (EXP -> menos EXP .)
    pyc             reduce using rule 146 (EXP -> menos EXP .)
    coma            reduce using rule 146 (EXP -> menos EXP .)
    cor2            reduce using rule 146 (EXP -> menos EXP .)
    par2            reduce using rule 146 (EXP -> menos EXP .)
    llav2           reduce using rule 146 (EXP -> menos EXP .)
    bipunto         reduce using rule 146 (EXP -> menos EXP .)
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! por             [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! division        [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! modulo          [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! incremento      [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! decremento      [ reduce using rule 146 (EXP -> menos EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 115

    (130) EXP -> par1 t_char . par2 EXP

    par2            shift and go to state 164


state 116

    (138) EXP -> par1 EXP . par2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 165
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 117

    (131) EXP -> par1 t_int . par2 EXP

    par2            shift and go to state 166


state 118

    (132) EXP -> par1 t_float . par2 EXP

    par2            shift and go to state 167


state 119

    (149) EXP -> andb EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    and             reduce using rule 149 (EXP -> andb EXP .)
    or              reduce using rule 149 (EXP -> andb EXP .)
    andb            reduce using rule 149 (EXP -> andb EXP .)
    xorb            reduce using rule 149 (EXP -> andb EXP .)
    orb             reduce using rule 149 (EXP -> andb EXP .)
    condicional     reduce using rule 149 (EXP -> andb EXP .)
    pyc             reduce using rule 149 (EXP -> andb EXP .)
    coma            reduce using rule 149 (EXP -> andb EXP .)
    cor2            reduce using rule 149 (EXP -> andb EXP .)
    par2            reduce using rule 149 (EXP -> andb EXP .)
    llav2           reduce using rule 149 (EXP -> andb EXP .)
    bipunto         reduce using rule 149 (EXP -> andb EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! menos           [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! por             [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! division        [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! modulo          [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! mayor           [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! mayori          [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! menor           [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! menori          [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! igual           [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! diferente       [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! shiftizq        [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! shiftder        [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! incremento      [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! decremento      [ reduce using rule 149 (EXP -> andb EXP .) ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 120

    (144) EXP -> t_scanf par1 . par2

    par2            shift and go to state 168


state 121

    (147) EXP -> not EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 147 (EXP -> not EXP .)
    menos           reduce using rule 147 (EXP -> not EXP .)
    por             reduce using rule 147 (EXP -> not EXP .)
    division        reduce using rule 147 (EXP -> not EXP .)
    modulo          reduce using rule 147 (EXP -> not EXP .)
    mayor           reduce using rule 147 (EXP -> not EXP .)
    mayori          reduce using rule 147 (EXP -> not EXP .)
    menor           reduce using rule 147 (EXP -> not EXP .)
    menori          reduce using rule 147 (EXP -> not EXP .)
    igual           reduce using rule 147 (EXP -> not EXP .)
    diferente       reduce using rule 147 (EXP -> not EXP .)
    and             reduce using rule 147 (EXP -> not EXP .)
    or              reduce using rule 147 (EXP -> not EXP .)
    shiftizq        reduce using rule 147 (EXP -> not EXP .)
    shiftder        reduce using rule 147 (EXP -> not EXP .)
    andb            reduce using rule 147 (EXP -> not EXP .)
    xorb            reduce using rule 147 (EXP -> not EXP .)
    orb             reduce using rule 147 (EXP -> not EXP .)
    condicional     reduce using rule 147 (EXP -> not EXP .)
    pyc             reduce using rule 147 (EXP -> not EXP .)
    coma            reduce using rule 147 (EXP -> not EXP .)
    cor2            reduce using rule 147 (EXP -> not EXP .)
    par2            reduce using rule 147 (EXP -> not EXP .)
    llav2           reduce using rule 147 (EXP -> not EXP .)
    bipunto         reduce using rule 147 (EXP -> not EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 147 (EXP -> not EXP .) ]
  ! decremento      [ reduce using rule 147 (EXP -> not EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 122

    (148) EXP -> notb EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 148 (EXP -> notb EXP .)
    menos           reduce using rule 148 (EXP -> notb EXP .)
    por             reduce using rule 148 (EXP -> notb EXP .)
    division        reduce using rule 148 (EXP -> notb EXP .)
    modulo          reduce using rule 148 (EXP -> notb EXP .)
    mayor           reduce using rule 148 (EXP -> notb EXP .)
    mayori          reduce using rule 148 (EXP -> notb EXP .)
    menor           reduce using rule 148 (EXP -> notb EXP .)
    menori          reduce using rule 148 (EXP -> notb EXP .)
    igual           reduce using rule 148 (EXP -> notb EXP .)
    diferente       reduce using rule 148 (EXP -> notb EXP .)
    and             reduce using rule 148 (EXP -> notb EXP .)
    or              reduce using rule 148 (EXP -> notb EXP .)
    shiftizq        reduce using rule 148 (EXP -> notb EXP .)
    shiftder        reduce using rule 148 (EXP -> notb EXP .)
    andb            reduce using rule 148 (EXP -> notb EXP .)
    xorb            reduce using rule 148 (EXP -> notb EXP .)
    orb             reduce using rule 148 (EXP -> notb EXP .)
    condicional     reduce using rule 148 (EXP -> notb EXP .)
    pyc             reduce using rule 148 (EXP -> notb EXP .)
    coma            reduce using rule 148 (EXP -> notb EXP .)
    cor2            reduce using rule 148 (EXP -> notb EXP .)
    par2            reduce using rule 148 (EXP -> notb EXP .)
    llav2           reduce using rule 148 (EXP -> notb EXP .)
    bipunto         reduce using rule 148 (EXP -> notb EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 148 (EXP -> notb EXP .) ]
  ! decremento      [ reduce using rule 148 (EXP -> notb EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 123

    (154) EXP -> incremento EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 154 (EXP -> incremento EXP .)
    menos           reduce using rule 154 (EXP -> incremento EXP .)
    por             reduce using rule 154 (EXP -> incremento EXP .)
    division        reduce using rule 154 (EXP -> incremento EXP .)
    modulo          reduce using rule 154 (EXP -> incremento EXP .)
    mayor           reduce using rule 154 (EXP -> incremento EXP .)
    mayori          reduce using rule 154 (EXP -> incremento EXP .)
    menor           reduce using rule 154 (EXP -> incremento EXP .)
    menori          reduce using rule 154 (EXP -> incremento EXP .)
    igual           reduce using rule 154 (EXP -> incremento EXP .)
    diferente       reduce using rule 154 (EXP -> incremento EXP .)
    and             reduce using rule 154 (EXP -> incremento EXP .)
    or              reduce using rule 154 (EXP -> incremento EXP .)
    shiftizq        reduce using rule 154 (EXP -> incremento EXP .)
    shiftder        reduce using rule 154 (EXP -> incremento EXP .)
    andb            reduce using rule 154 (EXP -> incremento EXP .)
    xorb            reduce using rule 154 (EXP -> incremento EXP .)
    orb             reduce using rule 154 (EXP -> incremento EXP .)
    condicional     reduce using rule 154 (EXP -> incremento EXP .)
    pyc             reduce using rule 154 (EXP -> incremento EXP .)
    coma            reduce using rule 154 (EXP -> incremento EXP .)
    cor2            reduce using rule 154 (EXP -> incremento EXP .)
    par2            reduce using rule 154 (EXP -> incremento EXP .)
    llav2           reduce using rule 154 (EXP -> incremento EXP .)
    bipunto         reduce using rule 154 (EXP -> incremento EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 154 (EXP -> incremento EXP .) ]
  ! decremento      [ reduce using rule 154 (EXP -> incremento EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 124

    (155) EXP -> decremento EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 155 (EXP -> decremento EXP .)
    menos           reduce using rule 155 (EXP -> decremento EXP .)
    por             reduce using rule 155 (EXP -> decremento EXP .)
    division        reduce using rule 155 (EXP -> decremento EXP .)
    modulo          reduce using rule 155 (EXP -> decremento EXP .)
    mayor           reduce using rule 155 (EXP -> decremento EXP .)
    mayori          reduce using rule 155 (EXP -> decremento EXP .)
    menor           reduce using rule 155 (EXP -> decremento EXP .)
    menori          reduce using rule 155 (EXP -> decremento EXP .)
    igual           reduce using rule 155 (EXP -> decremento EXP .)
    diferente       reduce using rule 155 (EXP -> decremento EXP .)
    and             reduce using rule 155 (EXP -> decremento EXP .)
    or              reduce using rule 155 (EXP -> decremento EXP .)
    shiftizq        reduce using rule 155 (EXP -> decremento EXP .)
    shiftder        reduce using rule 155 (EXP -> decremento EXP .)
    andb            reduce using rule 155 (EXP -> decremento EXP .)
    xorb            reduce using rule 155 (EXP -> decremento EXP .)
    orb             reduce using rule 155 (EXP -> decremento EXP .)
    condicional     reduce using rule 155 (EXP -> decremento EXP .)
    pyc             reduce using rule 155 (EXP -> decremento EXP .)
    coma            reduce using rule 155 (EXP -> decremento EXP .)
    cor2            reduce using rule 155 (EXP -> decremento EXP .)
    par2            reduce using rule 155 (EXP -> decremento EXP .)
    llav2           reduce using rule 155 (EXP -> decremento EXP .)
    bipunto         reduce using rule 155 (EXP -> decremento EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 155 (EXP -> decremento EXP .) ]
  ! decremento      [ reduce using rule 155 (EXP -> decremento EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 125

    (159) EXP -> llav1 ELEMENTS . llav2
    (160) ELEMENTS -> ELEMENTS . coma EXP

    llav2           shift and go to state 169
    coma            shift and go to state 170


state 126

    (161) ELEMENTS -> EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    llav2           reduce using rule 161 (ELEMENTS -> EXP .)
    coma            reduce using rule 161 (ELEMENTS -> EXP .)
    par2            reduce using rule 161 (ELEMENTS -> EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 127

    (164) EXP -> t_sizeof par1 . EXP par2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 171
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 128

    (25) ASIGNACION -> iden LACCESO OP EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 25 (ASIGNACION -> iden LACCESO OP EXP .)
    coma            reduce using rule 25 (ASIGNACION -> iden LACCESO OP EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 129

    (18) LACCESO -> LACCESO cor1 EXP . cor2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    cor2            shift and go to state 172
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 130

    (19) LACCESO -> cor1 EXP cor2 .

    cor1            reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    andbasigna      reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    divasigna       reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    masasigna       reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    menosasigna     reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    modasigna       reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    orbasigna       reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    porasigna       reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    shiftizqasigna  reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    shiftderasigna  reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    xorbasinga      reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    asigna          reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    pyc             reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    coma            reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    punto           reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    mas             reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    menos           reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    por             reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    division        reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    modulo          reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    mayor           reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    mayori          reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    menor           reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    menori          reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    igual           reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    diferente       reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    and             reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    or              reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    shiftizq        reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    shiftder        reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    andb            reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    xorb            reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    orb             reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    condicional     reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    incremento      reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    decremento      reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    cor2            reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    par2            reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    llav2           reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)
    bipunto         reduce using rule 19 (LACCESO -> cor1 EXP cor2 .)


state 131

    (56) Funcion -> t_void iden par1 Parametros . par2 BLOQUE
    (58) Parametros -> Parametros . coma Parametro

    par2            shift and go to state 173
    coma            shift and go to state 135


state 132

    (49) ItemsStruct2 -> iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2

    andbasigna      reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    divasigna       reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    masasigna       reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    menosasigna     reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    modasigna       reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    orbasigna       reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    porasigna       reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    shiftizqasigna  reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    shiftderasigna  reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    xorbasinga      reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    asigna          reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    pyc             reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    coma            reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    mas             reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    menos           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    por             reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    division        reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    modulo          reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    mayor           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    mayori          reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    menor           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    menori          reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    igual           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    diferente       reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    and             reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    or              reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    shiftizq        reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    shiftder        reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    andb            reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    xorb            reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    orb             reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    condicional     reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    incremento      reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    decremento      reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    cor2            reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    par2            reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    llav2           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    bipunto         reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    cor1            shift and go to state 73


state 133

    (112) Parametro -> Tipos iden .
    (113) Parametro -> Tipos iden . LACCESO
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    par2            reduce using rule 112 (Parametro -> Tipos iden .)
    coma            reduce using rule 112 (Parametro -> Tipos iden .)
    cor1            shift and go to state 41

    LACCESO                        shift and go to state 174

state 134

    (55) Funcion -> Tipos iden par1 Parametros par2 . BLOQUE
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 175

state 135

    (58) Parametros -> Parametros coma . Parametro
    (112) Parametro -> . Tipos iden
    (113) Parametro -> . Tipos iden LACCESO
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float

    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17

    Parametro                      shift and go to state 177
    Tipos                          shift and go to state 81

state 136

    (15) Dec -> iden cor1 cor2 asigna . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 178
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 137

    (17) Dec -> iden LACCESO asigna EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 17 (Dec -> iden LACCESO asigna EXP .)
    coma            reduce using rule 17 (Dec -> iden LACCESO asigna EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 138

    (39) STRUCT -> t_struct iden llav1 ATRIBUTOS llav2 .

    pyc             reduce using rule 39 (STRUCT -> t_struct iden llav1 ATRIBUTOS llav2 .)


state 139

    (40) ATRIBUTOS -> ATRIBUTOS ATRIBUTO .

    llav2           reduce using rule 40 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_char          reduce using rule 40 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_int           reduce using rule 40 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_double        reduce using rule 40 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_float         reduce using rule 40 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)


state 140

    (42) ATRIBUTO -> Tipos LItemsStruct . pyc
    (43) LItemsStruct -> LItemsStruct . coma ItemsStruct

    pyc             shift and go to state 179
    coma            shift and go to state 180


state 141

    (44) LItemsStruct -> ItemsStruct .

    pyc             reduce using rule 44 (LItemsStruct -> ItemsStruct .)
    coma            reduce using rule 44 (LItemsStruct -> ItemsStruct .)


state 142

    (45) ItemsStruct -> iden .
    (46) ItemsStruct -> iden . LACCESO
    (47) ItemsStruct -> iden . cor1 cor2
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 45 (ItemsStruct -> iden .)
    coma            reduce using rule 45 (ItemsStruct -> iden .)
    cor1            shift and go to state 182

    LACCESO                        shift and go to state 181

state 143

    (114) LLAMADA -> iden par1 ELEMENTS . par2
    (160) ELEMENTS -> ELEMENTS . coma EXP

    par2            shift and go to state 183
    coma            shift and go to state 170


state 144

    (115) LLAMADA -> iden par1 par2 .

    mas             reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    menos           reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    por             reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    division        reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    modulo          reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    mayor           reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    mayori          reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    menor           reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    menori          reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    igual           reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    diferente       reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    and             reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    or              reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    shiftizq        reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    shiftder        reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    andb            reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    xorb            reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    orb             reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    condicional     reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    incremento      reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    decremento      reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    pyc             reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    coma            reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    cor2            reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    par2            reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    llav2           reduce using rule 115 (LLAMADA -> iden par1 par2 .)
    bipunto         reduce using rule 115 (LLAMADA -> iden par1 par2 .)


state 145

    (116) EXP -> EXP mas EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 116 (EXP -> EXP mas EXP .)
    menos           reduce using rule 116 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 116 (EXP -> EXP mas EXP .)
    mayori          reduce using rule 116 (EXP -> EXP mas EXP .)
    menor           reduce using rule 116 (EXP -> EXP mas EXP .)
    menori          reduce using rule 116 (EXP -> EXP mas EXP .)
    igual           reduce using rule 116 (EXP -> EXP mas EXP .)
    diferente       reduce using rule 116 (EXP -> EXP mas EXP .)
    and             reduce using rule 116 (EXP -> EXP mas EXP .)
    or              reduce using rule 116 (EXP -> EXP mas EXP .)
    shiftizq        reduce using rule 116 (EXP -> EXP mas EXP .)
    shiftder        reduce using rule 116 (EXP -> EXP mas EXP .)
    andb            reduce using rule 116 (EXP -> EXP mas EXP .)
    xorb            reduce using rule 116 (EXP -> EXP mas EXP .)
    orb             reduce using rule 116 (EXP -> EXP mas EXP .)
    condicional     reduce using rule 116 (EXP -> EXP mas EXP .)
    pyc             reduce using rule 116 (EXP -> EXP mas EXP .)
    coma            reduce using rule 116 (EXP -> EXP mas EXP .)
    cor2            reduce using rule 116 (EXP -> EXP mas EXP .)
    par2            reduce using rule 116 (EXP -> EXP mas EXP .)
    llav2           reduce using rule 116 (EXP -> EXP mas EXP .)
    bipunto         reduce using rule 116 (EXP -> EXP mas EXP .)
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! por             [ reduce using rule 116 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 116 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 116 (EXP -> EXP mas EXP .) ]
  ! incremento      [ reduce using rule 116 (EXP -> EXP mas EXP .) ]
  ! decremento      [ reduce using rule 116 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 146

    (117) EXP -> EXP menos EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 117 (EXP -> EXP menos EXP .)
    menos           reduce using rule 117 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 117 (EXP -> EXP menos EXP .)
    mayori          reduce using rule 117 (EXP -> EXP menos EXP .)
    menor           reduce using rule 117 (EXP -> EXP menos EXP .)
    menori          reduce using rule 117 (EXP -> EXP menos EXP .)
    igual           reduce using rule 117 (EXP -> EXP menos EXP .)
    diferente       reduce using rule 117 (EXP -> EXP menos EXP .)
    and             reduce using rule 117 (EXP -> EXP menos EXP .)
    or              reduce using rule 117 (EXP -> EXP menos EXP .)
    shiftizq        reduce using rule 117 (EXP -> EXP menos EXP .)
    shiftder        reduce using rule 117 (EXP -> EXP menos EXP .)
    andb            reduce using rule 117 (EXP -> EXP menos EXP .)
    xorb            reduce using rule 117 (EXP -> EXP menos EXP .)
    orb             reduce using rule 117 (EXP -> EXP menos EXP .)
    condicional     reduce using rule 117 (EXP -> EXP menos EXP .)
    pyc             reduce using rule 117 (EXP -> EXP menos EXP .)
    coma            reduce using rule 117 (EXP -> EXP menos EXP .)
    cor2            reduce using rule 117 (EXP -> EXP menos EXP .)
    par2            reduce using rule 117 (EXP -> EXP menos EXP .)
    llav2           reduce using rule 117 (EXP -> EXP menos EXP .)
    bipunto         reduce using rule 117 (EXP -> EXP menos EXP .)
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! por             [ reduce using rule 117 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 117 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 117 (EXP -> EXP menos EXP .) ]
  ! incremento      [ reduce using rule 117 (EXP -> EXP menos EXP .) ]
  ! decremento      [ reduce using rule 117 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 147

    (118) EXP -> EXP por EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 118 (EXP -> EXP por EXP .)
    menos           reduce using rule 118 (EXP -> EXP por EXP .)
    por             reduce using rule 118 (EXP -> EXP por EXP .)
    division        reduce using rule 118 (EXP -> EXP por EXP .)
    modulo          reduce using rule 118 (EXP -> EXP por EXP .)
    mayor           reduce using rule 118 (EXP -> EXP por EXP .)
    mayori          reduce using rule 118 (EXP -> EXP por EXP .)
    menor           reduce using rule 118 (EXP -> EXP por EXP .)
    menori          reduce using rule 118 (EXP -> EXP por EXP .)
    igual           reduce using rule 118 (EXP -> EXP por EXP .)
    diferente       reduce using rule 118 (EXP -> EXP por EXP .)
    and             reduce using rule 118 (EXP -> EXP por EXP .)
    or              reduce using rule 118 (EXP -> EXP por EXP .)
    shiftizq        reduce using rule 118 (EXP -> EXP por EXP .)
    shiftder        reduce using rule 118 (EXP -> EXP por EXP .)
    andb            reduce using rule 118 (EXP -> EXP por EXP .)
    xorb            reduce using rule 118 (EXP -> EXP por EXP .)
    orb             reduce using rule 118 (EXP -> EXP por EXP .)
    condicional     reduce using rule 118 (EXP -> EXP por EXP .)
    pyc             reduce using rule 118 (EXP -> EXP por EXP .)
    coma            reduce using rule 118 (EXP -> EXP por EXP .)
    cor2            reduce using rule 118 (EXP -> EXP por EXP .)
    par2            reduce using rule 118 (EXP -> EXP por EXP .)
    llav2           reduce using rule 118 (EXP -> EXP por EXP .)
    bipunto         reduce using rule 118 (EXP -> EXP por EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 118 (EXP -> EXP por EXP .) ]
  ! decremento      [ reduce using rule 118 (EXP -> EXP por EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 148

    (119) EXP -> EXP division EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 119 (EXP -> EXP division EXP .)
    menos           reduce using rule 119 (EXP -> EXP division EXP .)
    por             reduce using rule 119 (EXP -> EXP division EXP .)
    division        reduce using rule 119 (EXP -> EXP division EXP .)
    modulo          reduce using rule 119 (EXP -> EXP division EXP .)
    mayor           reduce using rule 119 (EXP -> EXP division EXP .)
    mayori          reduce using rule 119 (EXP -> EXP division EXP .)
    menor           reduce using rule 119 (EXP -> EXP division EXP .)
    menori          reduce using rule 119 (EXP -> EXP division EXP .)
    igual           reduce using rule 119 (EXP -> EXP division EXP .)
    diferente       reduce using rule 119 (EXP -> EXP division EXP .)
    and             reduce using rule 119 (EXP -> EXP division EXP .)
    or              reduce using rule 119 (EXP -> EXP division EXP .)
    shiftizq        reduce using rule 119 (EXP -> EXP division EXP .)
    shiftder        reduce using rule 119 (EXP -> EXP division EXP .)
    andb            reduce using rule 119 (EXP -> EXP division EXP .)
    xorb            reduce using rule 119 (EXP -> EXP division EXP .)
    orb             reduce using rule 119 (EXP -> EXP division EXP .)
    condicional     reduce using rule 119 (EXP -> EXP division EXP .)
    pyc             reduce using rule 119 (EXP -> EXP division EXP .)
    coma            reduce using rule 119 (EXP -> EXP division EXP .)
    cor2            reduce using rule 119 (EXP -> EXP division EXP .)
    par2            reduce using rule 119 (EXP -> EXP division EXP .)
    llav2           reduce using rule 119 (EXP -> EXP division EXP .)
    bipunto         reduce using rule 119 (EXP -> EXP division EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 119 (EXP -> EXP division EXP .) ]
  ! decremento      [ reduce using rule 119 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 149

    (120) EXP -> EXP modulo EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 120 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 120 (EXP -> EXP modulo EXP .)
    por             reduce using rule 120 (EXP -> EXP modulo EXP .)
    division        reduce using rule 120 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 120 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 120 (EXP -> EXP modulo EXP .)
    mayori          reduce using rule 120 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 120 (EXP -> EXP modulo EXP .)
    menori          reduce using rule 120 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 120 (EXP -> EXP modulo EXP .)
    diferente       reduce using rule 120 (EXP -> EXP modulo EXP .)
    and             reduce using rule 120 (EXP -> EXP modulo EXP .)
    or              reduce using rule 120 (EXP -> EXP modulo EXP .)
    shiftizq        reduce using rule 120 (EXP -> EXP modulo EXP .)
    shiftder        reduce using rule 120 (EXP -> EXP modulo EXP .)
    andb            reduce using rule 120 (EXP -> EXP modulo EXP .)
    xorb            reduce using rule 120 (EXP -> EXP modulo EXP .)
    orb             reduce using rule 120 (EXP -> EXP modulo EXP .)
    condicional     reduce using rule 120 (EXP -> EXP modulo EXP .)
    pyc             reduce using rule 120 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 120 (EXP -> EXP modulo EXP .)
    cor2            reduce using rule 120 (EXP -> EXP modulo EXP .)
    par2            reduce using rule 120 (EXP -> EXP modulo EXP .)
    llav2           reduce using rule 120 (EXP -> EXP modulo EXP .)
    bipunto         reduce using rule 120 (EXP -> EXP modulo EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 120 (EXP -> EXP modulo EXP .) ]
  ! decremento      [ reduce using rule 120 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 150

    (121) EXP -> EXP mayor EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mayor           reduce using rule 121 (EXP -> EXP mayor EXP .)
    mayori          reduce using rule 121 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 121 (EXP -> EXP mayor EXP .)
    menori          reduce using rule 121 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 121 (EXP -> EXP mayor EXP .)
    diferente       reduce using rule 121 (EXP -> EXP mayor EXP .)
    and             reduce using rule 121 (EXP -> EXP mayor EXP .)
    or              reduce using rule 121 (EXP -> EXP mayor EXP .)
    andb            reduce using rule 121 (EXP -> EXP mayor EXP .)
    xorb            reduce using rule 121 (EXP -> EXP mayor EXP .)
    orb             reduce using rule 121 (EXP -> EXP mayor EXP .)
    condicional     reduce using rule 121 (EXP -> EXP mayor EXP .)
    pyc             reduce using rule 121 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 121 (EXP -> EXP mayor EXP .)
    cor2            reduce using rule 121 (EXP -> EXP mayor EXP .)
    par2            reduce using rule 121 (EXP -> EXP mayor EXP .)
    llav2           reduce using rule 121 (EXP -> EXP mayor EXP .)
    bipunto         reduce using rule 121 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! por             [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! shiftizq        [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! shiftder        [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! incremento      [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! decremento      [ reduce using rule 121 (EXP -> EXP mayor EXP .) ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 151

    (122) EXP -> EXP mayori EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mayor           reduce using rule 122 (EXP -> EXP mayori EXP .)
    mayori          reduce using rule 122 (EXP -> EXP mayori EXP .)
    menor           reduce using rule 122 (EXP -> EXP mayori EXP .)
    menori          reduce using rule 122 (EXP -> EXP mayori EXP .)
    igual           reduce using rule 122 (EXP -> EXP mayori EXP .)
    diferente       reduce using rule 122 (EXP -> EXP mayori EXP .)
    and             reduce using rule 122 (EXP -> EXP mayori EXP .)
    or              reduce using rule 122 (EXP -> EXP mayori EXP .)
    andb            reduce using rule 122 (EXP -> EXP mayori EXP .)
    xorb            reduce using rule 122 (EXP -> EXP mayori EXP .)
    orb             reduce using rule 122 (EXP -> EXP mayori EXP .)
    condicional     reduce using rule 122 (EXP -> EXP mayori EXP .)
    pyc             reduce using rule 122 (EXP -> EXP mayori EXP .)
    coma            reduce using rule 122 (EXP -> EXP mayori EXP .)
    cor2            reduce using rule 122 (EXP -> EXP mayori EXP .)
    par2            reduce using rule 122 (EXP -> EXP mayori EXP .)
    llav2           reduce using rule 122 (EXP -> EXP mayori EXP .)
    bipunto         reduce using rule 122 (EXP -> EXP mayori EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! menos           [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! por             [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! division        [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! modulo          [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! shiftizq        [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! shiftder        [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! incremento      [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! decremento      [ reduce using rule 122 (EXP -> EXP mayori EXP .) ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 152

    (123) EXP -> EXP menor EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mayor           reduce using rule 123 (EXP -> EXP menor EXP .)
    mayori          reduce using rule 123 (EXP -> EXP menor EXP .)
    menor           reduce using rule 123 (EXP -> EXP menor EXP .)
    menori          reduce using rule 123 (EXP -> EXP menor EXP .)
    igual           reduce using rule 123 (EXP -> EXP menor EXP .)
    diferente       reduce using rule 123 (EXP -> EXP menor EXP .)
    and             reduce using rule 123 (EXP -> EXP menor EXP .)
    or              reduce using rule 123 (EXP -> EXP menor EXP .)
    andb            reduce using rule 123 (EXP -> EXP menor EXP .)
    xorb            reduce using rule 123 (EXP -> EXP menor EXP .)
    orb             reduce using rule 123 (EXP -> EXP menor EXP .)
    condicional     reduce using rule 123 (EXP -> EXP menor EXP .)
    pyc             reduce using rule 123 (EXP -> EXP menor EXP .)
    coma            reduce using rule 123 (EXP -> EXP menor EXP .)
    cor2            reduce using rule 123 (EXP -> EXP menor EXP .)
    par2            reduce using rule 123 (EXP -> EXP menor EXP .)
    llav2           reduce using rule 123 (EXP -> EXP menor EXP .)
    bipunto         reduce using rule 123 (EXP -> EXP menor EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! por             [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! shiftizq        [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! shiftder        [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! incremento      [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! decremento      [ reduce using rule 123 (EXP -> EXP menor EXP .) ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 153

    (124) EXP -> EXP menori EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mayor           reduce using rule 124 (EXP -> EXP menori EXP .)
    mayori          reduce using rule 124 (EXP -> EXP menori EXP .)
    menor           reduce using rule 124 (EXP -> EXP menori EXP .)
    menori          reduce using rule 124 (EXP -> EXP menori EXP .)
    igual           reduce using rule 124 (EXP -> EXP menori EXP .)
    diferente       reduce using rule 124 (EXP -> EXP menori EXP .)
    and             reduce using rule 124 (EXP -> EXP menori EXP .)
    or              reduce using rule 124 (EXP -> EXP menori EXP .)
    andb            reduce using rule 124 (EXP -> EXP menori EXP .)
    xorb            reduce using rule 124 (EXP -> EXP menori EXP .)
    orb             reduce using rule 124 (EXP -> EXP menori EXP .)
    condicional     reduce using rule 124 (EXP -> EXP menori EXP .)
    pyc             reduce using rule 124 (EXP -> EXP menori EXP .)
    coma            reduce using rule 124 (EXP -> EXP menori EXP .)
    cor2            reduce using rule 124 (EXP -> EXP menori EXP .)
    par2            reduce using rule 124 (EXP -> EXP menori EXP .)
    llav2           reduce using rule 124 (EXP -> EXP menori EXP .)
    bipunto         reduce using rule 124 (EXP -> EXP menori EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! menos           [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! por             [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! division        [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! modulo          [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! shiftizq        [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! shiftder        [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! incremento      [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! decremento      [ reduce using rule 124 (EXP -> EXP menori EXP .) ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 154

    (125) EXP -> EXP igual EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    igual           reduce using rule 125 (EXP -> EXP igual EXP .)
    diferente       reduce using rule 125 (EXP -> EXP igual EXP .)
    and             reduce using rule 125 (EXP -> EXP igual EXP .)
    or              reduce using rule 125 (EXP -> EXP igual EXP .)
    andb            reduce using rule 125 (EXP -> EXP igual EXP .)
    xorb            reduce using rule 125 (EXP -> EXP igual EXP .)
    orb             reduce using rule 125 (EXP -> EXP igual EXP .)
    condicional     reduce using rule 125 (EXP -> EXP igual EXP .)
    pyc             reduce using rule 125 (EXP -> EXP igual EXP .)
    coma            reduce using rule 125 (EXP -> EXP igual EXP .)
    cor2            reduce using rule 125 (EXP -> EXP igual EXP .)
    par2            reduce using rule 125 (EXP -> EXP igual EXP .)
    llav2           reduce using rule 125 (EXP -> EXP igual EXP .)
    bipunto         reduce using rule 125 (EXP -> EXP igual EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! por             [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! mayor           [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! mayori          [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! menor           [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! menori          [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! shiftizq        [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! shiftder        [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! incremento      [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! decremento      [ reduce using rule 125 (EXP -> EXP igual EXP .) ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 155

    (126) EXP -> EXP diferente EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    igual           reduce using rule 126 (EXP -> EXP diferente EXP .)
    diferente       reduce using rule 126 (EXP -> EXP diferente EXP .)
    and             reduce using rule 126 (EXP -> EXP diferente EXP .)
    or              reduce using rule 126 (EXP -> EXP diferente EXP .)
    andb            reduce using rule 126 (EXP -> EXP diferente EXP .)
    xorb            reduce using rule 126 (EXP -> EXP diferente EXP .)
    orb             reduce using rule 126 (EXP -> EXP diferente EXP .)
    condicional     reduce using rule 126 (EXP -> EXP diferente EXP .)
    pyc             reduce using rule 126 (EXP -> EXP diferente EXP .)
    coma            reduce using rule 126 (EXP -> EXP diferente EXP .)
    cor2            reduce using rule 126 (EXP -> EXP diferente EXP .)
    par2            reduce using rule 126 (EXP -> EXP diferente EXP .)
    llav2           reduce using rule 126 (EXP -> EXP diferente EXP .)
    bipunto         reduce using rule 126 (EXP -> EXP diferente EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! menos           [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! por             [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! division        [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! modulo          [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! mayor           [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! mayori          [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! menor           [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! menori          [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! shiftizq        [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! shiftder        [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! incremento      [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! decremento      [ reduce using rule 126 (EXP -> EXP diferente EXP .) ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 156

    (127) EXP -> EXP and EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    and             reduce using rule 127 (EXP -> EXP and EXP .)
    or              reduce using rule 127 (EXP -> EXP and EXP .)
    condicional     reduce using rule 127 (EXP -> EXP and EXP .)
    pyc             reduce using rule 127 (EXP -> EXP and EXP .)
    coma            reduce using rule 127 (EXP -> EXP and EXP .)
    cor2            reduce using rule 127 (EXP -> EXP and EXP .)
    par2            reduce using rule 127 (EXP -> EXP and EXP .)
    llav2           reduce using rule 127 (EXP -> EXP and EXP .)
    bipunto         reduce using rule 127 (EXP -> EXP and EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! por             [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! mayori          [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! menori          [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! diferente       [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! shiftizq        [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! shiftder        [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! andb            [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! xorb            [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! orb             [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! incremento      [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! decremento      [ reduce using rule 127 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! condicional     [ shift and go to state 110 ]


state 157

    (128) EXP -> EXP or EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    or              reduce using rule 128 (EXP -> EXP or EXP .)
    condicional     reduce using rule 128 (EXP -> EXP or EXP .)
    pyc             reduce using rule 128 (EXP -> EXP or EXP .)
    coma            reduce using rule 128 (EXP -> EXP or EXP .)
    cor2            reduce using rule 128 (EXP -> EXP or EXP .)
    par2            reduce using rule 128 (EXP -> EXP or EXP .)
    llav2           reduce using rule 128 (EXP -> EXP or EXP .)
    bipunto         reduce using rule 128 (EXP -> EXP or EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! por             [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! mayori          [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! menori          [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! diferente       [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! shiftizq        [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! shiftder        [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! andb            [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! xorb            [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! orb             [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! incremento      [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! decremento      [ reduce using rule 128 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 104 ]
  ! condicional     [ shift and go to state 110 ]


state 158

    (139) EXP -> EXP shiftizq EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mayor           reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    mayori          reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    menor           reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    menori          reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    igual           reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    diferente       reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    and             reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    or              reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    shiftizq        reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    shiftder        reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    andb            reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    xorb            reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    orb             reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    condicional     reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    pyc             reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    coma            reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    cor2            reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    par2            reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    llav2           reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    bipunto         reduce using rule 139 (EXP -> EXP shiftizq EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! menos           [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! por             [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! division        [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! modulo          [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! incremento      [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! decremento      [ reduce using rule 139 (EXP -> EXP shiftizq EXP .) ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 159

    (140) EXP -> EXP shiftder EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mayor           reduce using rule 140 (EXP -> EXP shiftder EXP .)
    mayori          reduce using rule 140 (EXP -> EXP shiftder EXP .)
    menor           reduce using rule 140 (EXP -> EXP shiftder EXP .)
    menori          reduce using rule 140 (EXP -> EXP shiftder EXP .)
    igual           reduce using rule 140 (EXP -> EXP shiftder EXP .)
    diferente       reduce using rule 140 (EXP -> EXP shiftder EXP .)
    and             reduce using rule 140 (EXP -> EXP shiftder EXP .)
    or              reduce using rule 140 (EXP -> EXP shiftder EXP .)
    shiftizq        reduce using rule 140 (EXP -> EXP shiftder EXP .)
    shiftder        reduce using rule 140 (EXP -> EXP shiftder EXP .)
    andb            reduce using rule 140 (EXP -> EXP shiftder EXP .)
    xorb            reduce using rule 140 (EXP -> EXP shiftder EXP .)
    orb             reduce using rule 140 (EXP -> EXP shiftder EXP .)
    condicional     reduce using rule 140 (EXP -> EXP shiftder EXP .)
    pyc             reduce using rule 140 (EXP -> EXP shiftder EXP .)
    coma            reduce using rule 140 (EXP -> EXP shiftder EXP .)
    cor2            reduce using rule 140 (EXP -> EXP shiftder EXP .)
    par2            reduce using rule 140 (EXP -> EXP shiftder EXP .)
    llav2           reduce using rule 140 (EXP -> EXP shiftder EXP .)
    bipunto         reduce using rule 140 (EXP -> EXP shiftder EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! menos           [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! por             [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! division        [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! modulo          [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! incremento      [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! decremento      [ reduce using rule 140 (EXP -> EXP shiftder EXP .) ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 160

    (141) EXP -> EXP andb EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    and             reduce using rule 141 (EXP -> EXP andb EXP .)
    or              reduce using rule 141 (EXP -> EXP andb EXP .)
    andb            reduce using rule 141 (EXP -> EXP andb EXP .)
    xorb            reduce using rule 141 (EXP -> EXP andb EXP .)
    orb             reduce using rule 141 (EXP -> EXP andb EXP .)
    condicional     reduce using rule 141 (EXP -> EXP andb EXP .)
    pyc             reduce using rule 141 (EXP -> EXP andb EXP .)
    coma            reduce using rule 141 (EXP -> EXP andb EXP .)
    cor2            reduce using rule 141 (EXP -> EXP andb EXP .)
    par2            reduce using rule 141 (EXP -> EXP andb EXP .)
    llav2           reduce using rule 141 (EXP -> EXP andb EXP .)
    bipunto         reduce using rule 141 (EXP -> EXP andb EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! menos           [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! por             [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! division        [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! modulo          [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! mayor           [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! mayori          [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! menor           [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! menori          [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! igual           [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! diferente       [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! shiftizq        [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! shiftder        [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! incremento      [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! decremento      [ reduce using rule 141 (EXP -> EXP andb EXP .) ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 161

    (142) EXP -> EXP xorb EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    and             reduce using rule 142 (EXP -> EXP xorb EXP .)
    or              reduce using rule 142 (EXP -> EXP xorb EXP .)
    xorb            reduce using rule 142 (EXP -> EXP xorb EXP .)
    orb             reduce using rule 142 (EXP -> EXP xorb EXP .)
    condicional     reduce using rule 142 (EXP -> EXP xorb EXP .)
    pyc             reduce using rule 142 (EXP -> EXP xorb EXP .)
    coma            reduce using rule 142 (EXP -> EXP xorb EXP .)
    cor2            reduce using rule 142 (EXP -> EXP xorb EXP .)
    par2            reduce using rule 142 (EXP -> EXP xorb EXP .)
    llav2           reduce using rule 142 (EXP -> EXP xorb EXP .)
    bipunto         reduce using rule 142 (EXP -> EXP xorb EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! menos           [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! por             [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! division        [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! modulo          [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! mayor           [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! mayori          [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! menor           [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! menori          [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! igual           [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! diferente       [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! shiftizq        [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! shiftder        [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! andb            [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! incremento      [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! decremento      [ reduce using rule 142 (EXP -> EXP xorb EXP .) ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 162

    (143) EXP -> EXP orb EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    and             reduce using rule 143 (EXP -> EXP orb EXP .)
    or              reduce using rule 143 (EXP -> EXP orb EXP .)
    orb             reduce using rule 143 (EXP -> EXP orb EXP .)
    condicional     reduce using rule 143 (EXP -> EXP orb EXP .)
    pyc             reduce using rule 143 (EXP -> EXP orb EXP .)
    coma            reduce using rule 143 (EXP -> EXP orb EXP .)
    cor2            reduce using rule 143 (EXP -> EXP orb EXP .)
    par2            reduce using rule 143 (EXP -> EXP orb EXP .)
    llav2           reduce using rule 143 (EXP -> EXP orb EXP .)
    bipunto         reduce using rule 143 (EXP -> EXP orb EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! menos           [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! por             [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! division        [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! modulo          [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! mayor           [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! mayori          [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! menor           [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! menori          [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! igual           [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! diferente       [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! shiftizq        [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! shiftder        [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! andb            [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! xorb            [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! incremento      [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! decremento      [ reduce using rule 143 (EXP -> EXP orb EXP .) ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 163

    (156) EXP -> EXP condicional EXP . bipunto EXP
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    bipunto         shift and go to state 184
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 164

    (130) EXP -> par1 t_char par2 . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 185
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 165

    (138) EXP -> par1 EXP par2 .

    mas             reduce using rule 138 (EXP -> par1 EXP par2 .)
    menos           reduce using rule 138 (EXP -> par1 EXP par2 .)
    por             reduce using rule 138 (EXP -> par1 EXP par2 .)
    division        reduce using rule 138 (EXP -> par1 EXP par2 .)
    modulo          reduce using rule 138 (EXP -> par1 EXP par2 .)
    mayor           reduce using rule 138 (EXP -> par1 EXP par2 .)
    mayori          reduce using rule 138 (EXP -> par1 EXP par2 .)
    menor           reduce using rule 138 (EXP -> par1 EXP par2 .)
    menori          reduce using rule 138 (EXP -> par1 EXP par2 .)
    igual           reduce using rule 138 (EXP -> par1 EXP par2 .)
    diferente       reduce using rule 138 (EXP -> par1 EXP par2 .)
    and             reduce using rule 138 (EXP -> par1 EXP par2 .)
    or              reduce using rule 138 (EXP -> par1 EXP par2 .)
    shiftizq        reduce using rule 138 (EXP -> par1 EXP par2 .)
    shiftder        reduce using rule 138 (EXP -> par1 EXP par2 .)
    andb            reduce using rule 138 (EXP -> par1 EXP par2 .)
    xorb            reduce using rule 138 (EXP -> par1 EXP par2 .)
    orb             reduce using rule 138 (EXP -> par1 EXP par2 .)
    condicional     reduce using rule 138 (EXP -> par1 EXP par2 .)
    incremento      reduce using rule 138 (EXP -> par1 EXP par2 .)
    decremento      reduce using rule 138 (EXP -> par1 EXP par2 .)
    pyc             reduce using rule 138 (EXP -> par1 EXP par2 .)
    coma            reduce using rule 138 (EXP -> par1 EXP par2 .)
    cor2            reduce using rule 138 (EXP -> par1 EXP par2 .)
    par2            reduce using rule 138 (EXP -> par1 EXP par2 .)
    llav2           reduce using rule 138 (EXP -> par1 EXP par2 .)
    bipunto         reduce using rule 138 (EXP -> par1 EXP par2 .)


state 166

    (131) EXP -> par1 t_int par2 . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 186
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 167

    (132) EXP -> par1 t_float par2 . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 187
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 168

    (144) EXP -> t_scanf par1 par2 .

    mas             reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    menos           reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    por             reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    division        reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    modulo          reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    mayor           reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    mayori          reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    menor           reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    menori          reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    igual           reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    diferente       reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    and             reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    or              reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    shiftizq        reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    shiftder        reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    andb            reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    xorb            reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    orb             reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    condicional     reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    incremento      reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    decremento      reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    pyc             reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    coma            reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    cor2            reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    par2            reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    llav2           reduce using rule 144 (EXP -> t_scanf par1 par2 .)
    bipunto         reduce using rule 144 (EXP -> t_scanf par1 par2 .)


state 169

    (159) EXP -> llav1 ELEMENTS llav2 .

    mas             reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    menos           reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    por             reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    division        reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    modulo          reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    mayor           reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    mayori          reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    menor           reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    menori          reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    igual           reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    diferente       reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    and             reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    or              reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    shiftizq        reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    shiftder        reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    andb            reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    xorb            reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    orb             reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    condicional     reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    incremento      reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    decremento      reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    pyc             reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    coma            reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    cor2            reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    par2            reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    llav2           reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)
    bipunto         reduce using rule 159 (EXP -> llav1 ELEMENTS llav2 .)


state 170

    (160) ELEMENTS -> ELEMENTS coma . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 188
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 171

    (164) EXP -> t_sizeof par1 EXP . par2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 189
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 172

    (18) LACCESO -> LACCESO cor1 EXP cor2 .

    cor1            reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    andbasigna      reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    divasigna       reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    masasigna       reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menosasigna     reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    modasigna       reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    orbasigna       reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    porasigna       reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftizqasigna  reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftderasigna  reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    xorbasinga      reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    asigna          reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    pyc             reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    coma            reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    punto           reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    mas             reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menos           reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    por             reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    division        reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    modulo          reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    mayor           reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    mayori          reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menor           reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menori          reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    igual           reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    diferente       reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    and             reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    or              reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftizq        reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftder        reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    andb            reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    xorb            reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    orb             reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    condicional     reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    incremento      reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    decremento      reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    cor2            reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    par2            reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    llav2           reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)
    bipunto         reduce using rule 18 (LACCESO -> LACCESO cor1 EXP cor2 .)


state 173

    (56) Funcion -> t_void iden par1 Parametros par2 . BLOQUE
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 190

state 174

    (113) Parametro -> Tipos iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2

    par2            reduce using rule 113 (Parametro -> Tipos iden LACCESO .)
    coma            reduce using rule 113 (Parametro -> Tipos iden LACCESO .)
    cor1            shift and go to state 73


state 175

    (55) Funcion -> Tipos iden par1 Parametros par2 BLOQUE .

    error           reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_struct        reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_void          reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_char          reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_int           reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_double        reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_float         reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    iden            reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    $end            reduce using rule 55 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)


state 176

    (85) BLOQUE -> llav1 . SS_F llav2
    (86) BLOQUE -> llav1 . llav2
    (60) SS_F -> . SS_F S_F
    (61) SS_F -> . S_F
    (62) S_F -> . error
    (63) S_F -> . Declaracion
    (64) S_F -> . LASIGNACION pyc
    (65) S_F -> . INSTANCIA pyc
    (66) S_F -> . STRUCT pyc
    (67) S_F -> . IF
    (68) S_F -> . LLAMADA pyc
    (69) S_F -> . BREAK pyc
    (70) S_F -> . CONTINUE pyc
    (71) S_F -> . SWITCH
    (72) S_F -> . DO_WHILE pyc
    (73) S_F -> . WHILE
    (74) S_F -> . RETURN pyc
    (75) S_F -> . ETIQUETA
    (76) S_F -> . GOTO pyc
    (77) S_F -> . FOR
    (78) S_F -> . PRINTF pyc
    (79) S_F -> . INC_POST pyc
    (80) S_F -> . INC_PRE pyc
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (83) INSTANCIA -> . t_struct iden iden LACCESO
    (84) INSTANCIA -> . t_struct iden iden
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (107) BREAK -> . t_break
    (108) CONTINUE -> . t_continue
    (99) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (95) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (96) WHILE -> . t_while par1 EXP par2 BLOQUE
    (97) RETURN -> . t_return EXP
    (98) RETURN -> . t_return
    (93) ETIQUETA -> . iden bipunto
    (94) GOTO -> . t_goto iden
    (87) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (81) PRINTF -> . t_printf par1 string coma ELEMENTS par2
    (82) PRINTF -> . t_printf par1 string par2
    (152) INC_POST -> . EXP incremento
    (153) INC_POST -> . EXP decremento
    (150) INC_PRE -> . incremento EXP
    (151) INC_PRE -> . decremento EXP
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    llav2           shift and go to state 192
    error           shift and go to state 194
    t_struct        shift and go to state 214
    t_if            shift and go to state 216
    iden            shift and go to state 215
    t_break         shift and go to state 218
    t_continue      shift and go to state 219
    t_switch        shift and go to state 220
    t_do            shift and go to state 221
    t_while         shift and go to state 222
    t_return        shift and go to state 223
    t_goto          shift and go to state 224
    t_for           shift and go to state 225
    t_printf        shift and go to state 226
    incremento      shift and go to state 227
    decremento      shift and go to state 228
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    SS_F                           shift and go to state 191
    S_F                            shift and go to state 193
    Declaracion                    shift and go to state 195
    LASIGNACION                    shift and go to state 196
    INSTANCIA                      shift and go to state 197
    STRUCT                         shift and go to state 198
    IF                             shift and go to state 199
    LLAMADA                        shift and go to state 200
    BREAK                          shift and go to state 201
    CONTINUE                       shift and go to state 202
    SWITCH                         shift and go to state 203
    DO_WHILE                       shift and go to state 204
    WHILE                          shift and go to state 205
    RETURN                         shift and go to state 206
    ETIQUETA                       shift and go to state 207
    GOTO                           shift and go to state 208
    FOR                            shift and go to state 209
    PRINTF                         shift and go to state 210
    INC_POST                       shift and go to state 211
    INC_PRE                        shift and go to state 212
    Tipos                          shift and go to state 213
    ASIGNACION                     shift and go to state 10
    EXP                            shift and go to state 217
    ACCESO_STRUCT                  shift and go to state 229
    ItemsStruct2                   shift and go to state 19

state 177

    (58) Parametros -> Parametros coma Parametro .

    par2            reduce using rule 58 (Parametros -> Parametros coma Parametro .)
    coma            reduce using rule 58 (Parametros -> Parametros coma Parametro .)


state 178

    (15) Dec -> iden cor1 cor2 asigna EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 15 (Dec -> iden cor1 cor2 asigna EXP .)
    coma            reduce using rule 15 (Dec -> iden cor1 cor2 asigna EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 179

    (42) ATRIBUTO -> Tipos LItemsStruct pyc .

    llav2           reduce using rule 42 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_char          reduce using rule 42 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_int           reduce using rule 42 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_double        reduce using rule 42 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_float         reduce using rule 42 (ATRIBUTO -> Tipos LItemsStruct pyc .)


state 180

    (43) LItemsStruct -> LItemsStruct coma . ItemsStruct
    (45) ItemsStruct -> . iden
    (46) ItemsStruct -> . iden LACCESO
    (47) ItemsStruct -> . iden cor1 cor2

    iden            shift and go to state 142

    ItemsStruct                    shift and go to state 230

state 181

    (46) ItemsStruct -> iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2

    pyc             reduce using rule 46 (ItemsStruct -> iden LACCESO .)
    coma            reduce using rule 46 (ItemsStruct -> iden LACCESO .)
    cor1            shift and go to state 73


state 182

    (47) ItemsStruct -> iden cor1 . cor2
    (19) LACCESO -> cor1 . EXP cor2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    cor2            shift and go to state 231
    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 74
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 183

    (114) LLAMADA -> iden par1 ELEMENTS par2 .

    mas             reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    menos           reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    por             reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    division        reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    modulo          reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    mayor           reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    mayori          reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    menor           reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    menori          reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    igual           reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    diferente       reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    and             reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    or              reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    shiftizq        reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    shiftder        reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    andb            reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    xorb            reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    orb             reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    condicional     reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    incremento      reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    decremento      reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    pyc             reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    coma            reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    cor2            reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    par2            reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    llav2           reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)
    bipunto         reduce using rule 114 (LLAMADA -> iden par1 ELEMENTS par2 .)


state 184

    (156) EXP -> EXP condicional EXP bipunto . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 232
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 185

    (130) EXP -> par1 t_char par2 EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    menos           reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    por             reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    division        reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    modulo          reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    mayor           reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    mayori          reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    menor           reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    menori          reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    igual           reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    diferente       reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    and             reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    or              reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    shiftizq        reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    shiftder        reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    andb            reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    xorb            reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    orb             reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    condicional     reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    incremento      reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    decremento      reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    pyc             reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    coma            reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    cor2            reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    par2            reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    llav2           reduce using rule 130 (EXP -> par1 t_char par2 EXP .)
    bipunto         reduce using rule 130 (EXP -> par1 t_char par2 EXP .)

  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]
  ! incremento      [ shift and go to state 111 ]
  ! decremento      [ shift and go to state 112 ]


state 186

    (131) EXP -> par1 t_int par2 EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    menos           reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    por             reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    division        reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    modulo          reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    mayor           reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    mayori          reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    menor           reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    menori          reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    igual           reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    diferente       reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    and             reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    or              reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    shiftizq        reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    shiftder        reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    andb            reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    xorb            reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    orb             reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    condicional     reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    incremento      reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    decremento      reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    pyc             reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    coma            reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    cor2            reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    par2            reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    llav2           reduce using rule 131 (EXP -> par1 t_int par2 EXP .)
    bipunto         reduce using rule 131 (EXP -> par1 t_int par2 EXP .)

  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]
  ! incremento      [ shift and go to state 111 ]
  ! decremento      [ shift and go to state 112 ]


state 187

    (132) EXP -> par1 t_float par2 EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    mas             reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    menos           reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    por             reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    division        reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    modulo          reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    mayor           reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    mayori          reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    menor           reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    menori          reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    igual           reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    diferente       reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    and             reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    or              reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    shiftizq        reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    shiftder        reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    andb            reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    xorb            reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    orb             reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    condicional     reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    incremento      reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    decremento      reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    pyc             reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    coma            reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    cor2            reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    par2            reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    llav2           reduce using rule 132 (EXP -> par1 t_float par2 EXP .)
    bipunto         reduce using rule 132 (EXP -> par1 t_float par2 EXP .)

  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]
  ! incremento      [ shift and go to state 111 ]
  ! decremento      [ shift and go to state 112 ]


state 188

    (160) ELEMENTS -> ELEMENTS coma EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    llav2           reduce using rule 160 (ELEMENTS -> ELEMENTS coma EXP .)
    coma            reduce using rule 160 (ELEMENTS -> ELEMENTS coma EXP .)
    par2            reduce using rule 160 (ELEMENTS -> ELEMENTS coma EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 189

    (164) EXP -> t_sizeof par1 EXP par2 .

    mas             reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    menos           reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    por             reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    division        reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    modulo          reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    mayor           reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    mayori          reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    menor           reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    menori          reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    igual           reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    diferente       reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    and             reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    or              reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    shiftizq        reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    shiftder        reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    andb            reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    xorb            reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    orb             reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    condicional     reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    incremento      reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    decremento      reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    pyc             reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    coma            reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    cor2            reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    par2            reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    llav2           reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)
    bipunto         reduce using rule 164 (EXP -> t_sizeof par1 EXP par2 .)


state 190

    (56) Funcion -> t_void iden par1 Parametros par2 BLOQUE .

    error           reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_struct        reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_void          reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_char          reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_int           reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_double        reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_float         reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    iden            reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    $end            reduce using rule 56 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)


state 191

    (85) BLOQUE -> llav1 SS_F . llav2
    (60) SS_F -> SS_F . S_F
    (62) S_F -> . error
    (63) S_F -> . Declaracion
    (64) S_F -> . LASIGNACION pyc
    (65) S_F -> . INSTANCIA pyc
    (66) S_F -> . STRUCT pyc
    (67) S_F -> . IF
    (68) S_F -> . LLAMADA pyc
    (69) S_F -> . BREAK pyc
    (70) S_F -> . CONTINUE pyc
    (71) S_F -> . SWITCH
    (72) S_F -> . DO_WHILE pyc
    (73) S_F -> . WHILE
    (74) S_F -> . RETURN pyc
    (75) S_F -> . ETIQUETA
    (76) S_F -> . GOTO pyc
    (77) S_F -> . FOR
    (78) S_F -> . PRINTF pyc
    (79) S_F -> . INC_POST pyc
    (80) S_F -> . INC_PRE pyc
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (83) INSTANCIA -> . t_struct iden iden LACCESO
    (84) INSTANCIA -> . t_struct iden iden
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (107) BREAK -> . t_break
    (108) CONTINUE -> . t_continue
    (99) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (95) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (96) WHILE -> . t_while par1 EXP par2 BLOQUE
    (97) RETURN -> . t_return EXP
    (98) RETURN -> . t_return
    (93) ETIQUETA -> . iden bipunto
    (94) GOTO -> . t_goto iden
    (87) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (81) PRINTF -> . t_printf par1 string coma ELEMENTS par2
    (82) PRINTF -> . t_printf par1 string par2
    (152) INC_POST -> . EXP incremento
    (153) INC_POST -> . EXP decremento
    (150) INC_PRE -> . incremento EXP
    (151) INC_PRE -> . decremento EXP
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    llav2           shift and go to state 233
    error           shift and go to state 194
    t_struct        shift and go to state 214
    t_if            shift and go to state 216
    iden            shift and go to state 215
    t_break         shift and go to state 218
    t_continue      shift and go to state 219
    t_switch        shift and go to state 220
    t_do            shift and go to state 221
    t_while         shift and go to state 222
    t_return        shift and go to state 223
    t_goto          shift and go to state 224
    t_for           shift and go to state 225
    t_printf        shift and go to state 226
    incremento      shift and go to state 227
    decremento      shift and go to state 228
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    S_F                            shift and go to state 234
    Declaracion                    shift and go to state 195
    LASIGNACION                    shift and go to state 196
    INSTANCIA                      shift and go to state 197
    STRUCT                         shift and go to state 198
    IF                             shift and go to state 199
    LLAMADA                        shift and go to state 200
    BREAK                          shift and go to state 201
    CONTINUE                       shift and go to state 202
    SWITCH                         shift and go to state 203
    DO_WHILE                       shift and go to state 204
    WHILE                          shift and go to state 205
    RETURN                         shift and go to state 206
    ETIQUETA                       shift and go to state 207
    GOTO                           shift and go to state 208
    FOR                            shift and go to state 209
    PRINTF                         shift and go to state 210
    INC_POST                       shift and go to state 211
    INC_PRE                        shift and go to state 212
    Tipos                          shift and go to state 213
    ASIGNACION                     shift and go to state 10
    EXP                            shift and go to state 217
    ACCESO_STRUCT                  shift and go to state 229
    ItemsStruct2                   shift and go to state 19

state 192

    (86) BLOQUE -> llav1 llav2 .

    error           reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_struct        reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_void          reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_char          reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_int           reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_double        reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_float         reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    iden            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    $end            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_while         reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_else          reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    llav2           reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_if            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_break         reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_continue      reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_switch        reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_do            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_return        reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_goto          reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_for           reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_printf        reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    incremento      reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    decremento      reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    par1            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    string          reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    entero          reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    decimal         reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    char            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_scanf         reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    mas             reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    menos           reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    not             reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    notb            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    andb            reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    llav1           reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_sizeof        reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_default       reduce using rule 86 (BLOQUE -> llav1 llav2 .)
    t_case          reduce using rule 86 (BLOQUE -> llav1 llav2 .)


state 193

    (61) SS_F -> S_F .

    llav2           reduce using rule 61 (SS_F -> S_F .)
    error           reduce using rule 61 (SS_F -> S_F .)
    t_struct        reduce using rule 61 (SS_F -> S_F .)
    t_if            reduce using rule 61 (SS_F -> S_F .)
    iden            reduce using rule 61 (SS_F -> S_F .)
    t_break         reduce using rule 61 (SS_F -> S_F .)
    t_continue      reduce using rule 61 (SS_F -> S_F .)
    t_switch        reduce using rule 61 (SS_F -> S_F .)
    t_do            reduce using rule 61 (SS_F -> S_F .)
    t_while         reduce using rule 61 (SS_F -> S_F .)
    t_return        reduce using rule 61 (SS_F -> S_F .)
    t_goto          reduce using rule 61 (SS_F -> S_F .)
    t_for           reduce using rule 61 (SS_F -> S_F .)
    t_printf        reduce using rule 61 (SS_F -> S_F .)
    incremento      reduce using rule 61 (SS_F -> S_F .)
    decremento      reduce using rule 61 (SS_F -> S_F .)
    t_char          reduce using rule 61 (SS_F -> S_F .)
    t_int           reduce using rule 61 (SS_F -> S_F .)
    t_double        reduce using rule 61 (SS_F -> S_F .)
    t_float         reduce using rule 61 (SS_F -> S_F .)
    par1            reduce using rule 61 (SS_F -> S_F .)
    string          reduce using rule 61 (SS_F -> S_F .)
    entero          reduce using rule 61 (SS_F -> S_F .)
    decimal         reduce using rule 61 (SS_F -> S_F .)
    char            reduce using rule 61 (SS_F -> S_F .)
    t_scanf         reduce using rule 61 (SS_F -> S_F .)
    mas             reduce using rule 61 (SS_F -> S_F .)
    menos           reduce using rule 61 (SS_F -> S_F .)
    not             reduce using rule 61 (SS_F -> S_F .)
    notb            reduce using rule 61 (SS_F -> S_F .)
    andb            reduce using rule 61 (SS_F -> S_F .)
    llav1           reduce using rule 61 (SS_F -> S_F .)
    t_sizeof        reduce using rule 61 (SS_F -> S_F .)
    t_default       reduce using rule 61 (SS_F -> S_F .)
    t_case          reduce using rule 61 (SS_F -> S_F .)


state 194

    (62) S_F -> error .

    llav2           reduce using rule 62 (S_F -> error .)
    error           reduce using rule 62 (S_F -> error .)
    t_struct        reduce using rule 62 (S_F -> error .)
    t_if            reduce using rule 62 (S_F -> error .)
    iden            reduce using rule 62 (S_F -> error .)
    t_break         reduce using rule 62 (S_F -> error .)
    t_continue      reduce using rule 62 (S_F -> error .)
    t_switch        reduce using rule 62 (S_F -> error .)
    t_do            reduce using rule 62 (S_F -> error .)
    t_while         reduce using rule 62 (S_F -> error .)
    t_return        reduce using rule 62 (S_F -> error .)
    t_goto          reduce using rule 62 (S_F -> error .)
    t_for           reduce using rule 62 (S_F -> error .)
    t_printf        reduce using rule 62 (S_F -> error .)
    incremento      reduce using rule 62 (S_F -> error .)
    decremento      reduce using rule 62 (S_F -> error .)
    t_char          reduce using rule 62 (S_F -> error .)
    t_int           reduce using rule 62 (S_F -> error .)
    t_double        reduce using rule 62 (S_F -> error .)
    t_float         reduce using rule 62 (S_F -> error .)
    par1            reduce using rule 62 (S_F -> error .)
    string          reduce using rule 62 (S_F -> error .)
    entero          reduce using rule 62 (S_F -> error .)
    decimal         reduce using rule 62 (S_F -> error .)
    char            reduce using rule 62 (S_F -> error .)
    t_scanf         reduce using rule 62 (S_F -> error .)
    mas             reduce using rule 62 (S_F -> error .)
    menos           reduce using rule 62 (S_F -> error .)
    not             reduce using rule 62 (S_F -> error .)
    notb            reduce using rule 62 (S_F -> error .)
    andb            reduce using rule 62 (S_F -> error .)
    llav1           reduce using rule 62 (S_F -> error .)
    t_sizeof        reduce using rule 62 (S_F -> error .)
    t_default       reduce using rule 62 (S_F -> error .)
    t_case          reduce using rule 62 (S_F -> error .)


state 195

    (63) S_F -> Declaracion .

    llav2           reduce using rule 63 (S_F -> Declaracion .)
    error           reduce using rule 63 (S_F -> Declaracion .)
    t_struct        reduce using rule 63 (S_F -> Declaracion .)
    t_if            reduce using rule 63 (S_F -> Declaracion .)
    iden            reduce using rule 63 (S_F -> Declaracion .)
    t_break         reduce using rule 63 (S_F -> Declaracion .)
    t_continue      reduce using rule 63 (S_F -> Declaracion .)
    t_switch        reduce using rule 63 (S_F -> Declaracion .)
    t_do            reduce using rule 63 (S_F -> Declaracion .)
    t_while         reduce using rule 63 (S_F -> Declaracion .)
    t_return        reduce using rule 63 (S_F -> Declaracion .)
    t_goto          reduce using rule 63 (S_F -> Declaracion .)
    t_for           reduce using rule 63 (S_F -> Declaracion .)
    t_printf        reduce using rule 63 (S_F -> Declaracion .)
    incremento      reduce using rule 63 (S_F -> Declaracion .)
    decremento      reduce using rule 63 (S_F -> Declaracion .)
    t_char          reduce using rule 63 (S_F -> Declaracion .)
    t_int           reduce using rule 63 (S_F -> Declaracion .)
    t_double        reduce using rule 63 (S_F -> Declaracion .)
    t_float         reduce using rule 63 (S_F -> Declaracion .)
    par1            reduce using rule 63 (S_F -> Declaracion .)
    string          reduce using rule 63 (S_F -> Declaracion .)
    entero          reduce using rule 63 (S_F -> Declaracion .)
    decimal         reduce using rule 63 (S_F -> Declaracion .)
    char            reduce using rule 63 (S_F -> Declaracion .)
    t_scanf         reduce using rule 63 (S_F -> Declaracion .)
    mas             reduce using rule 63 (S_F -> Declaracion .)
    menos           reduce using rule 63 (S_F -> Declaracion .)
    not             reduce using rule 63 (S_F -> Declaracion .)
    notb            reduce using rule 63 (S_F -> Declaracion .)
    andb            reduce using rule 63 (S_F -> Declaracion .)
    llav1           reduce using rule 63 (S_F -> Declaracion .)
    t_sizeof        reduce using rule 63 (S_F -> Declaracion .)
    t_default       reduce using rule 63 (S_F -> Declaracion .)
    t_case          reduce using rule 63 (S_F -> Declaracion .)


state 196

    (64) S_F -> LASIGNACION . pyc
    (20) LASIGNACION -> LASIGNACION . coma ASIGNACION

    pyc             shift and go to state 235
    coma            shift and go to state 22


state 197

    (65) S_F -> INSTANCIA . pyc

    pyc             shift and go to state 236


state 198

    (66) S_F -> STRUCT . pyc

    pyc             shift and go to state 237


state 199

    (67) S_F -> IF .

    llav2           reduce using rule 67 (S_F -> IF .)
    error           reduce using rule 67 (S_F -> IF .)
    t_struct        reduce using rule 67 (S_F -> IF .)
    t_if            reduce using rule 67 (S_F -> IF .)
    iden            reduce using rule 67 (S_F -> IF .)
    t_break         reduce using rule 67 (S_F -> IF .)
    t_continue      reduce using rule 67 (S_F -> IF .)
    t_switch        reduce using rule 67 (S_F -> IF .)
    t_do            reduce using rule 67 (S_F -> IF .)
    t_while         reduce using rule 67 (S_F -> IF .)
    t_return        reduce using rule 67 (S_F -> IF .)
    t_goto          reduce using rule 67 (S_F -> IF .)
    t_for           reduce using rule 67 (S_F -> IF .)
    t_printf        reduce using rule 67 (S_F -> IF .)
    incremento      reduce using rule 67 (S_F -> IF .)
    decremento      reduce using rule 67 (S_F -> IF .)
    t_char          reduce using rule 67 (S_F -> IF .)
    t_int           reduce using rule 67 (S_F -> IF .)
    t_double        reduce using rule 67 (S_F -> IF .)
    t_float         reduce using rule 67 (S_F -> IF .)
    par1            reduce using rule 67 (S_F -> IF .)
    string          reduce using rule 67 (S_F -> IF .)
    entero          reduce using rule 67 (S_F -> IF .)
    decimal         reduce using rule 67 (S_F -> IF .)
    char            reduce using rule 67 (S_F -> IF .)
    t_scanf         reduce using rule 67 (S_F -> IF .)
    mas             reduce using rule 67 (S_F -> IF .)
    menos           reduce using rule 67 (S_F -> IF .)
    not             reduce using rule 67 (S_F -> IF .)
    notb            reduce using rule 67 (S_F -> IF .)
    andb            reduce using rule 67 (S_F -> IF .)
    llav1           reduce using rule 67 (S_F -> IF .)
    t_sizeof        reduce using rule 67 (S_F -> IF .)
    t_default       reduce using rule 67 (S_F -> IF .)
    t_case          reduce using rule 67 (S_F -> IF .)


state 200

    (68) S_F -> LLAMADA . pyc
    (162) EXP -> LLAMADA .

    pyc             shift and go to state 238
    incremento      reduce using rule 162 (EXP -> LLAMADA .)
    decremento      reduce using rule 162 (EXP -> LLAMADA .)
    mas             reduce using rule 162 (EXP -> LLAMADA .)
    menos           reduce using rule 162 (EXP -> LLAMADA .)
    por             reduce using rule 162 (EXP -> LLAMADA .)
    division        reduce using rule 162 (EXP -> LLAMADA .)
    modulo          reduce using rule 162 (EXP -> LLAMADA .)
    mayor           reduce using rule 162 (EXP -> LLAMADA .)
    mayori          reduce using rule 162 (EXP -> LLAMADA .)
    menor           reduce using rule 162 (EXP -> LLAMADA .)
    menori          reduce using rule 162 (EXP -> LLAMADA .)
    igual           reduce using rule 162 (EXP -> LLAMADA .)
    diferente       reduce using rule 162 (EXP -> LLAMADA .)
    and             reduce using rule 162 (EXP -> LLAMADA .)
    or              reduce using rule 162 (EXP -> LLAMADA .)
    shiftizq        reduce using rule 162 (EXP -> LLAMADA .)
    shiftder        reduce using rule 162 (EXP -> LLAMADA .)
    andb            reduce using rule 162 (EXP -> LLAMADA .)
    xorb            reduce using rule 162 (EXP -> LLAMADA .)
    orb             reduce using rule 162 (EXP -> LLAMADA .)
    condicional     reduce using rule 162 (EXP -> LLAMADA .)


state 201

    (69) S_F -> BREAK . pyc

    pyc             shift and go to state 239


state 202

    (70) S_F -> CONTINUE . pyc

    pyc             shift and go to state 240


state 203

    (71) S_F -> SWITCH .

    llav2           reduce using rule 71 (S_F -> SWITCH .)
    error           reduce using rule 71 (S_F -> SWITCH .)
    t_struct        reduce using rule 71 (S_F -> SWITCH .)
    t_if            reduce using rule 71 (S_F -> SWITCH .)
    iden            reduce using rule 71 (S_F -> SWITCH .)
    t_break         reduce using rule 71 (S_F -> SWITCH .)
    t_continue      reduce using rule 71 (S_F -> SWITCH .)
    t_switch        reduce using rule 71 (S_F -> SWITCH .)
    t_do            reduce using rule 71 (S_F -> SWITCH .)
    t_while         reduce using rule 71 (S_F -> SWITCH .)
    t_return        reduce using rule 71 (S_F -> SWITCH .)
    t_goto          reduce using rule 71 (S_F -> SWITCH .)
    t_for           reduce using rule 71 (S_F -> SWITCH .)
    t_printf        reduce using rule 71 (S_F -> SWITCH .)
    incremento      reduce using rule 71 (S_F -> SWITCH .)
    decremento      reduce using rule 71 (S_F -> SWITCH .)
    t_char          reduce using rule 71 (S_F -> SWITCH .)
    t_int           reduce using rule 71 (S_F -> SWITCH .)
    t_double        reduce using rule 71 (S_F -> SWITCH .)
    t_float         reduce using rule 71 (S_F -> SWITCH .)
    par1            reduce using rule 71 (S_F -> SWITCH .)
    string          reduce using rule 71 (S_F -> SWITCH .)
    entero          reduce using rule 71 (S_F -> SWITCH .)
    decimal         reduce using rule 71 (S_F -> SWITCH .)
    char            reduce using rule 71 (S_F -> SWITCH .)
    t_scanf         reduce using rule 71 (S_F -> SWITCH .)
    mas             reduce using rule 71 (S_F -> SWITCH .)
    menos           reduce using rule 71 (S_F -> SWITCH .)
    not             reduce using rule 71 (S_F -> SWITCH .)
    notb            reduce using rule 71 (S_F -> SWITCH .)
    andb            reduce using rule 71 (S_F -> SWITCH .)
    llav1           reduce using rule 71 (S_F -> SWITCH .)
    t_sizeof        reduce using rule 71 (S_F -> SWITCH .)
    t_default       reduce using rule 71 (S_F -> SWITCH .)
    t_case          reduce using rule 71 (S_F -> SWITCH .)


state 204

    (72) S_F -> DO_WHILE . pyc

    pyc             shift and go to state 241


state 205

    (73) S_F -> WHILE .

    llav2           reduce using rule 73 (S_F -> WHILE .)
    error           reduce using rule 73 (S_F -> WHILE .)
    t_struct        reduce using rule 73 (S_F -> WHILE .)
    t_if            reduce using rule 73 (S_F -> WHILE .)
    iden            reduce using rule 73 (S_F -> WHILE .)
    t_break         reduce using rule 73 (S_F -> WHILE .)
    t_continue      reduce using rule 73 (S_F -> WHILE .)
    t_switch        reduce using rule 73 (S_F -> WHILE .)
    t_do            reduce using rule 73 (S_F -> WHILE .)
    t_while         reduce using rule 73 (S_F -> WHILE .)
    t_return        reduce using rule 73 (S_F -> WHILE .)
    t_goto          reduce using rule 73 (S_F -> WHILE .)
    t_for           reduce using rule 73 (S_F -> WHILE .)
    t_printf        reduce using rule 73 (S_F -> WHILE .)
    incremento      reduce using rule 73 (S_F -> WHILE .)
    decremento      reduce using rule 73 (S_F -> WHILE .)
    t_char          reduce using rule 73 (S_F -> WHILE .)
    t_int           reduce using rule 73 (S_F -> WHILE .)
    t_double        reduce using rule 73 (S_F -> WHILE .)
    t_float         reduce using rule 73 (S_F -> WHILE .)
    par1            reduce using rule 73 (S_F -> WHILE .)
    string          reduce using rule 73 (S_F -> WHILE .)
    entero          reduce using rule 73 (S_F -> WHILE .)
    decimal         reduce using rule 73 (S_F -> WHILE .)
    char            reduce using rule 73 (S_F -> WHILE .)
    t_scanf         reduce using rule 73 (S_F -> WHILE .)
    mas             reduce using rule 73 (S_F -> WHILE .)
    menos           reduce using rule 73 (S_F -> WHILE .)
    not             reduce using rule 73 (S_F -> WHILE .)
    notb            reduce using rule 73 (S_F -> WHILE .)
    andb            reduce using rule 73 (S_F -> WHILE .)
    llav1           reduce using rule 73 (S_F -> WHILE .)
    t_sizeof        reduce using rule 73 (S_F -> WHILE .)
    t_default       reduce using rule 73 (S_F -> WHILE .)
    t_case          reduce using rule 73 (S_F -> WHILE .)


state 206

    (74) S_F -> RETURN . pyc

    pyc             shift and go to state 242


state 207

    (75) S_F -> ETIQUETA .

    llav2           reduce using rule 75 (S_F -> ETIQUETA .)
    error           reduce using rule 75 (S_F -> ETIQUETA .)
    t_struct        reduce using rule 75 (S_F -> ETIQUETA .)
    t_if            reduce using rule 75 (S_F -> ETIQUETA .)
    iden            reduce using rule 75 (S_F -> ETIQUETA .)
    t_break         reduce using rule 75 (S_F -> ETIQUETA .)
    t_continue      reduce using rule 75 (S_F -> ETIQUETA .)
    t_switch        reduce using rule 75 (S_F -> ETIQUETA .)
    t_do            reduce using rule 75 (S_F -> ETIQUETA .)
    t_while         reduce using rule 75 (S_F -> ETIQUETA .)
    t_return        reduce using rule 75 (S_F -> ETIQUETA .)
    t_goto          reduce using rule 75 (S_F -> ETIQUETA .)
    t_for           reduce using rule 75 (S_F -> ETIQUETA .)
    t_printf        reduce using rule 75 (S_F -> ETIQUETA .)
    incremento      reduce using rule 75 (S_F -> ETIQUETA .)
    decremento      reduce using rule 75 (S_F -> ETIQUETA .)
    t_char          reduce using rule 75 (S_F -> ETIQUETA .)
    t_int           reduce using rule 75 (S_F -> ETIQUETA .)
    t_double        reduce using rule 75 (S_F -> ETIQUETA .)
    t_float         reduce using rule 75 (S_F -> ETIQUETA .)
    par1            reduce using rule 75 (S_F -> ETIQUETA .)
    string          reduce using rule 75 (S_F -> ETIQUETA .)
    entero          reduce using rule 75 (S_F -> ETIQUETA .)
    decimal         reduce using rule 75 (S_F -> ETIQUETA .)
    char            reduce using rule 75 (S_F -> ETIQUETA .)
    t_scanf         reduce using rule 75 (S_F -> ETIQUETA .)
    mas             reduce using rule 75 (S_F -> ETIQUETA .)
    menos           reduce using rule 75 (S_F -> ETIQUETA .)
    not             reduce using rule 75 (S_F -> ETIQUETA .)
    notb            reduce using rule 75 (S_F -> ETIQUETA .)
    andb            reduce using rule 75 (S_F -> ETIQUETA .)
    llav1           reduce using rule 75 (S_F -> ETIQUETA .)
    t_sizeof        reduce using rule 75 (S_F -> ETIQUETA .)
    t_default       reduce using rule 75 (S_F -> ETIQUETA .)
    t_case          reduce using rule 75 (S_F -> ETIQUETA .)


state 208

    (76) S_F -> GOTO . pyc

    pyc             shift and go to state 243


state 209

    (77) S_F -> FOR .

    llav2           reduce using rule 77 (S_F -> FOR .)
    error           reduce using rule 77 (S_F -> FOR .)
    t_struct        reduce using rule 77 (S_F -> FOR .)
    t_if            reduce using rule 77 (S_F -> FOR .)
    iden            reduce using rule 77 (S_F -> FOR .)
    t_break         reduce using rule 77 (S_F -> FOR .)
    t_continue      reduce using rule 77 (S_F -> FOR .)
    t_switch        reduce using rule 77 (S_F -> FOR .)
    t_do            reduce using rule 77 (S_F -> FOR .)
    t_while         reduce using rule 77 (S_F -> FOR .)
    t_return        reduce using rule 77 (S_F -> FOR .)
    t_goto          reduce using rule 77 (S_F -> FOR .)
    t_for           reduce using rule 77 (S_F -> FOR .)
    t_printf        reduce using rule 77 (S_F -> FOR .)
    incremento      reduce using rule 77 (S_F -> FOR .)
    decremento      reduce using rule 77 (S_F -> FOR .)
    t_char          reduce using rule 77 (S_F -> FOR .)
    t_int           reduce using rule 77 (S_F -> FOR .)
    t_double        reduce using rule 77 (S_F -> FOR .)
    t_float         reduce using rule 77 (S_F -> FOR .)
    par1            reduce using rule 77 (S_F -> FOR .)
    string          reduce using rule 77 (S_F -> FOR .)
    entero          reduce using rule 77 (S_F -> FOR .)
    decimal         reduce using rule 77 (S_F -> FOR .)
    char            reduce using rule 77 (S_F -> FOR .)
    t_scanf         reduce using rule 77 (S_F -> FOR .)
    mas             reduce using rule 77 (S_F -> FOR .)
    menos           reduce using rule 77 (S_F -> FOR .)
    not             reduce using rule 77 (S_F -> FOR .)
    notb            reduce using rule 77 (S_F -> FOR .)
    andb            reduce using rule 77 (S_F -> FOR .)
    llav1           reduce using rule 77 (S_F -> FOR .)
    t_sizeof        reduce using rule 77 (S_F -> FOR .)
    t_default       reduce using rule 77 (S_F -> FOR .)
    t_case          reduce using rule 77 (S_F -> FOR .)


state 210

    (78) S_F -> PRINTF . pyc

    pyc             shift and go to state 244


state 211

    (79) S_F -> INC_POST . pyc

    pyc             shift and go to state 245


state 212

    (80) S_F -> INC_PRE . pyc

    pyc             shift and go to state 246


state 213

    (10) Declaracion -> Tipos . L_Dec pyc
    (11) L_Dec -> . L_Dec coma Dec
    (12) L_Dec -> . Dec
    (13) Dec -> . iden
    (14) Dec -> . iden asigna EXP
    (15) Dec -> . iden cor1 cor2 asigna EXP
    (16) Dec -> . iden LACCESO
    (17) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 80

    L_Dec                          shift and go to state 24
    Dec                            shift and go to state 26

state 214

    (83) INSTANCIA -> t_struct . iden iden LACCESO
    (84) INSTANCIA -> t_struct . iden iden
    (39) STRUCT -> t_struct . iden llav1 ATRIBUTOS llav2

    iden            shift and go to state 247


state 215

    (114) LLAMADA -> iden . par1 ELEMENTS par2
    (115) LLAMADA -> iden . par1 par2
    (93) ETIQUETA -> iden . bipunto
    (22) ASIGNACION -> iden .
    (23) ASIGNACION -> iden . OP EXP
    (24) ASIGNACION -> iden . LACCESO
    (25) ASIGNACION -> iden . LACCESO OP EXP
    (129) EXP -> iden . LACCESO
    (137) EXP -> iden .
    (48) ItemsStruct2 -> iden .
    (49) ItemsStruct2 -> iden . LACCESO
    (28) OP -> . andbasigna
    (29) OP -> . divasigna
    (30) OP -> . masasigna
    (31) OP -> . menosasigna
    (32) OP -> . modasigna
    (33) OP -> . orbasigna
    (34) OP -> . porasigna
    (35) OP -> . shiftizqasigna
    (36) OP -> . shiftderasigna
    (37) OP -> . xorbasinga
    (38) OP -> . asigna
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    par1            shift and go to state 91
    bipunto         shift and go to state 248
    pyc             reduce using rule 22 (ASIGNACION -> iden .)
    coma            reduce using rule 22 (ASIGNACION -> iden .)
    incremento      reduce using rule 137 (EXP -> iden .)
    decremento      reduce using rule 137 (EXP -> iden .)
    mas             reduce using rule 137 (EXP -> iden .)
    menos           reduce using rule 137 (EXP -> iden .)
    por             reduce using rule 137 (EXP -> iden .)
    division        reduce using rule 137 (EXP -> iden .)
    modulo          reduce using rule 137 (EXP -> iden .)
    mayor           reduce using rule 137 (EXP -> iden .)
    mayori          reduce using rule 137 (EXP -> iden .)
    menor           reduce using rule 137 (EXP -> iden .)
    menori          reduce using rule 137 (EXP -> iden .)
    igual           reduce using rule 137 (EXP -> iden .)
    diferente       reduce using rule 137 (EXP -> iden .)
    and             reduce using rule 137 (EXP -> iden .)
    or              reduce using rule 137 (EXP -> iden .)
    shiftizq        reduce using rule 137 (EXP -> iden .)
    shiftder        reduce using rule 137 (EXP -> iden .)
    andb            reduce using rule 137 (EXP -> iden .)
    xorb            reduce using rule 137 (EXP -> iden .)
    orb             reduce using rule 137 (EXP -> iden .)
    condicional     reduce using rule 137 (EXP -> iden .)
    punto           reduce using rule 48 (ItemsStruct2 -> iden .)
    andbasigna      shift and go to state 30
    divasigna       shift and go to state 31
    masasigna       shift and go to state 32
    menosasigna     shift and go to state 33
    modasigna       shift and go to state 34
    orbasigna       shift and go to state 35
    porasigna       shift and go to state 36
    shiftizqasigna  shift and go to state 37
    shiftderasigna  shift and go to state 38
    xorbasinga      shift and go to state 39
    asigna          shift and go to state 40
    cor1            shift and go to state 41

    OP                             shift and go to state 28
    LACCESO                        shift and go to state 249

state 216

    (109) IF -> t_if . par1 EXP par2 BLOQUE
    (110) IF -> t_if . par1 EXP par2 BLOQUE t_else IF
    (111) IF -> t_if . par1 EXP par2 BLOQUE t_else BLOQUE

    par1            shift and go to state 250


state 217

    (152) INC_POST -> EXP . incremento
    (153) INC_POST -> EXP . decremento
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    incremento      shift and go to state 251
    decremento      shift and go to state 252
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110


state 218

    (107) BREAK -> t_break .

    pyc             reduce using rule 107 (BREAK -> t_break .)


state 219

    (108) CONTINUE -> t_continue .

    pyc             reduce using rule 108 (CONTINUE -> t_continue .)


state 220

    (99) SWITCH -> t_switch . par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> t_switch . par1 EXP par2 llav1 CASOS DEFAULT llav2

    par1            shift and go to state 253


state 221

    (95) DO_WHILE -> t_do . BLOQUE t_while par1 EXP par2
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 254

state 222

    (96) WHILE -> t_while . par1 EXP par2 BLOQUE

    par1            shift and go to state 255


state 223

    (97) RETURN -> t_return . EXP
    (98) RETURN -> t_return .
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    pyc             reduce using rule 98 (RETURN -> t_return .)
    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 256
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 224

    (94) GOTO -> t_goto . iden

    iden            shift and go to state 257


state 225

    (87) FOR -> t_for . par1 INICIO EXP pyc INCDC BLOQUE

    par1            shift and go to state 258


state 226

    (81) PRINTF -> t_printf . par1 string coma ELEMENTS par2
    (82) PRINTF -> t_printf . par1 string par2

    par1            shift and go to state 259


state 227

    (150) INC_PRE -> incremento . EXP
    (154) EXP -> incremento . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 260
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 228

    (151) INC_PRE -> decremento . EXP
    (155) EXP -> decremento . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 261
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 229

    (26) ASIGNACION -> ACCESO_STRUCT . OP EXP
    (27) ASIGNACION -> ACCESO_STRUCT .
    (163) EXP -> ACCESO_STRUCT .
    (28) OP -> . andbasigna
    (29) OP -> . divasigna
    (30) OP -> . masasigna
    (31) OP -> . menosasigna
    (32) OP -> . modasigna
    (33) OP -> . orbasigna
    (34) OP -> . porasigna
    (35) OP -> . shiftizqasigna
    (36) OP -> . shiftderasigna
    (37) OP -> . xorbasinga
    (38) OP -> . asigna

    pyc             reduce using rule 27 (ASIGNACION -> ACCESO_STRUCT .)
    coma            reduce using rule 27 (ASIGNACION -> ACCESO_STRUCT .)
    incremento      reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    decremento      reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    mas             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    menos           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    por             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    division        reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    modulo          reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    mayor           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    mayori          reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    menor           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    menori          reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    igual           reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    diferente       reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    and             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    or              reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    shiftizq        reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    shiftder        reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    andb            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    xorb            reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    orb             reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    condicional     reduce using rule 163 (EXP -> ACCESO_STRUCT .)
    andbasigna      shift and go to state 30
    divasigna       shift and go to state 31
    masasigna       shift and go to state 32
    menosasigna     shift and go to state 33
    modasigna       shift and go to state 34
    orbasigna       shift and go to state 35
    porasigna       shift and go to state 36
    shiftizqasigna  shift and go to state 37
    shiftderasigna  shift and go to state 38
    xorbasinga      shift and go to state 39
    asigna          shift and go to state 40

    OP                             shift and go to state 43

state 230

    (43) LItemsStruct -> LItemsStruct coma ItemsStruct .

    pyc             reduce using rule 43 (LItemsStruct -> LItemsStruct coma ItemsStruct .)
    coma            reduce using rule 43 (LItemsStruct -> LItemsStruct coma ItemsStruct .)


state 231

    (47) ItemsStruct -> iden cor1 cor2 .

    pyc             reduce using rule 47 (ItemsStruct -> iden cor1 cor2 .)
    coma            reduce using rule 47 (ItemsStruct -> iden cor1 cor2 .)


state 232

    (156) EXP -> EXP condicional EXP bipunto EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .)
    coma            reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .)
    cor2            reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .)
    par2            reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .)
    llav2           reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .)
    bipunto         reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! mas             [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! menos           [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! por             [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! division        [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! modulo          [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! mayor           [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! mayori          [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! menor           [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! menori          [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! igual           [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! diferente       [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! and             [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! or              [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! shiftizq        [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! shiftder        [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! andb            [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! xorb            [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! orb             [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! condicional     [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! incremento      [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! decremento      [ reduce using rule 156 (EXP -> EXP condicional EXP bipunto EXP .) ]


state 233

    (85) BLOQUE -> llav1 SS_F llav2 .

    error           reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_struct        reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_void          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_char          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_int           reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_double        reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_float         reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    iden            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    $end            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_while         reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_else          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    llav2           reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_if            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_break         reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_continue      reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_switch        reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_do            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_return        reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_goto          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_for           reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_printf        reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    incremento      reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    decremento      reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    par1            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    string          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    entero          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    decimal         reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    char            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_scanf         reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    mas             reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    menos           reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    not             reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    notb            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    andb            reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    llav1           reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_sizeof        reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_default       reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)
    t_case          reduce using rule 85 (BLOQUE -> llav1 SS_F llav2 .)


state 234

    (60) SS_F -> SS_F S_F .

    llav2           reduce using rule 60 (SS_F -> SS_F S_F .)
    error           reduce using rule 60 (SS_F -> SS_F S_F .)
    t_struct        reduce using rule 60 (SS_F -> SS_F S_F .)
    t_if            reduce using rule 60 (SS_F -> SS_F S_F .)
    iden            reduce using rule 60 (SS_F -> SS_F S_F .)
    t_break         reduce using rule 60 (SS_F -> SS_F S_F .)
    t_continue      reduce using rule 60 (SS_F -> SS_F S_F .)
    t_switch        reduce using rule 60 (SS_F -> SS_F S_F .)
    t_do            reduce using rule 60 (SS_F -> SS_F S_F .)
    t_while         reduce using rule 60 (SS_F -> SS_F S_F .)
    t_return        reduce using rule 60 (SS_F -> SS_F S_F .)
    t_goto          reduce using rule 60 (SS_F -> SS_F S_F .)
    t_for           reduce using rule 60 (SS_F -> SS_F S_F .)
    t_printf        reduce using rule 60 (SS_F -> SS_F S_F .)
    incremento      reduce using rule 60 (SS_F -> SS_F S_F .)
    decremento      reduce using rule 60 (SS_F -> SS_F S_F .)
    t_char          reduce using rule 60 (SS_F -> SS_F S_F .)
    t_int           reduce using rule 60 (SS_F -> SS_F S_F .)
    t_double        reduce using rule 60 (SS_F -> SS_F S_F .)
    t_float         reduce using rule 60 (SS_F -> SS_F S_F .)
    par1            reduce using rule 60 (SS_F -> SS_F S_F .)
    string          reduce using rule 60 (SS_F -> SS_F S_F .)
    entero          reduce using rule 60 (SS_F -> SS_F S_F .)
    decimal         reduce using rule 60 (SS_F -> SS_F S_F .)
    char            reduce using rule 60 (SS_F -> SS_F S_F .)
    t_scanf         reduce using rule 60 (SS_F -> SS_F S_F .)
    mas             reduce using rule 60 (SS_F -> SS_F S_F .)
    menos           reduce using rule 60 (SS_F -> SS_F S_F .)
    not             reduce using rule 60 (SS_F -> SS_F S_F .)
    notb            reduce using rule 60 (SS_F -> SS_F S_F .)
    andb            reduce using rule 60 (SS_F -> SS_F S_F .)
    llav1           reduce using rule 60 (SS_F -> SS_F S_F .)
    t_sizeof        reduce using rule 60 (SS_F -> SS_F S_F .)
    t_default       reduce using rule 60 (SS_F -> SS_F S_F .)
    t_case          reduce using rule 60 (SS_F -> SS_F S_F .)


state 235

    (64) S_F -> LASIGNACION pyc .

    llav2           reduce using rule 64 (S_F -> LASIGNACION pyc .)
    error           reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_struct        reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_if            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    iden            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_break         reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_continue      reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_switch        reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_do            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_while         reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_return        reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_goto          reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_for           reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_printf        reduce using rule 64 (S_F -> LASIGNACION pyc .)
    incremento      reduce using rule 64 (S_F -> LASIGNACION pyc .)
    decremento      reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_char          reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_int           reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_double        reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_float         reduce using rule 64 (S_F -> LASIGNACION pyc .)
    par1            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    string          reduce using rule 64 (S_F -> LASIGNACION pyc .)
    entero          reduce using rule 64 (S_F -> LASIGNACION pyc .)
    decimal         reduce using rule 64 (S_F -> LASIGNACION pyc .)
    char            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_scanf         reduce using rule 64 (S_F -> LASIGNACION pyc .)
    mas             reduce using rule 64 (S_F -> LASIGNACION pyc .)
    menos           reduce using rule 64 (S_F -> LASIGNACION pyc .)
    not             reduce using rule 64 (S_F -> LASIGNACION pyc .)
    notb            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    andb            reduce using rule 64 (S_F -> LASIGNACION pyc .)
    llav1           reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_sizeof        reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_default       reduce using rule 64 (S_F -> LASIGNACION pyc .)
    t_case          reduce using rule 64 (S_F -> LASIGNACION pyc .)


state 236

    (65) S_F -> INSTANCIA pyc .

    llav2           reduce using rule 65 (S_F -> INSTANCIA pyc .)
    error           reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_struct        reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_if            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    iden            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_break         reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_continue      reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_switch        reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_do            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_while         reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_return        reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_goto          reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_for           reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_printf        reduce using rule 65 (S_F -> INSTANCIA pyc .)
    incremento      reduce using rule 65 (S_F -> INSTANCIA pyc .)
    decremento      reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_char          reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_int           reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_double        reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_float         reduce using rule 65 (S_F -> INSTANCIA pyc .)
    par1            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    string          reduce using rule 65 (S_F -> INSTANCIA pyc .)
    entero          reduce using rule 65 (S_F -> INSTANCIA pyc .)
    decimal         reduce using rule 65 (S_F -> INSTANCIA pyc .)
    char            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_scanf         reduce using rule 65 (S_F -> INSTANCIA pyc .)
    mas             reduce using rule 65 (S_F -> INSTANCIA pyc .)
    menos           reduce using rule 65 (S_F -> INSTANCIA pyc .)
    not             reduce using rule 65 (S_F -> INSTANCIA pyc .)
    notb            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    andb            reduce using rule 65 (S_F -> INSTANCIA pyc .)
    llav1           reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_sizeof        reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_default       reduce using rule 65 (S_F -> INSTANCIA pyc .)
    t_case          reduce using rule 65 (S_F -> INSTANCIA pyc .)


state 237

    (66) S_F -> STRUCT pyc .

    llav2           reduce using rule 66 (S_F -> STRUCT pyc .)
    error           reduce using rule 66 (S_F -> STRUCT pyc .)
    t_struct        reduce using rule 66 (S_F -> STRUCT pyc .)
    t_if            reduce using rule 66 (S_F -> STRUCT pyc .)
    iden            reduce using rule 66 (S_F -> STRUCT pyc .)
    t_break         reduce using rule 66 (S_F -> STRUCT pyc .)
    t_continue      reduce using rule 66 (S_F -> STRUCT pyc .)
    t_switch        reduce using rule 66 (S_F -> STRUCT pyc .)
    t_do            reduce using rule 66 (S_F -> STRUCT pyc .)
    t_while         reduce using rule 66 (S_F -> STRUCT pyc .)
    t_return        reduce using rule 66 (S_F -> STRUCT pyc .)
    t_goto          reduce using rule 66 (S_F -> STRUCT pyc .)
    t_for           reduce using rule 66 (S_F -> STRUCT pyc .)
    t_printf        reduce using rule 66 (S_F -> STRUCT pyc .)
    incremento      reduce using rule 66 (S_F -> STRUCT pyc .)
    decremento      reduce using rule 66 (S_F -> STRUCT pyc .)
    t_char          reduce using rule 66 (S_F -> STRUCT pyc .)
    t_int           reduce using rule 66 (S_F -> STRUCT pyc .)
    t_double        reduce using rule 66 (S_F -> STRUCT pyc .)
    t_float         reduce using rule 66 (S_F -> STRUCT pyc .)
    par1            reduce using rule 66 (S_F -> STRUCT pyc .)
    string          reduce using rule 66 (S_F -> STRUCT pyc .)
    entero          reduce using rule 66 (S_F -> STRUCT pyc .)
    decimal         reduce using rule 66 (S_F -> STRUCT pyc .)
    char            reduce using rule 66 (S_F -> STRUCT pyc .)
    t_scanf         reduce using rule 66 (S_F -> STRUCT pyc .)
    mas             reduce using rule 66 (S_F -> STRUCT pyc .)
    menos           reduce using rule 66 (S_F -> STRUCT pyc .)
    not             reduce using rule 66 (S_F -> STRUCT pyc .)
    notb            reduce using rule 66 (S_F -> STRUCT pyc .)
    andb            reduce using rule 66 (S_F -> STRUCT pyc .)
    llav1           reduce using rule 66 (S_F -> STRUCT pyc .)
    t_sizeof        reduce using rule 66 (S_F -> STRUCT pyc .)
    t_default       reduce using rule 66 (S_F -> STRUCT pyc .)
    t_case          reduce using rule 66 (S_F -> STRUCT pyc .)


state 238

    (68) S_F -> LLAMADA pyc .

    llav2           reduce using rule 68 (S_F -> LLAMADA pyc .)
    error           reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_struct        reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_if            reduce using rule 68 (S_F -> LLAMADA pyc .)
    iden            reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_break         reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_continue      reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_switch        reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_do            reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_while         reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_return        reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_goto          reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_for           reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_printf        reduce using rule 68 (S_F -> LLAMADA pyc .)
    incremento      reduce using rule 68 (S_F -> LLAMADA pyc .)
    decremento      reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_char          reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_int           reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_double        reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_float         reduce using rule 68 (S_F -> LLAMADA pyc .)
    par1            reduce using rule 68 (S_F -> LLAMADA pyc .)
    string          reduce using rule 68 (S_F -> LLAMADA pyc .)
    entero          reduce using rule 68 (S_F -> LLAMADA pyc .)
    decimal         reduce using rule 68 (S_F -> LLAMADA pyc .)
    char            reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_scanf         reduce using rule 68 (S_F -> LLAMADA pyc .)
    mas             reduce using rule 68 (S_F -> LLAMADA pyc .)
    menos           reduce using rule 68 (S_F -> LLAMADA pyc .)
    not             reduce using rule 68 (S_F -> LLAMADA pyc .)
    notb            reduce using rule 68 (S_F -> LLAMADA pyc .)
    andb            reduce using rule 68 (S_F -> LLAMADA pyc .)
    llav1           reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_sizeof        reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_default       reduce using rule 68 (S_F -> LLAMADA pyc .)
    t_case          reduce using rule 68 (S_F -> LLAMADA pyc .)


state 239

    (69) S_F -> BREAK pyc .

    llav2           reduce using rule 69 (S_F -> BREAK pyc .)
    error           reduce using rule 69 (S_F -> BREAK pyc .)
    t_struct        reduce using rule 69 (S_F -> BREAK pyc .)
    t_if            reduce using rule 69 (S_F -> BREAK pyc .)
    iden            reduce using rule 69 (S_F -> BREAK pyc .)
    t_break         reduce using rule 69 (S_F -> BREAK pyc .)
    t_continue      reduce using rule 69 (S_F -> BREAK pyc .)
    t_switch        reduce using rule 69 (S_F -> BREAK pyc .)
    t_do            reduce using rule 69 (S_F -> BREAK pyc .)
    t_while         reduce using rule 69 (S_F -> BREAK pyc .)
    t_return        reduce using rule 69 (S_F -> BREAK pyc .)
    t_goto          reduce using rule 69 (S_F -> BREAK pyc .)
    t_for           reduce using rule 69 (S_F -> BREAK pyc .)
    t_printf        reduce using rule 69 (S_F -> BREAK pyc .)
    incremento      reduce using rule 69 (S_F -> BREAK pyc .)
    decremento      reduce using rule 69 (S_F -> BREAK pyc .)
    t_char          reduce using rule 69 (S_F -> BREAK pyc .)
    t_int           reduce using rule 69 (S_F -> BREAK pyc .)
    t_double        reduce using rule 69 (S_F -> BREAK pyc .)
    t_float         reduce using rule 69 (S_F -> BREAK pyc .)
    par1            reduce using rule 69 (S_F -> BREAK pyc .)
    string          reduce using rule 69 (S_F -> BREAK pyc .)
    entero          reduce using rule 69 (S_F -> BREAK pyc .)
    decimal         reduce using rule 69 (S_F -> BREAK pyc .)
    char            reduce using rule 69 (S_F -> BREAK pyc .)
    t_scanf         reduce using rule 69 (S_F -> BREAK pyc .)
    mas             reduce using rule 69 (S_F -> BREAK pyc .)
    menos           reduce using rule 69 (S_F -> BREAK pyc .)
    not             reduce using rule 69 (S_F -> BREAK pyc .)
    notb            reduce using rule 69 (S_F -> BREAK pyc .)
    andb            reduce using rule 69 (S_F -> BREAK pyc .)
    llav1           reduce using rule 69 (S_F -> BREAK pyc .)
    t_sizeof        reduce using rule 69 (S_F -> BREAK pyc .)
    t_default       reduce using rule 69 (S_F -> BREAK pyc .)
    t_case          reduce using rule 69 (S_F -> BREAK pyc .)


state 240

    (70) S_F -> CONTINUE pyc .

    llav2           reduce using rule 70 (S_F -> CONTINUE pyc .)
    error           reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_struct        reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_if            reduce using rule 70 (S_F -> CONTINUE pyc .)
    iden            reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_break         reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_continue      reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_switch        reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_do            reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_while         reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_return        reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_goto          reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_for           reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_printf        reduce using rule 70 (S_F -> CONTINUE pyc .)
    incremento      reduce using rule 70 (S_F -> CONTINUE pyc .)
    decremento      reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_char          reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_int           reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_double        reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_float         reduce using rule 70 (S_F -> CONTINUE pyc .)
    par1            reduce using rule 70 (S_F -> CONTINUE pyc .)
    string          reduce using rule 70 (S_F -> CONTINUE pyc .)
    entero          reduce using rule 70 (S_F -> CONTINUE pyc .)
    decimal         reduce using rule 70 (S_F -> CONTINUE pyc .)
    char            reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_scanf         reduce using rule 70 (S_F -> CONTINUE pyc .)
    mas             reduce using rule 70 (S_F -> CONTINUE pyc .)
    menos           reduce using rule 70 (S_F -> CONTINUE pyc .)
    not             reduce using rule 70 (S_F -> CONTINUE pyc .)
    notb            reduce using rule 70 (S_F -> CONTINUE pyc .)
    andb            reduce using rule 70 (S_F -> CONTINUE pyc .)
    llav1           reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_sizeof        reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_default       reduce using rule 70 (S_F -> CONTINUE pyc .)
    t_case          reduce using rule 70 (S_F -> CONTINUE pyc .)


state 241

    (72) S_F -> DO_WHILE pyc .

    llav2           reduce using rule 72 (S_F -> DO_WHILE pyc .)
    error           reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_struct        reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_if            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    iden            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_break         reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_continue      reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_switch        reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_do            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_while         reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_return        reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_goto          reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_for           reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_printf        reduce using rule 72 (S_F -> DO_WHILE pyc .)
    incremento      reduce using rule 72 (S_F -> DO_WHILE pyc .)
    decremento      reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_char          reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_int           reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_double        reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_float         reduce using rule 72 (S_F -> DO_WHILE pyc .)
    par1            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    string          reduce using rule 72 (S_F -> DO_WHILE pyc .)
    entero          reduce using rule 72 (S_F -> DO_WHILE pyc .)
    decimal         reduce using rule 72 (S_F -> DO_WHILE pyc .)
    char            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_scanf         reduce using rule 72 (S_F -> DO_WHILE pyc .)
    mas             reduce using rule 72 (S_F -> DO_WHILE pyc .)
    menos           reduce using rule 72 (S_F -> DO_WHILE pyc .)
    not             reduce using rule 72 (S_F -> DO_WHILE pyc .)
    notb            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    andb            reduce using rule 72 (S_F -> DO_WHILE pyc .)
    llav1           reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_sizeof        reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_default       reduce using rule 72 (S_F -> DO_WHILE pyc .)
    t_case          reduce using rule 72 (S_F -> DO_WHILE pyc .)


state 242

    (74) S_F -> RETURN pyc .

    llav2           reduce using rule 74 (S_F -> RETURN pyc .)
    error           reduce using rule 74 (S_F -> RETURN pyc .)
    t_struct        reduce using rule 74 (S_F -> RETURN pyc .)
    t_if            reduce using rule 74 (S_F -> RETURN pyc .)
    iden            reduce using rule 74 (S_F -> RETURN pyc .)
    t_break         reduce using rule 74 (S_F -> RETURN pyc .)
    t_continue      reduce using rule 74 (S_F -> RETURN pyc .)
    t_switch        reduce using rule 74 (S_F -> RETURN pyc .)
    t_do            reduce using rule 74 (S_F -> RETURN pyc .)
    t_while         reduce using rule 74 (S_F -> RETURN pyc .)
    t_return        reduce using rule 74 (S_F -> RETURN pyc .)
    t_goto          reduce using rule 74 (S_F -> RETURN pyc .)
    t_for           reduce using rule 74 (S_F -> RETURN pyc .)
    t_printf        reduce using rule 74 (S_F -> RETURN pyc .)
    incremento      reduce using rule 74 (S_F -> RETURN pyc .)
    decremento      reduce using rule 74 (S_F -> RETURN pyc .)
    t_char          reduce using rule 74 (S_F -> RETURN pyc .)
    t_int           reduce using rule 74 (S_F -> RETURN pyc .)
    t_double        reduce using rule 74 (S_F -> RETURN pyc .)
    t_float         reduce using rule 74 (S_F -> RETURN pyc .)
    par1            reduce using rule 74 (S_F -> RETURN pyc .)
    string          reduce using rule 74 (S_F -> RETURN pyc .)
    entero          reduce using rule 74 (S_F -> RETURN pyc .)
    decimal         reduce using rule 74 (S_F -> RETURN pyc .)
    char            reduce using rule 74 (S_F -> RETURN pyc .)
    t_scanf         reduce using rule 74 (S_F -> RETURN pyc .)
    mas             reduce using rule 74 (S_F -> RETURN pyc .)
    menos           reduce using rule 74 (S_F -> RETURN pyc .)
    not             reduce using rule 74 (S_F -> RETURN pyc .)
    notb            reduce using rule 74 (S_F -> RETURN pyc .)
    andb            reduce using rule 74 (S_F -> RETURN pyc .)
    llav1           reduce using rule 74 (S_F -> RETURN pyc .)
    t_sizeof        reduce using rule 74 (S_F -> RETURN pyc .)
    t_default       reduce using rule 74 (S_F -> RETURN pyc .)
    t_case          reduce using rule 74 (S_F -> RETURN pyc .)


state 243

    (76) S_F -> GOTO pyc .

    llav2           reduce using rule 76 (S_F -> GOTO pyc .)
    error           reduce using rule 76 (S_F -> GOTO pyc .)
    t_struct        reduce using rule 76 (S_F -> GOTO pyc .)
    t_if            reduce using rule 76 (S_F -> GOTO pyc .)
    iden            reduce using rule 76 (S_F -> GOTO pyc .)
    t_break         reduce using rule 76 (S_F -> GOTO pyc .)
    t_continue      reduce using rule 76 (S_F -> GOTO pyc .)
    t_switch        reduce using rule 76 (S_F -> GOTO pyc .)
    t_do            reduce using rule 76 (S_F -> GOTO pyc .)
    t_while         reduce using rule 76 (S_F -> GOTO pyc .)
    t_return        reduce using rule 76 (S_F -> GOTO pyc .)
    t_goto          reduce using rule 76 (S_F -> GOTO pyc .)
    t_for           reduce using rule 76 (S_F -> GOTO pyc .)
    t_printf        reduce using rule 76 (S_F -> GOTO pyc .)
    incremento      reduce using rule 76 (S_F -> GOTO pyc .)
    decremento      reduce using rule 76 (S_F -> GOTO pyc .)
    t_char          reduce using rule 76 (S_F -> GOTO pyc .)
    t_int           reduce using rule 76 (S_F -> GOTO pyc .)
    t_double        reduce using rule 76 (S_F -> GOTO pyc .)
    t_float         reduce using rule 76 (S_F -> GOTO pyc .)
    par1            reduce using rule 76 (S_F -> GOTO pyc .)
    string          reduce using rule 76 (S_F -> GOTO pyc .)
    entero          reduce using rule 76 (S_F -> GOTO pyc .)
    decimal         reduce using rule 76 (S_F -> GOTO pyc .)
    char            reduce using rule 76 (S_F -> GOTO pyc .)
    t_scanf         reduce using rule 76 (S_F -> GOTO pyc .)
    mas             reduce using rule 76 (S_F -> GOTO pyc .)
    menos           reduce using rule 76 (S_F -> GOTO pyc .)
    not             reduce using rule 76 (S_F -> GOTO pyc .)
    notb            reduce using rule 76 (S_F -> GOTO pyc .)
    andb            reduce using rule 76 (S_F -> GOTO pyc .)
    llav1           reduce using rule 76 (S_F -> GOTO pyc .)
    t_sizeof        reduce using rule 76 (S_F -> GOTO pyc .)
    t_default       reduce using rule 76 (S_F -> GOTO pyc .)
    t_case          reduce using rule 76 (S_F -> GOTO pyc .)


state 244

    (78) S_F -> PRINTF pyc .

    llav2           reduce using rule 78 (S_F -> PRINTF pyc .)
    error           reduce using rule 78 (S_F -> PRINTF pyc .)
    t_struct        reduce using rule 78 (S_F -> PRINTF pyc .)
    t_if            reduce using rule 78 (S_F -> PRINTF pyc .)
    iden            reduce using rule 78 (S_F -> PRINTF pyc .)
    t_break         reduce using rule 78 (S_F -> PRINTF pyc .)
    t_continue      reduce using rule 78 (S_F -> PRINTF pyc .)
    t_switch        reduce using rule 78 (S_F -> PRINTF pyc .)
    t_do            reduce using rule 78 (S_F -> PRINTF pyc .)
    t_while         reduce using rule 78 (S_F -> PRINTF pyc .)
    t_return        reduce using rule 78 (S_F -> PRINTF pyc .)
    t_goto          reduce using rule 78 (S_F -> PRINTF pyc .)
    t_for           reduce using rule 78 (S_F -> PRINTF pyc .)
    t_printf        reduce using rule 78 (S_F -> PRINTF pyc .)
    incremento      reduce using rule 78 (S_F -> PRINTF pyc .)
    decremento      reduce using rule 78 (S_F -> PRINTF pyc .)
    t_char          reduce using rule 78 (S_F -> PRINTF pyc .)
    t_int           reduce using rule 78 (S_F -> PRINTF pyc .)
    t_double        reduce using rule 78 (S_F -> PRINTF pyc .)
    t_float         reduce using rule 78 (S_F -> PRINTF pyc .)
    par1            reduce using rule 78 (S_F -> PRINTF pyc .)
    string          reduce using rule 78 (S_F -> PRINTF pyc .)
    entero          reduce using rule 78 (S_F -> PRINTF pyc .)
    decimal         reduce using rule 78 (S_F -> PRINTF pyc .)
    char            reduce using rule 78 (S_F -> PRINTF pyc .)
    t_scanf         reduce using rule 78 (S_F -> PRINTF pyc .)
    mas             reduce using rule 78 (S_F -> PRINTF pyc .)
    menos           reduce using rule 78 (S_F -> PRINTF pyc .)
    not             reduce using rule 78 (S_F -> PRINTF pyc .)
    notb            reduce using rule 78 (S_F -> PRINTF pyc .)
    andb            reduce using rule 78 (S_F -> PRINTF pyc .)
    llav1           reduce using rule 78 (S_F -> PRINTF pyc .)
    t_sizeof        reduce using rule 78 (S_F -> PRINTF pyc .)
    t_default       reduce using rule 78 (S_F -> PRINTF pyc .)
    t_case          reduce using rule 78 (S_F -> PRINTF pyc .)


state 245

    (79) S_F -> INC_POST pyc .

    llav2           reduce using rule 79 (S_F -> INC_POST pyc .)
    error           reduce using rule 79 (S_F -> INC_POST pyc .)
    t_struct        reduce using rule 79 (S_F -> INC_POST pyc .)
    t_if            reduce using rule 79 (S_F -> INC_POST pyc .)
    iden            reduce using rule 79 (S_F -> INC_POST pyc .)
    t_break         reduce using rule 79 (S_F -> INC_POST pyc .)
    t_continue      reduce using rule 79 (S_F -> INC_POST pyc .)
    t_switch        reduce using rule 79 (S_F -> INC_POST pyc .)
    t_do            reduce using rule 79 (S_F -> INC_POST pyc .)
    t_while         reduce using rule 79 (S_F -> INC_POST pyc .)
    t_return        reduce using rule 79 (S_F -> INC_POST pyc .)
    t_goto          reduce using rule 79 (S_F -> INC_POST pyc .)
    t_for           reduce using rule 79 (S_F -> INC_POST pyc .)
    t_printf        reduce using rule 79 (S_F -> INC_POST pyc .)
    incremento      reduce using rule 79 (S_F -> INC_POST pyc .)
    decremento      reduce using rule 79 (S_F -> INC_POST pyc .)
    t_char          reduce using rule 79 (S_F -> INC_POST pyc .)
    t_int           reduce using rule 79 (S_F -> INC_POST pyc .)
    t_double        reduce using rule 79 (S_F -> INC_POST pyc .)
    t_float         reduce using rule 79 (S_F -> INC_POST pyc .)
    par1            reduce using rule 79 (S_F -> INC_POST pyc .)
    string          reduce using rule 79 (S_F -> INC_POST pyc .)
    entero          reduce using rule 79 (S_F -> INC_POST pyc .)
    decimal         reduce using rule 79 (S_F -> INC_POST pyc .)
    char            reduce using rule 79 (S_F -> INC_POST pyc .)
    t_scanf         reduce using rule 79 (S_F -> INC_POST pyc .)
    mas             reduce using rule 79 (S_F -> INC_POST pyc .)
    menos           reduce using rule 79 (S_F -> INC_POST pyc .)
    not             reduce using rule 79 (S_F -> INC_POST pyc .)
    notb            reduce using rule 79 (S_F -> INC_POST pyc .)
    andb            reduce using rule 79 (S_F -> INC_POST pyc .)
    llav1           reduce using rule 79 (S_F -> INC_POST pyc .)
    t_sizeof        reduce using rule 79 (S_F -> INC_POST pyc .)
    t_default       reduce using rule 79 (S_F -> INC_POST pyc .)
    t_case          reduce using rule 79 (S_F -> INC_POST pyc .)


state 246

    (80) S_F -> INC_PRE pyc .

    llav2           reduce using rule 80 (S_F -> INC_PRE pyc .)
    error           reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_struct        reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_if            reduce using rule 80 (S_F -> INC_PRE pyc .)
    iden            reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_break         reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_continue      reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_switch        reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_do            reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_while         reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_return        reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_goto          reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_for           reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_printf        reduce using rule 80 (S_F -> INC_PRE pyc .)
    incremento      reduce using rule 80 (S_F -> INC_PRE pyc .)
    decremento      reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_char          reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_int           reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_double        reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_float         reduce using rule 80 (S_F -> INC_PRE pyc .)
    par1            reduce using rule 80 (S_F -> INC_PRE pyc .)
    string          reduce using rule 80 (S_F -> INC_PRE pyc .)
    entero          reduce using rule 80 (S_F -> INC_PRE pyc .)
    decimal         reduce using rule 80 (S_F -> INC_PRE pyc .)
    char            reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_scanf         reduce using rule 80 (S_F -> INC_PRE pyc .)
    mas             reduce using rule 80 (S_F -> INC_PRE pyc .)
    menos           reduce using rule 80 (S_F -> INC_PRE pyc .)
    not             reduce using rule 80 (S_F -> INC_PRE pyc .)
    notb            reduce using rule 80 (S_F -> INC_PRE pyc .)
    andb            reduce using rule 80 (S_F -> INC_PRE pyc .)
    llav1           reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_sizeof        reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_default       reduce using rule 80 (S_F -> INC_PRE pyc .)
    t_case          reduce using rule 80 (S_F -> INC_PRE pyc .)


state 247

    (83) INSTANCIA -> t_struct iden . iden LACCESO
    (84) INSTANCIA -> t_struct iden . iden
    (39) STRUCT -> t_struct iden . llav1 ATRIBUTOS llav2

    iden            shift and go to state 262
    llav1           shift and go to state 52


state 248

    (93) ETIQUETA -> iden bipunto .

    llav2           reduce using rule 93 (ETIQUETA -> iden bipunto .)
    error           reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_struct        reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_if            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    iden            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_break         reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_continue      reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_switch        reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_do            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_while         reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_return        reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_goto          reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_for           reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_printf        reduce using rule 93 (ETIQUETA -> iden bipunto .)
    incremento      reduce using rule 93 (ETIQUETA -> iden bipunto .)
    decremento      reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_char          reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_int           reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_double        reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_float         reduce using rule 93 (ETIQUETA -> iden bipunto .)
    par1            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    string          reduce using rule 93 (ETIQUETA -> iden bipunto .)
    entero          reduce using rule 93 (ETIQUETA -> iden bipunto .)
    decimal         reduce using rule 93 (ETIQUETA -> iden bipunto .)
    char            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_scanf         reduce using rule 93 (ETIQUETA -> iden bipunto .)
    mas             reduce using rule 93 (ETIQUETA -> iden bipunto .)
    menos           reduce using rule 93 (ETIQUETA -> iden bipunto .)
    not             reduce using rule 93 (ETIQUETA -> iden bipunto .)
    notb            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    andb            reduce using rule 93 (ETIQUETA -> iden bipunto .)
    llav1           reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_sizeof        reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_default       reduce using rule 93 (ETIQUETA -> iden bipunto .)
    t_case          reduce using rule 93 (ETIQUETA -> iden bipunto .)


state 249

    (24) ASIGNACION -> iden LACCESO .
    (25) ASIGNACION -> iden LACCESO . OP EXP
    (129) EXP -> iden LACCESO .
    (49) ItemsStruct2 -> iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2
    (28) OP -> . andbasigna
    (29) OP -> . divasigna
    (30) OP -> . masasigna
    (31) OP -> . menosasigna
    (32) OP -> . modasigna
    (33) OP -> . orbasigna
    (34) OP -> . porasigna
    (35) OP -> . shiftizqasigna
    (36) OP -> . shiftderasigna
    (37) OP -> . xorbasinga
    (38) OP -> . asigna

    pyc             reduce using rule 24 (ASIGNACION -> iden LACCESO .)
    coma            reduce using rule 24 (ASIGNACION -> iden LACCESO .)
    incremento      reduce using rule 129 (EXP -> iden LACCESO .)
    decremento      reduce using rule 129 (EXP -> iden LACCESO .)
    mas             reduce using rule 129 (EXP -> iden LACCESO .)
    menos           reduce using rule 129 (EXP -> iden LACCESO .)
    por             reduce using rule 129 (EXP -> iden LACCESO .)
    division        reduce using rule 129 (EXP -> iden LACCESO .)
    modulo          reduce using rule 129 (EXP -> iden LACCESO .)
    mayor           reduce using rule 129 (EXP -> iden LACCESO .)
    mayori          reduce using rule 129 (EXP -> iden LACCESO .)
    menor           reduce using rule 129 (EXP -> iden LACCESO .)
    menori          reduce using rule 129 (EXP -> iden LACCESO .)
    igual           reduce using rule 129 (EXP -> iden LACCESO .)
    diferente       reduce using rule 129 (EXP -> iden LACCESO .)
    and             reduce using rule 129 (EXP -> iden LACCESO .)
    or              reduce using rule 129 (EXP -> iden LACCESO .)
    shiftizq        reduce using rule 129 (EXP -> iden LACCESO .)
    shiftder        reduce using rule 129 (EXP -> iden LACCESO .)
    andb            reduce using rule 129 (EXP -> iden LACCESO .)
    xorb            reduce using rule 129 (EXP -> iden LACCESO .)
    orb             reduce using rule 129 (EXP -> iden LACCESO .)
    condicional     reduce using rule 129 (EXP -> iden LACCESO .)
    punto           reduce using rule 49 (ItemsStruct2 -> iden LACCESO .)
    cor1            shift and go to state 73
    andbasigna      shift and go to state 30
    divasigna       shift and go to state 31
    masasigna       shift and go to state 32
    menosasigna     shift and go to state 33
    modasigna       shift and go to state 34
    orbasigna       shift and go to state 35
    porasigna       shift and go to state 36
    shiftizqasigna  shift and go to state 37
    shiftderasigna  shift and go to state 38
    xorbasinga      shift and go to state 39
    asigna          shift and go to state 40

    OP                             shift and go to state 72

state 250

    (109) IF -> t_if par1 . EXP par2 BLOQUE
    (110) IF -> t_if par1 . EXP par2 BLOQUE t_else IF
    (111) IF -> t_if par1 . EXP par2 BLOQUE t_else BLOQUE
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 263
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 251

    (152) INC_POST -> EXP incremento .
    (157) EXP -> EXP incremento .

    pyc             reduce using rule 152 (INC_POST -> EXP incremento .)
    incremento      reduce using rule 157 (EXP -> EXP incremento .)
    decremento      reduce using rule 157 (EXP -> EXP incremento .)
    mas             reduce using rule 157 (EXP -> EXP incremento .)
    menos           reduce using rule 157 (EXP -> EXP incremento .)
    por             reduce using rule 157 (EXP -> EXP incremento .)
    division        reduce using rule 157 (EXP -> EXP incremento .)
    modulo          reduce using rule 157 (EXP -> EXP incremento .)
    mayor           reduce using rule 157 (EXP -> EXP incremento .)
    mayori          reduce using rule 157 (EXP -> EXP incremento .)
    menor           reduce using rule 157 (EXP -> EXP incremento .)
    menori          reduce using rule 157 (EXP -> EXP incremento .)
    igual           reduce using rule 157 (EXP -> EXP incremento .)
    diferente       reduce using rule 157 (EXP -> EXP incremento .)
    and             reduce using rule 157 (EXP -> EXP incremento .)
    or              reduce using rule 157 (EXP -> EXP incremento .)
    shiftizq        reduce using rule 157 (EXP -> EXP incremento .)
    shiftder        reduce using rule 157 (EXP -> EXP incremento .)
    andb            reduce using rule 157 (EXP -> EXP incremento .)
    xorb            reduce using rule 157 (EXP -> EXP incremento .)
    orb             reduce using rule 157 (EXP -> EXP incremento .)
    condicional     reduce using rule 157 (EXP -> EXP incremento .)


state 252

    (153) INC_POST -> EXP decremento .
    (158) EXP -> EXP decremento .

    pyc             reduce using rule 153 (INC_POST -> EXP decremento .)
    incremento      reduce using rule 158 (EXP -> EXP decremento .)
    decremento      reduce using rule 158 (EXP -> EXP decremento .)
    mas             reduce using rule 158 (EXP -> EXP decremento .)
    menos           reduce using rule 158 (EXP -> EXP decremento .)
    por             reduce using rule 158 (EXP -> EXP decremento .)
    division        reduce using rule 158 (EXP -> EXP decremento .)
    modulo          reduce using rule 158 (EXP -> EXP decremento .)
    mayor           reduce using rule 158 (EXP -> EXP decremento .)
    mayori          reduce using rule 158 (EXP -> EXP decremento .)
    menor           reduce using rule 158 (EXP -> EXP decremento .)
    menori          reduce using rule 158 (EXP -> EXP decremento .)
    igual           reduce using rule 158 (EXP -> EXP decremento .)
    diferente       reduce using rule 158 (EXP -> EXP decremento .)
    and             reduce using rule 158 (EXP -> EXP decremento .)
    or              reduce using rule 158 (EXP -> EXP decremento .)
    shiftizq        reduce using rule 158 (EXP -> EXP decremento .)
    shiftder        reduce using rule 158 (EXP -> EXP decremento .)
    andb            reduce using rule 158 (EXP -> EXP decremento .)
    xorb            reduce using rule 158 (EXP -> EXP decremento .)
    orb             reduce using rule 158 (EXP -> EXP decremento .)
    condicional     reduce using rule 158 (EXP -> EXP decremento .)


state 253

    (99) SWITCH -> t_switch par1 . EXP par2 llav1 CASOS llav2
    (100) SWITCH -> t_switch par1 . EXP par2 llav1 CASOS DEFAULT llav2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 264
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 254

    (95) DO_WHILE -> t_do BLOQUE . t_while par1 EXP par2

    t_while         shift and go to state 265


state 255

    (96) WHILE -> t_while par1 . EXP par2 BLOQUE
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 266
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 256

    (97) RETURN -> t_return EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 97 (RETURN -> t_return EXP .)
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 257

    (94) GOTO -> t_goto iden .

    pyc             reduce using rule 94 (GOTO -> t_goto iden .)


state 258

    (87) FOR -> t_for par1 . INICIO EXP pyc INCDC BLOQUE
    (88) INICIO -> . Tipos Dec pyc
    (89) INICIO -> . ASIGNACION pyc
    (90) INICIO -> . pyc
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    pyc             shift and go to state 268
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    iden            shift and go to state 12

    INICIO                         shift and go to state 267
    Tipos                          shift and go to state 269
    ASIGNACION                     shift and go to state 270
    ACCESO_STRUCT                  shift and go to state 18
    ItemsStruct2                   shift and go to state 19

state 259

    (81) PRINTF -> t_printf par1 . string coma ELEMENTS par2
    (82) PRINTF -> t_printf par1 . string par2

    string          shift and go to state 271


state 260

    (150) INC_PRE -> incremento EXP .
    (154) EXP -> incremento EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 150 (INC_PRE -> incremento EXP .)
    mas             reduce using rule 154 (EXP -> incremento EXP .)
    menos           reduce using rule 154 (EXP -> incremento EXP .)
    por             reduce using rule 154 (EXP -> incremento EXP .)
    division        reduce using rule 154 (EXP -> incremento EXP .)
    modulo          reduce using rule 154 (EXP -> incremento EXP .)
    mayor           reduce using rule 154 (EXP -> incremento EXP .)
    mayori          reduce using rule 154 (EXP -> incremento EXP .)
    menor           reduce using rule 154 (EXP -> incremento EXP .)
    menori          reduce using rule 154 (EXP -> incremento EXP .)
    igual           reduce using rule 154 (EXP -> incremento EXP .)
    diferente       reduce using rule 154 (EXP -> incremento EXP .)
    and             reduce using rule 154 (EXP -> incremento EXP .)
    or              reduce using rule 154 (EXP -> incremento EXP .)
    shiftizq        reduce using rule 154 (EXP -> incremento EXP .)
    shiftder        reduce using rule 154 (EXP -> incremento EXP .)
    andb            reduce using rule 154 (EXP -> incremento EXP .)
    xorb            reduce using rule 154 (EXP -> incremento EXP .)
    orb             reduce using rule 154 (EXP -> incremento EXP .)
    condicional     reduce using rule 154 (EXP -> incremento EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 154 (EXP -> incremento EXP .) ]
  ! decremento      [ reduce using rule 154 (EXP -> incremento EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 261

    (151) INC_PRE -> decremento EXP .
    (155) EXP -> decremento EXP .
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             reduce using rule 151 (INC_PRE -> decremento EXP .)
    mas             reduce using rule 155 (EXP -> decremento EXP .)
    menos           reduce using rule 155 (EXP -> decremento EXP .)
    por             reduce using rule 155 (EXP -> decremento EXP .)
    division        reduce using rule 155 (EXP -> decremento EXP .)
    modulo          reduce using rule 155 (EXP -> decremento EXP .)
    mayor           reduce using rule 155 (EXP -> decremento EXP .)
    mayori          reduce using rule 155 (EXP -> decremento EXP .)
    menor           reduce using rule 155 (EXP -> decremento EXP .)
    menori          reduce using rule 155 (EXP -> decremento EXP .)
    igual           reduce using rule 155 (EXP -> decremento EXP .)
    diferente       reduce using rule 155 (EXP -> decremento EXP .)
    and             reduce using rule 155 (EXP -> decremento EXP .)
    or              reduce using rule 155 (EXP -> decremento EXP .)
    shiftizq        reduce using rule 155 (EXP -> decremento EXP .)
    shiftder        reduce using rule 155 (EXP -> decremento EXP .)
    andb            reduce using rule 155 (EXP -> decremento EXP .)
    xorb            reduce using rule 155 (EXP -> decremento EXP .)
    orb             reduce using rule 155 (EXP -> decremento EXP .)
    condicional     reduce using rule 155 (EXP -> decremento EXP .)
    incremento      shift and go to state 111
    decremento      shift and go to state 112

  ! incremento      [ reduce using rule 155 (EXP -> decremento EXP .) ]
  ! decremento      [ reduce using rule 155 (EXP -> decremento EXP .) ]
  ! mas             [ shift and go to state 92 ]
  ! menos           [ shift and go to state 93 ]
  ! por             [ shift and go to state 94 ]
  ! division        [ shift and go to state 95 ]
  ! modulo          [ shift and go to state 96 ]
  ! mayor           [ shift and go to state 97 ]
  ! mayori          [ shift and go to state 98 ]
  ! menor           [ shift and go to state 99 ]
  ! menori          [ shift and go to state 100 ]
  ! igual           [ shift and go to state 101 ]
  ! diferente       [ shift and go to state 102 ]
  ! and             [ shift and go to state 103 ]
  ! or              [ shift and go to state 104 ]
  ! shiftizq        [ shift and go to state 105 ]
  ! shiftder        [ shift and go to state 106 ]
  ! andb            [ shift and go to state 107 ]
  ! xorb            [ shift and go to state 108 ]
  ! orb             [ shift and go to state 109 ]
  ! condicional     [ shift and go to state 110 ]


state 262

    (83) INSTANCIA -> t_struct iden iden . LACCESO
    (84) INSTANCIA -> t_struct iden iden .
    (18) LACCESO -> . LACCESO cor1 EXP cor2
    (19) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 84 (INSTANCIA -> t_struct iden iden .)
    cor1            shift and go to state 41

    LACCESO                        shift and go to state 272

state 263

    (109) IF -> t_if par1 EXP . par2 BLOQUE
    (110) IF -> t_if par1 EXP . par2 BLOQUE t_else IF
    (111) IF -> t_if par1 EXP . par2 BLOQUE t_else BLOQUE
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 273
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 264

    (99) SWITCH -> t_switch par1 EXP . par2 llav1 CASOS llav2
    (100) SWITCH -> t_switch par1 EXP . par2 llav1 CASOS DEFAULT llav2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 274
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 265

    (95) DO_WHILE -> t_do BLOQUE t_while . par1 EXP par2

    par1            shift and go to state 275


state 266

    (96) WHILE -> t_while par1 EXP . par2 BLOQUE
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 276
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 267

    (87) FOR -> t_for par1 INICIO . EXP pyc INCDC BLOQUE
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 277
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 268

    (90) INICIO -> pyc .

    iden            reduce using rule 90 (INICIO -> pyc .)
    par1            reduce using rule 90 (INICIO -> pyc .)
    string          reduce using rule 90 (INICIO -> pyc .)
    entero          reduce using rule 90 (INICIO -> pyc .)
    decimal         reduce using rule 90 (INICIO -> pyc .)
    char            reduce using rule 90 (INICIO -> pyc .)
    t_scanf         reduce using rule 90 (INICIO -> pyc .)
    mas             reduce using rule 90 (INICIO -> pyc .)
    menos           reduce using rule 90 (INICIO -> pyc .)
    not             reduce using rule 90 (INICIO -> pyc .)
    notb            reduce using rule 90 (INICIO -> pyc .)
    andb            reduce using rule 90 (INICIO -> pyc .)
    incremento      reduce using rule 90 (INICIO -> pyc .)
    decremento      reduce using rule 90 (INICIO -> pyc .)
    llav1           reduce using rule 90 (INICIO -> pyc .)
    t_sizeof        reduce using rule 90 (INICIO -> pyc .)


state 269

    (88) INICIO -> Tipos . Dec pyc
    (13) Dec -> . iden
    (14) Dec -> . iden asigna EXP
    (15) Dec -> . iden cor1 cor2 asigna EXP
    (16) Dec -> . iden LACCESO
    (17) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 80

    Dec                            shift and go to state 278

state 270

    (89) INICIO -> ASIGNACION . pyc

    pyc             shift and go to state 279


state 271

    (81) PRINTF -> t_printf par1 string . coma ELEMENTS par2
    (82) PRINTF -> t_printf par1 string . par2

    coma            shift and go to state 280
    par2            shift and go to state 281


state 272

    (83) INSTANCIA -> t_struct iden iden LACCESO .
    (18) LACCESO -> LACCESO . cor1 EXP cor2

    pyc             reduce using rule 83 (INSTANCIA -> t_struct iden iden LACCESO .)
    cor1            shift and go to state 73


state 273

    (109) IF -> t_if par1 EXP par2 . BLOQUE
    (110) IF -> t_if par1 EXP par2 . BLOQUE t_else IF
    (111) IF -> t_if par1 EXP par2 . BLOQUE t_else BLOQUE
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 282

state 274

    (99) SWITCH -> t_switch par1 EXP par2 . llav1 CASOS llav2
    (100) SWITCH -> t_switch par1 EXP par2 . llav1 CASOS DEFAULT llav2

    llav1           shift and go to state 283


state 275

    (95) DO_WHILE -> t_do BLOQUE t_while par1 . EXP par2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 284
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 276

    (96) WHILE -> t_while par1 EXP par2 . BLOQUE
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 285

state 277

    (87) FOR -> t_for par1 INICIO EXP . pyc INCDC BLOQUE
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    pyc             shift and go to state 286
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 278

    (88) INICIO -> Tipos Dec . pyc

    pyc             shift and go to state 287


state 279

    (89) INICIO -> ASIGNACION pyc .

    iden            reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    par1            reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    string          reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    entero          reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    decimal         reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    char            reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    t_scanf         reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    mas             reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    menos           reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    not             reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    notb            reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    andb            reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    incremento      reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    decremento      reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    llav1           reduce using rule 89 (INICIO -> ASIGNACION pyc .)
    t_sizeof        reduce using rule 89 (INICIO -> ASIGNACION pyc .)


state 280

    (81) PRINTF -> t_printf par1 string coma . ELEMENTS par2
    (160) ELEMENTS -> . ELEMENTS coma EXP
    (161) ELEMENTS -> . EXP
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    ELEMENTS                       shift and go to state 288
    EXP                            shift and go to state 126
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 281

    (82) PRINTF -> t_printf par1 string par2 .

    pyc             reduce using rule 82 (PRINTF -> t_printf par1 string par2 .)


state 282

    (109) IF -> t_if par1 EXP par2 BLOQUE .
    (110) IF -> t_if par1 EXP par2 BLOQUE . t_else IF
    (111) IF -> t_if par1 EXP par2 BLOQUE . t_else BLOQUE

    llav2           reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    error           reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_struct        reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_if            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    iden            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_break         reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_continue      reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_switch        reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_do            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_while         reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_return        reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_goto          reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_for           reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_printf        reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    incremento      reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    decremento      reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_char          reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_int           reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_double        reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_float         reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    par1            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    string          reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    entero          reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    decimal         reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    char            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_scanf         reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    mas             reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    menos           reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    not             reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    notb            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    andb            reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    llav1           reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_sizeof        reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_default       reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_case          reduce using rule 109 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_else          shift and go to state 289


state 283

    (99) SWITCH -> t_switch par1 EXP par2 llav1 . CASOS llav2
    (100) SWITCH -> t_switch par1 EXP par2 llav1 . CASOS DEFAULT llav2
    (101) CASOS -> . CASOS CASO
    (102) CASOS -> . CASO
    (103) CASO -> . t_case EXP bipunto SS_F
    (104) CASO -> . t_case EXP bipunto

    t_case          shift and go to state 292

    CASOS                          shift and go to state 290
    CASO                           shift and go to state 291

state 284

    (95) DO_WHILE -> t_do BLOQUE t_while par1 EXP . par2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 293
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 285

    (96) WHILE -> t_while par1 EXP par2 BLOQUE .

    llav2           reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    error           reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_struct        reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_if            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    iden            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_break         reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_continue      reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_switch        reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_do            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_while         reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_return        reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_goto          reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_for           reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_printf        reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    incremento      reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    decremento      reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_char          reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_int           reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_double        reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_float         reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    par1            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    string          reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    entero          reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    decimal         reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    char            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_scanf         reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    mas             reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    menos           reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    not             reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    notb            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    andb            reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    llav1           reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_sizeof        reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_default       reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_case          reduce using rule 96 (WHILE -> t_while par1 EXP par2 BLOQUE .)


state 286

    (87) FOR -> t_for par1 INICIO EXP pyc . INCDC BLOQUE
    (91) INCDC -> . EXP par2
    (92) INCDC -> . par2
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    par2            shift and go to state 296
    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 294
    INCDC                          shift and go to state 295
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 287

    (88) INICIO -> Tipos Dec pyc .

    iden            reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    par1            reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    string          reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    entero          reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    decimal         reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    char            reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    t_scanf         reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    mas             reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    menos           reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    not             reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    notb            reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    andb            reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    incremento      reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    decremento      reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    llav1           reduce using rule 88 (INICIO -> Tipos Dec pyc .)
    t_sizeof        reduce using rule 88 (INICIO -> Tipos Dec pyc .)


state 288

    (81) PRINTF -> t_printf par1 string coma ELEMENTS . par2
    (160) ELEMENTS -> ELEMENTS . coma EXP

    par2            shift and go to state 297
    coma            shift and go to state 170


state 289

    (110) IF -> t_if par1 EXP par2 BLOQUE t_else . IF
    (111) IF -> t_if par1 EXP par2 BLOQUE t_else . BLOQUE
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    t_if            shift and go to state 216
    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 298
    IF                             shift and go to state 299

state 290

    (99) SWITCH -> t_switch par1 EXP par2 llav1 CASOS . llav2
    (100) SWITCH -> t_switch par1 EXP par2 llav1 CASOS . DEFAULT llav2
    (101) CASOS -> CASOS . CASO
    (105) DEFAULT -> . t_default bipunto SS_F
    (106) DEFAULT -> . t_default bipunto
    (103) CASO -> . t_case EXP bipunto SS_F
    (104) CASO -> . t_case EXP bipunto

    llav2           shift and go to state 300
    t_default       shift and go to state 303
    t_case          shift and go to state 292

    DEFAULT                        shift and go to state 301
    CASO                           shift and go to state 302

state 291

    (102) CASOS -> CASO .

    llav2           reduce using rule 102 (CASOS -> CASO .)
    t_default       reduce using rule 102 (CASOS -> CASO .)
    t_case          reduce using rule 102 (CASOS -> CASO .)


state 292

    (103) CASO -> t_case . EXP bipunto SS_F
    (104) CASO -> t_case . EXP bipunto
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 53
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    incremento      shift and go to state 66
    decremento      shift and go to state 67
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 304
    LLAMADA                        shift and go to state 69
    ACCESO_STRUCT                  shift and go to state 70
    ItemsStruct2                   shift and go to state 19

state 293

    (95) DO_WHILE -> t_do BLOQUE t_while par1 EXP par2 .

    pyc             reduce using rule 95 (DO_WHILE -> t_do BLOQUE t_while par1 EXP par2 .)


state 294

    (91) INCDC -> EXP . par2
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    par2            shift and go to state 305
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 295

    (87) FOR -> t_for par1 INICIO EXP pyc INCDC . BLOQUE
    (85) BLOQUE -> . llav1 SS_F llav2
    (86) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 176

    BLOQUE                         shift and go to state 306

state 296

    (92) INCDC -> par2 .

    llav1           reduce using rule 92 (INCDC -> par2 .)


state 297

    (81) PRINTF -> t_printf par1 string coma ELEMENTS par2 .

    pyc             reduce using rule 81 (PRINTF -> t_printf par1 string coma ELEMENTS par2 .)


state 298

    (111) IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .

    llav2           reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    error           reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_struct        reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_if            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    iden            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_break         reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_continue      reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_switch        reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_do            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_while         reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_return        reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_goto          reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_for           reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_printf        reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    incremento      reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    decremento      reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_char          reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_int           reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_double        reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_float         reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    par1            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    string          reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    entero          reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    decimal         reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    char            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_scanf         reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    mas             reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    menos           reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    not             reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    notb            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    andb            reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    llav1           reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_sizeof        reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_default       reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_case          reduce using rule 111 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)


state 299

    (110) IF -> t_if par1 EXP par2 BLOQUE t_else IF .

    llav2           reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    error           reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_struct        reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_if            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    iden            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_break         reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_continue      reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_switch        reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_do            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_while         reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_return        reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_goto          reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_for           reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_printf        reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    incremento      reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    decremento      reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_char          reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_int           reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_double        reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_float         reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    par1            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    string          reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    entero          reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    decimal         reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    char            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_scanf         reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    mas             reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    menos           reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    not             reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    notb            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    andb            reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    llav1           reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_sizeof        reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_default       reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_case          reduce using rule 110 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)


state 300

    (99) SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .

    llav2           reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    error           reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_struct        reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_if            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    iden            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_break         reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_continue      reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_switch        reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_do            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_while         reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_return        reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_goto          reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_for           reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_printf        reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    incremento      reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    decremento      reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_char          reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_int           reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_double        reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_float         reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    par1            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    string          reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    entero          reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    decimal         reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    char            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_scanf         reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    mas             reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    menos           reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    not             reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    notb            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    andb            reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    llav1           reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_sizeof        reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_default       reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_case          reduce using rule 99 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)


state 301

    (100) SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT . llav2

    llav2           shift and go to state 307


state 302

    (101) CASOS -> CASOS CASO .

    llav2           reduce using rule 101 (CASOS -> CASOS CASO .)
    t_default       reduce using rule 101 (CASOS -> CASOS CASO .)
    t_case          reduce using rule 101 (CASOS -> CASOS CASO .)


state 303

    (105) DEFAULT -> t_default . bipunto SS_F
    (106) DEFAULT -> t_default . bipunto

    bipunto         shift and go to state 308


state 304

    (103) CASO -> t_case EXP . bipunto SS_F
    (104) CASO -> t_case EXP . bipunto
    (116) EXP -> EXP . mas EXP
    (117) EXP -> EXP . menos EXP
    (118) EXP -> EXP . por EXP
    (119) EXP -> EXP . division EXP
    (120) EXP -> EXP . modulo EXP
    (121) EXP -> EXP . mayor EXP
    (122) EXP -> EXP . mayori EXP
    (123) EXP -> EXP . menor EXP
    (124) EXP -> EXP . menori EXP
    (125) EXP -> EXP . igual EXP
    (126) EXP -> EXP . diferente EXP
    (127) EXP -> EXP . and EXP
    (128) EXP -> EXP . or EXP
    (139) EXP -> EXP . shiftizq EXP
    (140) EXP -> EXP . shiftder EXP
    (141) EXP -> EXP . andb EXP
    (142) EXP -> EXP . xorb EXP
    (143) EXP -> EXP . orb EXP
    (156) EXP -> EXP . condicional EXP bipunto EXP
    (157) EXP -> EXP . incremento
    (158) EXP -> EXP . decremento

    bipunto         shift and go to state 309
    mas             shift and go to state 92
    menos           shift and go to state 93
    por             shift and go to state 94
    division        shift and go to state 95
    modulo          shift and go to state 96
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           shift and go to state 101
    diferente       shift and go to state 102
    and             shift and go to state 103
    or              shift and go to state 104
    shiftizq        shift and go to state 105
    shiftder        shift and go to state 106
    andb            shift and go to state 107
    xorb            shift and go to state 108
    orb             shift and go to state 109
    condicional     shift and go to state 110
    incremento      shift and go to state 111
    decremento      shift and go to state 112


state 305

    (91) INCDC -> EXP par2 .

    llav1           reduce using rule 91 (INCDC -> EXP par2 .)


state 306

    (87) FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .

    llav2           reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    error           reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_struct        reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_if            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    iden            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_break         reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_continue      reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_switch        reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_do            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_while         reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_return        reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_goto          reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_for           reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_printf        reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    incremento      reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    decremento      reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_char          reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_int           reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_double        reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_float         reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    par1            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    string          reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    entero          reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    decimal         reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    char            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_scanf         reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    mas             reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    menos           reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    not             reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    notb            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    andb            reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    llav1           reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_sizeof        reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_default       reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_case          reduce using rule 87 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)


state 307

    (100) SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .

    llav2           reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    error           reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_struct        reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_if            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    iden            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_break         reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_continue      reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_switch        reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_do            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_while         reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_return        reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_goto          reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_for           reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_printf        reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    incremento      reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    decremento      reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_char          reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_int           reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_double        reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_float         reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    par1            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    string          reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    entero          reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    decimal         reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    char            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_scanf         reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    mas             reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    menos           reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    not             reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    notb            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    andb            reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    llav1           reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_sizeof        reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_default       reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_case          reduce using rule 100 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)


state 308

    (105) DEFAULT -> t_default bipunto . SS_F
    (106) DEFAULT -> t_default bipunto .
    (60) SS_F -> . SS_F S_F
    (61) SS_F -> . S_F
    (62) S_F -> . error
    (63) S_F -> . Declaracion
    (64) S_F -> . LASIGNACION pyc
    (65) S_F -> . INSTANCIA pyc
    (66) S_F -> . STRUCT pyc
    (67) S_F -> . IF
    (68) S_F -> . LLAMADA pyc
    (69) S_F -> . BREAK pyc
    (70) S_F -> . CONTINUE pyc
    (71) S_F -> . SWITCH
    (72) S_F -> . DO_WHILE pyc
    (73) S_F -> . WHILE
    (74) S_F -> . RETURN pyc
    (75) S_F -> . ETIQUETA
    (76) S_F -> . GOTO pyc
    (77) S_F -> . FOR
    (78) S_F -> . PRINTF pyc
    (79) S_F -> . INC_POST pyc
    (80) S_F -> . INC_PRE pyc
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (83) INSTANCIA -> . t_struct iden iden LACCESO
    (84) INSTANCIA -> . t_struct iden iden
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (107) BREAK -> . t_break
    (108) CONTINUE -> . t_continue
    (99) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (95) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (96) WHILE -> . t_while par1 EXP par2 BLOQUE
    (97) RETURN -> . t_return EXP
    (98) RETURN -> . t_return
    (93) ETIQUETA -> . iden bipunto
    (94) GOTO -> . t_goto iden
    (87) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (81) PRINTF -> . t_printf par1 string coma ELEMENTS par2
    (82) PRINTF -> . t_printf par1 string par2
    (152) INC_POST -> . EXP incremento
    (153) INC_POST -> . EXP decremento
    (150) INC_PRE -> . incremento EXP
    (151) INC_PRE -> . decremento EXP
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 106 (DEFAULT -> t_default bipunto .)
    error           shift and go to state 194
    t_struct        shift and go to state 214
    t_if            shift and go to state 216
    iden            shift and go to state 215
    t_break         shift and go to state 218
    t_continue      shift and go to state 219
    t_switch        shift and go to state 220
    t_do            shift and go to state 221
    t_while         shift and go to state 222
    t_return        shift and go to state 223
    t_goto          shift and go to state 224
    t_for           shift and go to state 225
    t_printf        shift and go to state 226
    incremento      shift and go to state 227
    decremento      shift and go to state 228
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    SS_F                           shift and go to state 310
    S_F                            shift and go to state 193
    Declaracion                    shift and go to state 195
    LASIGNACION                    shift and go to state 196
    INSTANCIA                      shift and go to state 197
    STRUCT                         shift and go to state 198
    IF                             shift and go to state 199
    LLAMADA                        shift and go to state 200
    BREAK                          shift and go to state 201
    CONTINUE                       shift and go to state 202
    SWITCH                         shift and go to state 203
    DO_WHILE                       shift and go to state 204
    WHILE                          shift and go to state 205
    RETURN                         shift and go to state 206
    ETIQUETA                       shift and go to state 207
    GOTO                           shift and go to state 208
    FOR                            shift and go to state 209
    PRINTF                         shift and go to state 210
    INC_POST                       shift and go to state 211
    INC_PRE                        shift and go to state 212
    Tipos                          shift and go to state 213
    ASIGNACION                     shift and go to state 10
    EXP                            shift and go to state 217
    ACCESO_STRUCT                  shift and go to state 229
    ItemsStruct2                   shift and go to state 19

state 309

    (103) CASO -> t_case EXP bipunto . SS_F
    (104) CASO -> t_case EXP bipunto .
    (60) SS_F -> . SS_F S_F
    (61) SS_F -> . S_F
    (62) S_F -> . error
    (63) S_F -> . Declaracion
    (64) S_F -> . LASIGNACION pyc
    (65) S_F -> . INSTANCIA pyc
    (66) S_F -> . STRUCT pyc
    (67) S_F -> . IF
    (68) S_F -> . LLAMADA pyc
    (69) S_F -> . BREAK pyc
    (70) S_F -> . CONTINUE pyc
    (71) S_F -> . SWITCH
    (72) S_F -> . DO_WHILE pyc
    (73) S_F -> . WHILE
    (74) S_F -> . RETURN pyc
    (75) S_F -> . ETIQUETA
    (76) S_F -> . GOTO pyc
    (77) S_F -> . FOR
    (78) S_F -> . PRINTF pyc
    (79) S_F -> . INC_POST pyc
    (80) S_F -> . INC_PRE pyc
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (83) INSTANCIA -> . t_struct iden iden LACCESO
    (84) INSTANCIA -> . t_struct iden iden
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (107) BREAK -> . t_break
    (108) CONTINUE -> . t_continue
    (99) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (95) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (96) WHILE -> . t_while par1 EXP par2 BLOQUE
    (97) RETURN -> . t_return EXP
    (98) RETURN -> . t_return
    (93) ETIQUETA -> . iden bipunto
    (94) GOTO -> . t_goto iden
    (87) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (81) PRINTF -> . t_printf par1 string coma ELEMENTS par2
    (82) PRINTF -> . t_printf par1 string par2
    (152) INC_POST -> . EXP incremento
    (153) INC_POST -> . EXP decremento
    (150) INC_PRE -> . incremento EXP
    (151) INC_PRE -> . decremento EXP
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 104 (CASO -> t_case EXP bipunto .)
    t_default       reduce using rule 104 (CASO -> t_case EXP bipunto .)
    t_case          reduce using rule 104 (CASO -> t_case EXP bipunto .)
    error           shift and go to state 194
    t_struct        shift and go to state 214
    t_if            shift and go to state 216
    iden            shift and go to state 215
    t_break         shift and go to state 218
    t_continue      shift and go to state 219
    t_switch        shift and go to state 220
    t_do            shift and go to state 221
    t_while         shift and go to state 222
    t_return        shift and go to state 223
    t_goto          shift and go to state 224
    t_for           shift and go to state 225
    t_printf        shift and go to state 226
    incremento      shift and go to state 227
    decremento      shift and go to state 228
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 217
    SS_F                           shift and go to state 311
    S_F                            shift and go to state 193
    Declaracion                    shift and go to state 195
    LASIGNACION                    shift and go to state 196
    INSTANCIA                      shift and go to state 197
    STRUCT                         shift and go to state 198
    IF                             shift and go to state 199
    LLAMADA                        shift and go to state 200
    BREAK                          shift and go to state 201
    CONTINUE                       shift and go to state 202
    SWITCH                         shift and go to state 203
    DO_WHILE                       shift and go to state 204
    WHILE                          shift and go to state 205
    RETURN                         shift and go to state 206
    ETIQUETA                       shift and go to state 207
    GOTO                           shift and go to state 208
    FOR                            shift and go to state 209
    PRINTF                         shift and go to state 210
    INC_POST                       shift and go to state 211
    INC_PRE                        shift and go to state 212
    Tipos                          shift and go to state 213
    ASIGNACION                     shift and go to state 10
    ACCESO_STRUCT                  shift and go to state 229
    ItemsStruct2                   shift and go to state 19

state 310

    (105) DEFAULT -> t_default bipunto SS_F .
    (60) SS_F -> SS_F . S_F
    (62) S_F -> . error
    (63) S_F -> . Declaracion
    (64) S_F -> . LASIGNACION pyc
    (65) S_F -> . INSTANCIA pyc
    (66) S_F -> . STRUCT pyc
    (67) S_F -> . IF
    (68) S_F -> . LLAMADA pyc
    (69) S_F -> . BREAK pyc
    (70) S_F -> . CONTINUE pyc
    (71) S_F -> . SWITCH
    (72) S_F -> . DO_WHILE pyc
    (73) S_F -> . WHILE
    (74) S_F -> . RETURN pyc
    (75) S_F -> . ETIQUETA
    (76) S_F -> . GOTO pyc
    (77) S_F -> . FOR
    (78) S_F -> . PRINTF pyc
    (79) S_F -> . INC_POST pyc
    (80) S_F -> . INC_PRE pyc
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (83) INSTANCIA -> . t_struct iden iden LACCESO
    (84) INSTANCIA -> . t_struct iden iden
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (107) BREAK -> . t_break
    (108) CONTINUE -> . t_continue
    (99) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (95) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (96) WHILE -> . t_while par1 EXP par2 BLOQUE
    (97) RETURN -> . t_return EXP
    (98) RETURN -> . t_return
    (93) ETIQUETA -> . iden bipunto
    (94) GOTO -> . t_goto iden
    (87) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (81) PRINTF -> . t_printf par1 string coma ELEMENTS par2
    (82) PRINTF -> . t_printf par1 string par2
    (152) INC_POST -> . EXP incremento
    (153) INC_POST -> . EXP decremento
    (150) INC_PRE -> . incremento EXP
    (151) INC_PRE -> . decremento EXP
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 105 (DEFAULT -> t_default bipunto SS_F .)
    error           shift and go to state 194
    t_struct        shift and go to state 214
    t_if            shift and go to state 216
    iden            shift and go to state 215
    t_break         shift and go to state 218
    t_continue      shift and go to state 219
    t_switch        shift and go to state 220
    t_do            shift and go to state 221
    t_while         shift and go to state 222
    t_return        shift and go to state 223
    t_goto          shift and go to state 224
    t_for           shift and go to state 225
    t_printf        shift and go to state 226
    incremento      shift and go to state 227
    decremento      shift and go to state 228
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    S_F                            shift and go to state 234
    Declaracion                    shift and go to state 195
    LASIGNACION                    shift and go to state 196
    INSTANCIA                      shift and go to state 197
    STRUCT                         shift and go to state 198
    IF                             shift and go to state 199
    LLAMADA                        shift and go to state 200
    BREAK                          shift and go to state 201
    CONTINUE                       shift and go to state 202
    SWITCH                         shift and go to state 203
    DO_WHILE                       shift and go to state 204
    WHILE                          shift and go to state 205
    RETURN                         shift and go to state 206
    ETIQUETA                       shift and go to state 207
    GOTO                           shift and go to state 208
    FOR                            shift and go to state 209
    PRINTF                         shift and go to state 210
    INC_POST                       shift and go to state 211
    INC_PRE                        shift and go to state 212
    Tipos                          shift and go to state 213
    ASIGNACION                     shift and go to state 10
    EXP                            shift and go to state 217
    ACCESO_STRUCT                  shift and go to state 229
    ItemsStruct2                   shift and go to state 19

state 311

    (103) CASO -> t_case EXP bipunto SS_F .
    (60) SS_F -> SS_F . S_F
    (62) S_F -> . error
    (63) S_F -> . Declaracion
    (64) S_F -> . LASIGNACION pyc
    (65) S_F -> . INSTANCIA pyc
    (66) S_F -> . STRUCT pyc
    (67) S_F -> . IF
    (68) S_F -> . LLAMADA pyc
    (69) S_F -> . BREAK pyc
    (70) S_F -> . CONTINUE pyc
    (71) S_F -> . SWITCH
    (72) S_F -> . DO_WHILE pyc
    (73) S_F -> . WHILE
    (74) S_F -> . RETURN pyc
    (75) S_F -> . ETIQUETA
    (76) S_F -> . GOTO pyc
    (77) S_F -> . FOR
    (78) S_F -> . PRINTF pyc
    (79) S_F -> . INC_POST pyc
    (80) S_F -> . INC_PRE pyc
    (10) Declaracion -> . Tipos L_Dec pyc
    (20) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (21) LASIGNACION -> . ASIGNACION
    (83) INSTANCIA -> . t_struct iden iden LACCESO
    (84) INSTANCIA -> . t_struct iden iden
    (39) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (109) IF -> . t_if par1 EXP par2 BLOQUE
    (110) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (111) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (114) LLAMADA -> . iden par1 ELEMENTS par2
    (115) LLAMADA -> . iden par1 par2
    (107) BREAK -> . t_break
    (108) CONTINUE -> . t_continue
    (99) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (100) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (95) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (96) WHILE -> . t_while par1 EXP par2 BLOQUE
    (97) RETURN -> . t_return EXP
    (98) RETURN -> . t_return
    (93) ETIQUETA -> . iden bipunto
    (94) GOTO -> . t_goto iden
    (87) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (81) PRINTF -> . t_printf par1 string coma ELEMENTS par2
    (82) PRINTF -> . t_printf par1 string par2
    (152) INC_POST -> . EXP incremento
    (153) INC_POST -> . EXP decremento
    (150) INC_PRE -> . incremento EXP
    (151) INC_PRE -> . decremento EXP
    (51) Tipos -> . t_char
    (52) Tipos -> . t_int
    (53) Tipos -> . t_double
    (54) Tipos -> . t_float
    (22) ASIGNACION -> . iden
    (23) ASIGNACION -> . iden OP EXP
    (24) ASIGNACION -> . iden LACCESO
    (25) ASIGNACION -> . iden LACCESO OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (27) ASIGNACION -> . ACCESO_STRUCT
    (116) EXP -> . EXP mas EXP
    (117) EXP -> . EXP menos EXP
    (118) EXP -> . EXP por EXP
    (119) EXP -> . EXP division EXP
    (120) EXP -> . EXP modulo EXP
    (121) EXP -> . EXP mayor EXP
    (122) EXP -> . EXP mayori EXP
    (123) EXP -> . EXP menor EXP
    (124) EXP -> . EXP menori EXP
    (125) EXP -> . EXP igual EXP
    (126) EXP -> . EXP diferente EXP
    (127) EXP -> . EXP and EXP
    (128) EXP -> . EXP or EXP
    (129) EXP -> . iden LACCESO
    (130) EXP -> . par1 t_char par2 EXP
    (131) EXP -> . par1 t_int par2 EXP
    (132) EXP -> . par1 t_float par2 EXP
    (133) EXP -> . string
    (134) EXP -> . entero
    (135) EXP -> . decimal
    (136) EXP -> . char
    (137) EXP -> . iden
    (138) EXP -> . par1 EXP par2
    (139) EXP -> . EXP shiftizq EXP
    (140) EXP -> . EXP shiftder EXP
    (141) EXP -> . EXP andb EXP
    (142) EXP -> . EXP xorb EXP
    (143) EXP -> . EXP orb EXP
    (144) EXP -> . t_scanf par1 par2
    (145) EXP -> . mas EXP
    (146) EXP -> . menos EXP
    (147) EXP -> . not EXP
    (148) EXP -> . notb EXP
    (149) EXP -> . andb EXP
    (154) EXP -> . incremento EXP
    (155) EXP -> . decremento EXP
    (156) EXP -> . EXP condicional EXP bipunto EXP
    (157) EXP -> . EXP incremento
    (158) EXP -> . EXP decremento
    (159) EXP -> . llav1 ELEMENTS llav2
    (162) EXP -> . LLAMADA
    (163) EXP -> . ACCESO_STRUCT
    (164) EXP -> . t_sizeof par1 EXP par2
    (50) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (48) ItemsStruct2 -> . iden
    (49) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 103 (CASO -> t_case EXP bipunto SS_F .)
    t_default       reduce using rule 103 (CASO -> t_case EXP bipunto SS_F .)
    t_case          reduce using rule 103 (CASO -> t_case EXP bipunto SS_F .)
    error           shift and go to state 194
    t_struct        shift and go to state 214
    t_if            shift and go to state 216
    iden            shift and go to state 215
    t_break         shift and go to state 218
    t_continue      shift and go to state 219
    t_switch        shift and go to state 220
    t_do            shift and go to state 221
    t_while         shift and go to state 222
    t_return        shift and go to state 223
    t_goto          shift and go to state 224
    t_for           shift and go to state 225
    t_printf        shift and go to state 226
    incremento      shift and go to state 227
    decremento      shift and go to state 228
    t_char          shift and go to state 14
    t_int           shift and go to state 15
    t_double        shift and go to state 16
    t_float         shift and go to state 17
    par1            shift and go to state 57
    string          shift and go to state 58
    entero          shift and go to state 59
    decimal         shift and go to state 60
    char            shift and go to state 61
    t_scanf         shift and go to state 63
    mas             shift and go to state 55
    menos           shift and go to state 56
    not             shift and go to state 64
    notb            shift and go to state 65
    andb            shift and go to state 62
    llav1           shift and go to state 68
    t_sizeof        shift and go to state 71

    EXP                            shift and go to state 217
    S_F                            shift and go to state 234
    Declaracion                    shift and go to state 195
    LASIGNACION                    shift and go to state 196
    INSTANCIA                      shift and go to state 197
    STRUCT                         shift and go to state 198
    IF                             shift and go to state 199
    LLAMADA                        shift and go to state 200
    BREAK                          shift and go to state 201
    CONTINUE                       shift and go to state 202
    SWITCH                         shift and go to state 203
    DO_WHILE                       shift and go to state 204
    WHILE                          shift and go to state 205
    RETURN                         shift and go to state 206
    ETIQUETA                       shift and go to state 207
    GOTO                           shift and go to state 208
    FOR                            shift and go to state 209
    PRINTF                         shift and go to state 210
    INC_POST                       shift and go to state 211
    INC_PRE                        shift and go to state 212
    Tipos                          shift and go to state 213
    ASIGNACION                     shift and go to state 10
    ACCESO_STRUCT                  shift and go to state 229
    ItemsStruct2                   shift and go to state 19
