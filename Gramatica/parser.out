Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> Sentencias_G
Rule 2     S -> <empty>
Rule 3     Sentencias_G -> Sentencias_G Sentencia_G
Rule 4     Sentencias_G -> Sentencia_G
Rule 5     Sentencia_G -> Declaracion
Rule 6     Sentencia_G -> LASIGNACION pyc
Rule 7     Sentencia_G -> STRUCT pyc
Rule 8     Sentencia_G -> Funcion
Rule 9     Declaracion -> Tipos L_Dec pyc
Rule 10    L_Dec -> L_Dec coma Dec
Rule 11    L_Dec -> Dec
Rule 12    Dec -> iden
Rule 13    Dec -> iden asigna EXP
Rule 14    Dec -> iden cor1 cor2 asigna EXP
Rule 15    Dec -> iden LACCESO
Rule 16    Dec -> iden LACCESO asigna EXP
Rule 17    LACCESO -> LACCESO cor1 EXP cor2
Rule 18    LACCESO -> cor1 EXP cor2
Rule 19    LASIGNACION -> LASIGNACION coma ASIGNACION
Rule 20    LASIGNACION -> ASIGNACION
Rule 21    ASIGNACION -> iden
Rule 22    ASIGNACION -> iden OP EXP
Rule 23    ASIGNACION -> iden LACCESO
Rule 24    ASIGNACION -> iden LACCESO OP EXP
Rule 25    ASIGNACION -> ACCESO_STRUCT OP EXP
Rule 26    ASIGNACION -> ACCESO_STRUCT
Rule 27    OP -> andbasigna
Rule 28    OP -> divasigna
Rule 29    OP -> masasigna
Rule 30    OP -> menosasigna
Rule 31    OP -> modasigna
Rule 32    OP -> orbasigna
Rule 33    OP -> porasigna
Rule 34    OP -> shiftizqasigna
Rule 35    OP -> shiftderasigna
Rule 36    OP -> xorbasinga
Rule 37    OP -> asigna
Rule 38    STRUCT -> t_struct iden llav1 ATRIBUTOS llav2
Rule 39    ATRIBUTOS -> ATRIBUTOS ATRIBUTO
Rule 40    ATRIBUTOS -> ATRIBUTO
Rule 41    ATRIBUTO -> Tipos LItemsStruct pyc
Rule 42    LItemsStruct -> LItemsStruct coma ItemsStruct
Rule 43    LItemsStruct -> ItemsStruct
Rule 44    ItemsStruct -> iden
Rule 45    ItemsStruct -> iden LACCESO
Rule 46    ItemsStruct2 -> iden
Rule 47    ItemsStruct2 -> iden LACCESO
Rule 48    ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2
Rule 49    Tipos -> t_char
Rule 50    Tipos -> t_int
Rule 51    Tipos -> t_double
Rule 52    Tipos -> t_float
Rule 53    Funcion -> Tipos iden par1 Parametros par2 BLOQUE
Rule 54    Funcion -> t_void iden par1 Parametros par2 BLOQUE
Rule 55    Parametros -> <empty>
Rule 56    Parametros -> Parametros coma Parametro
Rule 57    Parametros -> Parametro
Rule 58    SS_F -> SS_F S_F
Rule 59    SS_F -> S_F
Rule 60    S_F -> Declaracion
Rule 61    S_F -> LASIGNACION pyc
Rule 62    S_F -> STRUCT pyc
Rule 63    S_F -> IF
Rule 64    S_F -> LLAMADA pyc
Rule 65    S_F -> BREAK pyc
Rule 66    S_F -> CONTINUE pyc
Rule 67    S_F -> SWITCH
Rule 68    S_F -> DO_WHILE pyc
Rule 69    S_F -> WHILE
Rule 70    S_F -> RETURN
Rule 71    S_F -> ETIQUETA
Rule 72    S_F -> GOTO pyc
Rule 73    S_F -> FOR
Rule 74    BLOQUE -> llav1 SS_F llav2
Rule 75    BLOQUE -> llav1 llav2
Rule 76    FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE
Rule 77    INICIO -> Tipos Dec pyc
Rule 78    INICIO -> ASIGNACION pyc
Rule 79    INICIO -> pyc
Rule 80    INCDC -> EXP par2
Rule 81    INCDC -> par2
Rule 82    ETIQUETA -> iden bipunto
Rule 83    GOTO -> t_goto iden
Rule 84    DO_WHILE -> t_do BLOQUE t_while par1 EXP par2
Rule 85    WHILE -> t_while par1 EXP par2 BLOQUE
Rule 86    RETURN -> t_return EXP
Rule 87    RETURN -> t_return
Rule 88    SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2
Rule 89    SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
Rule 90    CASOS -> CASOS CASO
Rule 91    CASOS -> CASO
Rule 92    CASO -> t_case EXP bipunto SS_F
Rule 93    CASO -> t_case EXP bipunto
Rule 94    DEFAULT -> t_default bipunto SS_F
Rule 95    DEFAULT -> t_default bipunto
Rule 96    BREAK -> t_break
Rule 97    CONTINUE -> t_continue
Rule 98    IF -> t_if par1 EXP par2 BLOQUE
Rule 99    IF -> t_if par1 EXP par2 BLOQUE t_else IF
Rule 100   IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE
Rule 101   Parametro -> Tipos iden
Rule 102   Parametro -> Tipos iden LACCESO
Rule 103   LLAMADA -> iden par1 ELEMENTS par2
Rule 104   LLAMADA -> iden par1 par2
Rule 105   EXP -> EXP mas EXP
Rule 106   EXP -> EXP menos EXP
Rule 107   EXP -> EXP por EXP
Rule 108   EXP -> EXP division EXP
Rule 109   EXP -> EXP modulo EXP
Rule 110   EXP -> EXP mayor EXP
Rule 111   EXP -> EXP mayori EXP
Rule 112   EXP -> EXP menor EXP
Rule 113   EXP -> EXP menori EXP
Rule 114   EXP -> EXP igual EXP
Rule 115   EXP -> EXP diferente EXP
Rule 116   EXP -> EXP and EXP
Rule 117   EXP -> EXP or EXP
Rule 118   EXP -> string
Rule 119   EXP -> entero
Rule 120   EXP -> decimal
Rule 121   EXP -> char
Rule 122   EXP -> iden
Rule 123   EXP -> par1 EXP par2
Rule 124   EXP -> EXP shiftizq EXP
Rule 125   EXP -> EXP shiftder EXP
Rule 126   EXP -> EXP andb EXP
Rule 127   EXP -> EXP xorb EXP
Rule 128   EXP -> EXP orb EXP
Rule 129   EXP -> mas EXP
Rule 130   EXP -> menos EXP
Rule 131   EXP -> not EXP
Rule 132   EXP -> notb EXP
Rule 133   EXP -> andb EXP
Rule 134   EXP -> incremento EXP
Rule 135   EXP -> decremento EXP
Rule 136   EXP -> EXP condicional EXP bipunto EXP
Rule 137   EXP -> EXP incremento
Rule 138   EXP -> EXP decremento
Rule 139   EXP -> llav1 ELEMENTS llav2
Rule 140   ELEMENTS -> ELEMENTS coma EXP
Rule 141   ELEMENTS -> EXP
Rule 142   EXP -> ACCESO_STRUCT
Rule 143   EXP -> LLAMADA
Rule 144   EXP -> t_sizeof par1 EXP par2

Terminals, with rules where they appear

and                  : 116
andb                 : 126 133
andbasigna           : 27
asigna               : 13 14 16 37
bipunto              : 82 92 93 94 95 136
char                 : 121
coma                 : 10 19 42 56 140
condicional          : 136
cor1                 : 14 17 18
cor2                 : 14 17 18
decimal              : 120
decremento           : 135 138
diferente            : 115
divasigna            : 28
division             : 108
entero               : 119
error                : 
iden                 : 12 13 14 15 16 21 22 23 24 38 44 45 46 47 53 54 82 83 101 102 103 104 122
igual                : 114
incremento           : 134 137
llav1                : 38 74 75 88 89 139
llav2                : 38 74 75 88 89 139
mas                  : 105 129
masasigna            : 29
mayor                : 110
mayori               : 111
menor                : 112
menori               : 113
menos                : 106 130
menosasigna          : 30
modasigna            : 31
modulo               : 109
not                  : 131
notb                 : 132
or                   : 117
orb                  : 128
orbasigna            : 32
par1                 : 53 54 76 84 85 88 89 98 99 100 103 104 123 144
par2                 : 53 54 80 81 84 85 88 89 98 99 100 103 104 123 144
por                  : 107
porasigna            : 33
punto                : 48
pyc                  : 6 7 9 41 61 62 64 65 66 68 72 76 77 78 79
shiftder             : 125
shiftderasigna       : 35
shiftizq             : 124
shiftizqasigna       : 34
string               : 118
t_break              : 96
t_case               : 92 93
t_char               : 49
t_continue           : 97
t_default            : 94 95
t_do                 : 84
t_double             : 51
t_else               : 99 100
t_float              : 52
t_for                : 76
t_goto               : 83
t_if                 : 98 99 100
t_int                : 50
t_return             : 86 87
t_sizeof             : 144
t_struct             : 38
t_switch             : 88 89
t_void               : 54
t_while              : 84 85
xorb                 : 127
xorbasinga           : 36

Nonterminals, with rules where they appear

ACCESO_STRUCT        : 25 26 142
ASIGNACION           : 19 20 78
ATRIBUTO             : 39 40
ATRIBUTOS            : 38 39
BLOQUE               : 53 54 76 84 85 98 99 100 100
BREAK                : 65
CASO                 : 90 91
CASOS                : 88 89 90
CONTINUE             : 66
DEFAULT              : 89
DO_WHILE             : 68
Dec                  : 10 11 77
Declaracion          : 5 60
ELEMENTS             : 103 139 140
ETIQUETA             : 71
EXP                  : 13 14 16 17 18 22 24 25 76 80 84 85 86 88 89 92 93 98 99 100 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 116 117 117 123 124 124 125 125 126 126 127 127 128 128 129 130 131 132 133 134 135 136 136 136 137 138 140 141 144
FOR                  : 73
Funcion              : 8
GOTO                 : 72
IF                   : 63 99
INCDC                : 76
INICIO               : 76
ItemsStruct          : 42 43
ItemsStruct2         : 48 48
LACCESO              : 15 16 17 23 24 45 47 102
LASIGNACION          : 6 19 61
LItemsStruct         : 41 42
LLAMADA              : 64 143
L_Dec                : 9 10
OP                   : 22 24 25
Parametro            : 56 57
Parametros           : 53 54 56
RETURN               : 70
S                    : 0
SS_F                 : 58 74 92 94
STRUCT               : 7 62
SWITCH               : 67
S_F                  : 58 59
Sentencia_G          : 3 4
Sentencias_G         : 1 3
Tipos                : 9 41 53 77 101 102
WHILE                : 69

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . Sentencias_G
    (2) S -> .
    (3) Sentencias_G -> . Sentencias_G Sentencia_G
    (4) Sentencias_G -> . Sentencia_G
    (5) Sentencia_G -> . Declaracion
    (6) Sentencia_G -> . LASIGNACION pyc
    (7) Sentencia_G -> . STRUCT pyc
    (8) Sentencia_G -> . Funcion
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (53) Funcion -> . Tipos iden par1 Parametros par2 BLOQUE
    (54) Funcion -> . t_void iden par1 Parametros par2 BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    $end            reduce using rule 2 (S -> .)
    t_struct        shift and go to state 10
    t_void          shift and go to state 12
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16
    iden            shift and go to state 11

    S                              shift and go to state 1
    Sentencias_G                   shift and go to state 2
    Sentencia_G                    shift and go to state 3
    Declaracion                    shift and go to state 4
    LASIGNACION                    shift and go to state 5
    STRUCT                         shift and go to state 6
    Funcion                        shift and go to state 7
    Tipos                          shift and go to state 8
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 1

    (0) S' -> S .



state 2

    (1) S -> Sentencias_G .
    (3) Sentencias_G -> Sentencias_G . Sentencia_G
    (5) Sentencia_G -> . Declaracion
    (6) Sentencia_G -> . LASIGNACION pyc
    (7) Sentencia_G -> . STRUCT pyc
    (8) Sentencia_G -> . Funcion
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (53) Funcion -> . Tipos iden par1 Parametros par2 BLOQUE
    (54) Funcion -> . t_void iden par1 Parametros par2 BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    $end            reduce using rule 1 (S -> Sentencias_G .)
    t_struct        shift and go to state 10
    t_void          shift and go to state 12
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16
    iden            shift and go to state 11

    Sentencia_G                    shift and go to state 19
    Declaracion                    shift and go to state 4
    LASIGNACION                    shift and go to state 5
    STRUCT                         shift and go to state 6
    Funcion                        shift and go to state 7
    Tipos                          shift and go to state 8
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 3

    (4) Sentencias_G -> Sentencia_G .

    t_struct        reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_void          reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_char          reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_int           reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_double        reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    t_float         reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    iden            reduce using rule 4 (Sentencias_G -> Sentencia_G .)
    $end            reduce using rule 4 (Sentencias_G -> Sentencia_G .)


state 4

    (5) Sentencia_G -> Declaracion .

    t_struct        reduce using rule 5 (Sentencia_G -> Declaracion .)
    t_void          reduce using rule 5 (Sentencia_G -> Declaracion .)
    t_char          reduce using rule 5 (Sentencia_G -> Declaracion .)
    t_int           reduce using rule 5 (Sentencia_G -> Declaracion .)
    t_double        reduce using rule 5 (Sentencia_G -> Declaracion .)
    t_float         reduce using rule 5 (Sentencia_G -> Declaracion .)
    iden            reduce using rule 5 (Sentencia_G -> Declaracion .)
    $end            reduce using rule 5 (Sentencia_G -> Declaracion .)


state 5

    (6) Sentencia_G -> LASIGNACION . pyc
    (19) LASIGNACION -> LASIGNACION . coma ASIGNACION

    pyc             shift and go to state 20
    coma            shift and go to state 21


state 6

    (7) Sentencia_G -> STRUCT . pyc

    pyc             shift and go to state 22


state 7

    (8) Sentencia_G -> Funcion .

    t_struct        reduce using rule 8 (Sentencia_G -> Funcion .)
    t_void          reduce using rule 8 (Sentencia_G -> Funcion .)
    t_char          reduce using rule 8 (Sentencia_G -> Funcion .)
    t_int           reduce using rule 8 (Sentencia_G -> Funcion .)
    t_double        reduce using rule 8 (Sentencia_G -> Funcion .)
    t_float         reduce using rule 8 (Sentencia_G -> Funcion .)
    iden            reduce using rule 8 (Sentencia_G -> Funcion .)
    $end            reduce using rule 8 (Sentencia_G -> Funcion .)


state 8

    (9) Declaracion -> Tipos . L_Dec pyc
    (53) Funcion -> Tipos . iden par1 Parametros par2 BLOQUE
    (10) L_Dec -> . L_Dec coma Dec
    (11) L_Dec -> . Dec
    (12) Dec -> . iden
    (13) Dec -> . iden asigna EXP
    (14) Dec -> . iden cor1 cor2 asigna EXP
    (15) Dec -> . iden LACCESO
    (16) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 24

    L_Dec                          shift and go to state 23
    Dec                            shift and go to state 25

state 9

    (20) LASIGNACION -> ASIGNACION .

    pyc             reduce using rule 20 (LASIGNACION -> ASIGNACION .)
    coma            reduce using rule 20 (LASIGNACION -> ASIGNACION .)


state 10

    (38) STRUCT -> t_struct . iden llav1 ATRIBUTOS llav2

    iden            shift and go to state 26


state 11

    (21) ASIGNACION -> iden .
    (22) ASIGNACION -> iden . OP EXP
    (23) ASIGNACION -> iden . LACCESO
    (24) ASIGNACION -> iden . LACCESO OP EXP
    (46) ItemsStruct2 -> iden .
    (47) ItemsStruct2 -> iden . LACCESO
    (27) OP -> . andbasigna
    (28) OP -> . divasigna
    (29) OP -> . masasigna
    (30) OP -> . menosasigna
    (31) OP -> . modasigna
    (32) OP -> . orbasigna
    (33) OP -> . porasigna
    (34) OP -> . shiftizqasigna
    (35) OP -> . shiftderasigna
    (36) OP -> . xorbasinga
    (37) OP -> . asigna
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 21 (ASIGNACION -> iden .)
    coma            reduce using rule 21 (ASIGNACION -> iden .)
    punto           reduce using rule 46 (ItemsStruct2 -> iden .)
    andbasigna      shift and go to state 29
    divasigna       shift and go to state 30
    masasigna       shift and go to state 31
    menosasigna     shift and go to state 32
    modasigna       shift and go to state 33
    orbasigna       shift and go to state 34
    porasigna       shift and go to state 35
    shiftizqasigna  shift and go to state 36
    shiftderasigna  shift and go to state 37
    xorbasinga      shift and go to state 38
    asigna          shift and go to state 39
    cor1            shift and go to state 40

    OP                             shift and go to state 27
    LACCESO                        shift and go to state 28

state 12

    (54) Funcion -> t_void . iden par1 Parametros par2 BLOQUE

    iden            shift and go to state 41


state 13

    (49) Tipos -> t_char .

    iden            reduce using rule 49 (Tipos -> t_char .)


state 14

    (50) Tipos -> t_int .

    iden            reduce using rule 50 (Tipos -> t_int .)


state 15

    (51) Tipos -> t_double .

    iden            reduce using rule 51 (Tipos -> t_double .)


state 16

    (52) Tipos -> t_float .

    iden            reduce using rule 52 (Tipos -> t_float .)


state 17

    (25) ASIGNACION -> ACCESO_STRUCT . OP EXP
    (26) ASIGNACION -> ACCESO_STRUCT .
    (27) OP -> . andbasigna
    (28) OP -> . divasigna
    (29) OP -> . masasigna
    (30) OP -> . menosasigna
    (31) OP -> . modasigna
    (32) OP -> . orbasigna
    (33) OP -> . porasigna
    (34) OP -> . shiftizqasigna
    (35) OP -> . shiftderasigna
    (36) OP -> . xorbasinga
    (37) OP -> . asigna

    pyc             reduce using rule 26 (ASIGNACION -> ACCESO_STRUCT .)
    coma            reduce using rule 26 (ASIGNACION -> ACCESO_STRUCT .)
    andbasigna      shift and go to state 29
    divasigna       shift and go to state 30
    masasigna       shift and go to state 31
    menosasigna     shift and go to state 32
    modasigna       shift and go to state 33
    orbasigna       shift and go to state 34
    porasigna       shift and go to state 35
    shiftizqasigna  shift and go to state 36
    shiftderasigna  shift and go to state 37
    xorbasinga      shift and go to state 38
    asigna          shift and go to state 39

    OP                             shift and go to state 42

state 18

    (48) ACCESO_STRUCT -> ItemsStruct2 . punto ItemsStruct2

    punto           shift and go to state 43


state 19

    (3) Sentencias_G -> Sentencias_G Sentencia_G .

    t_struct        reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_void          reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_char          reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_int           reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_double        reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    t_float         reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    iden            reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)
    $end            reduce using rule 3 (Sentencias_G -> Sentencias_G Sentencia_G .)


state 20

    (6) Sentencia_G -> LASIGNACION pyc .

    t_struct        reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    t_void          reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    t_char          reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    t_int           reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    t_double        reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    t_float         reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    iden            reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)
    $end            reduce using rule 6 (Sentencia_G -> LASIGNACION pyc .)


state 21

    (19) LASIGNACION -> LASIGNACION coma . ASIGNACION
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 11

    ASIGNACION                     shift and go to state 44
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 22

    (7) Sentencia_G -> STRUCT pyc .

    t_struct        reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    t_void          reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    t_char          reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    t_int           reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    t_double        reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    t_float         reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    iden            reduce using rule 7 (Sentencia_G -> STRUCT pyc .)
    $end            reduce using rule 7 (Sentencia_G -> STRUCT pyc .)


state 23

    (9) Declaracion -> Tipos L_Dec . pyc
    (10) L_Dec -> L_Dec . coma Dec

    pyc             shift and go to state 45
    coma            shift and go to state 46


state 24

    (53) Funcion -> Tipos iden . par1 Parametros par2 BLOQUE
    (12) Dec -> iden .
    (13) Dec -> iden . asigna EXP
    (14) Dec -> iden . cor1 cor2 asigna EXP
    (15) Dec -> iden . LACCESO
    (16) Dec -> iden . LACCESO asigna EXP
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    par1            shift and go to state 47
    pyc             reduce using rule 12 (Dec -> iden .)
    coma            reduce using rule 12 (Dec -> iden .)
    asigna          shift and go to state 48
    cor1            shift and go to state 49

    LACCESO                        shift and go to state 50

state 25

    (11) L_Dec -> Dec .

    pyc             reduce using rule 11 (L_Dec -> Dec .)
    coma            reduce using rule 11 (L_Dec -> Dec .)


state 26

    (38) STRUCT -> t_struct iden . llav1 ATRIBUTOS llav2

    llav1           shift and go to state 51


state 27

    (22) ASIGNACION -> iden OP . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 53
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 28

    (23) ASIGNACION -> iden LACCESO .
    (24) ASIGNACION -> iden LACCESO . OP EXP
    (47) ItemsStruct2 -> iden LACCESO .
    (17) LACCESO -> LACCESO . cor1 EXP cor2
    (27) OP -> . andbasigna
    (28) OP -> . divasigna
    (29) OP -> . masasigna
    (30) OP -> . menosasigna
    (31) OP -> . modasigna
    (32) OP -> . orbasigna
    (33) OP -> . porasigna
    (34) OP -> . shiftizqasigna
    (35) OP -> . shiftderasigna
    (36) OP -> . xorbasinga
    (37) OP -> . asigna

    pyc             reduce using rule 23 (ASIGNACION -> iden LACCESO .)
    coma            reduce using rule 23 (ASIGNACION -> iden LACCESO .)
    punto           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    cor1            shift and go to state 71
    andbasigna      shift and go to state 29
    divasigna       shift and go to state 30
    masasigna       shift and go to state 31
    menosasigna     shift and go to state 32
    modasigna       shift and go to state 33
    orbasigna       shift and go to state 34
    porasigna       shift and go to state 35
    shiftizqasigna  shift and go to state 36
    shiftderasigna  shift and go to state 37
    xorbasinga      shift and go to state 38
    asigna          shift and go to state 39

    OP                             shift and go to state 70

state 29

    (27) OP -> andbasigna .

    string          reduce using rule 27 (OP -> andbasigna .)
    entero          reduce using rule 27 (OP -> andbasigna .)
    decimal         reduce using rule 27 (OP -> andbasigna .)
    char            reduce using rule 27 (OP -> andbasigna .)
    iden            reduce using rule 27 (OP -> andbasigna .)
    par1            reduce using rule 27 (OP -> andbasigna .)
    mas             reduce using rule 27 (OP -> andbasigna .)
    menos           reduce using rule 27 (OP -> andbasigna .)
    not             reduce using rule 27 (OP -> andbasigna .)
    notb            reduce using rule 27 (OP -> andbasigna .)
    andb            reduce using rule 27 (OP -> andbasigna .)
    incremento      reduce using rule 27 (OP -> andbasigna .)
    decremento      reduce using rule 27 (OP -> andbasigna .)
    llav1           reduce using rule 27 (OP -> andbasigna .)
    t_sizeof        reduce using rule 27 (OP -> andbasigna .)


state 30

    (28) OP -> divasigna .

    string          reduce using rule 28 (OP -> divasigna .)
    entero          reduce using rule 28 (OP -> divasigna .)
    decimal         reduce using rule 28 (OP -> divasigna .)
    char            reduce using rule 28 (OP -> divasigna .)
    iden            reduce using rule 28 (OP -> divasigna .)
    par1            reduce using rule 28 (OP -> divasigna .)
    mas             reduce using rule 28 (OP -> divasigna .)
    menos           reduce using rule 28 (OP -> divasigna .)
    not             reduce using rule 28 (OP -> divasigna .)
    notb            reduce using rule 28 (OP -> divasigna .)
    andb            reduce using rule 28 (OP -> divasigna .)
    incremento      reduce using rule 28 (OP -> divasigna .)
    decremento      reduce using rule 28 (OP -> divasigna .)
    llav1           reduce using rule 28 (OP -> divasigna .)
    t_sizeof        reduce using rule 28 (OP -> divasigna .)


state 31

    (29) OP -> masasigna .

    string          reduce using rule 29 (OP -> masasigna .)
    entero          reduce using rule 29 (OP -> masasigna .)
    decimal         reduce using rule 29 (OP -> masasigna .)
    char            reduce using rule 29 (OP -> masasigna .)
    iden            reduce using rule 29 (OP -> masasigna .)
    par1            reduce using rule 29 (OP -> masasigna .)
    mas             reduce using rule 29 (OP -> masasigna .)
    menos           reduce using rule 29 (OP -> masasigna .)
    not             reduce using rule 29 (OP -> masasigna .)
    notb            reduce using rule 29 (OP -> masasigna .)
    andb            reduce using rule 29 (OP -> masasigna .)
    incremento      reduce using rule 29 (OP -> masasigna .)
    decremento      reduce using rule 29 (OP -> masasigna .)
    llav1           reduce using rule 29 (OP -> masasigna .)
    t_sizeof        reduce using rule 29 (OP -> masasigna .)


state 32

    (30) OP -> menosasigna .

    string          reduce using rule 30 (OP -> menosasigna .)
    entero          reduce using rule 30 (OP -> menosasigna .)
    decimal         reduce using rule 30 (OP -> menosasigna .)
    char            reduce using rule 30 (OP -> menosasigna .)
    iden            reduce using rule 30 (OP -> menosasigna .)
    par1            reduce using rule 30 (OP -> menosasigna .)
    mas             reduce using rule 30 (OP -> menosasigna .)
    menos           reduce using rule 30 (OP -> menosasigna .)
    not             reduce using rule 30 (OP -> menosasigna .)
    notb            reduce using rule 30 (OP -> menosasigna .)
    andb            reduce using rule 30 (OP -> menosasigna .)
    incremento      reduce using rule 30 (OP -> menosasigna .)
    decremento      reduce using rule 30 (OP -> menosasigna .)
    llav1           reduce using rule 30 (OP -> menosasigna .)
    t_sizeof        reduce using rule 30 (OP -> menosasigna .)


state 33

    (31) OP -> modasigna .

    string          reduce using rule 31 (OP -> modasigna .)
    entero          reduce using rule 31 (OP -> modasigna .)
    decimal         reduce using rule 31 (OP -> modasigna .)
    char            reduce using rule 31 (OP -> modasigna .)
    iden            reduce using rule 31 (OP -> modasigna .)
    par1            reduce using rule 31 (OP -> modasigna .)
    mas             reduce using rule 31 (OP -> modasigna .)
    menos           reduce using rule 31 (OP -> modasigna .)
    not             reduce using rule 31 (OP -> modasigna .)
    notb            reduce using rule 31 (OP -> modasigna .)
    andb            reduce using rule 31 (OP -> modasigna .)
    incremento      reduce using rule 31 (OP -> modasigna .)
    decremento      reduce using rule 31 (OP -> modasigna .)
    llav1           reduce using rule 31 (OP -> modasigna .)
    t_sizeof        reduce using rule 31 (OP -> modasigna .)


state 34

    (32) OP -> orbasigna .

    string          reduce using rule 32 (OP -> orbasigna .)
    entero          reduce using rule 32 (OP -> orbasigna .)
    decimal         reduce using rule 32 (OP -> orbasigna .)
    char            reduce using rule 32 (OP -> orbasigna .)
    iden            reduce using rule 32 (OP -> orbasigna .)
    par1            reduce using rule 32 (OP -> orbasigna .)
    mas             reduce using rule 32 (OP -> orbasigna .)
    menos           reduce using rule 32 (OP -> orbasigna .)
    not             reduce using rule 32 (OP -> orbasigna .)
    notb            reduce using rule 32 (OP -> orbasigna .)
    andb            reduce using rule 32 (OP -> orbasigna .)
    incremento      reduce using rule 32 (OP -> orbasigna .)
    decremento      reduce using rule 32 (OP -> orbasigna .)
    llav1           reduce using rule 32 (OP -> orbasigna .)
    t_sizeof        reduce using rule 32 (OP -> orbasigna .)


state 35

    (33) OP -> porasigna .

    string          reduce using rule 33 (OP -> porasigna .)
    entero          reduce using rule 33 (OP -> porasigna .)
    decimal         reduce using rule 33 (OP -> porasigna .)
    char            reduce using rule 33 (OP -> porasigna .)
    iden            reduce using rule 33 (OP -> porasigna .)
    par1            reduce using rule 33 (OP -> porasigna .)
    mas             reduce using rule 33 (OP -> porasigna .)
    menos           reduce using rule 33 (OP -> porasigna .)
    not             reduce using rule 33 (OP -> porasigna .)
    notb            reduce using rule 33 (OP -> porasigna .)
    andb            reduce using rule 33 (OP -> porasigna .)
    incremento      reduce using rule 33 (OP -> porasigna .)
    decremento      reduce using rule 33 (OP -> porasigna .)
    llav1           reduce using rule 33 (OP -> porasigna .)
    t_sizeof        reduce using rule 33 (OP -> porasigna .)


state 36

    (34) OP -> shiftizqasigna .

    string          reduce using rule 34 (OP -> shiftizqasigna .)
    entero          reduce using rule 34 (OP -> shiftizqasigna .)
    decimal         reduce using rule 34 (OP -> shiftizqasigna .)
    char            reduce using rule 34 (OP -> shiftizqasigna .)
    iden            reduce using rule 34 (OP -> shiftizqasigna .)
    par1            reduce using rule 34 (OP -> shiftizqasigna .)
    mas             reduce using rule 34 (OP -> shiftizqasigna .)
    menos           reduce using rule 34 (OP -> shiftizqasigna .)
    not             reduce using rule 34 (OP -> shiftizqasigna .)
    notb            reduce using rule 34 (OP -> shiftizqasigna .)
    andb            reduce using rule 34 (OP -> shiftizqasigna .)
    incremento      reduce using rule 34 (OP -> shiftizqasigna .)
    decremento      reduce using rule 34 (OP -> shiftizqasigna .)
    llav1           reduce using rule 34 (OP -> shiftizqasigna .)
    t_sizeof        reduce using rule 34 (OP -> shiftizqasigna .)


state 37

    (35) OP -> shiftderasigna .

    string          reduce using rule 35 (OP -> shiftderasigna .)
    entero          reduce using rule 35 (OP -> shiftderasigna .)
    decimal         reduce using rule 35 (OP -> shiftderasigna .)
    char            reduce using rule 35 (OP -> shiftderasigna .)
    iden            reduce using rule 35 (OP -> shiftderasigna .)
    par1            reduce using rule 35 (OP -> shiftderasigna .)
    mas             reduce using rule 35 (OP -> shiftderasigna .)
    menos           reduce using rule 35 (OP -> shiftderasigna .)
    not             reduce using rule 35 (OP -> shiftderasigna .)
    notb            reduce using rule 35 (OP -> shiftderasigna .)
    andb            reduce using rule 35 (OP -> shiftderasigna .)
    incremento      reduce using rule 35 (OP -> shiftderasigna .)
    decremento      reduce using rule 35 (OP -> shiftderasigna .)
    llav1           reduce using rule 35 (OP -> shiftderasigna .)
    t_sizeof        reduce using rule 35 (OP -> shiftderasigna .)


state 38

    (36) OP -> xorbasinga .

    string          reduce using rule 36 (OP -> xorbasinga .)
    entero          reduce using rule 36 (OP -> xorbasinga .)
    decimal         reduce using rule 36 (OP -> xorbasinga .)
    char            reduce using rule 36 (OP -> xorbasinga .)
    iden            reduce using rule 36 (OP -> xorbasinga .)
    par1            reduce using rule 36 (OP -> xorbasinga .)
    mas             reduce using rule 36 (OP -> xorbasinga .)
    menos           reduce using rule 36 (OP -> xorbasinga .)
    not             reduce using rule 36 (OP -> xorbasinga .)
    notb            reduce using rule 36 (OP -> xorbasinga .)
    andb            reduce using rule 36 (OP -> xorbasinga .)
    incremento      reduce using rule 36 (OP -> xorbasinga .)
    decremento      reduce using rule 36 (OP -> xorbasinga .)
    llav1           reduce using rule 36 (OP -> xorbasinga .)
    t_sizeof        reduce using rule 36 (OP -> xorbasinga .)


state 39

    (37) OP -> asigna .

    string          reduce using rule 37 (OP -> asigna .)
    entero          reduce using rule 37 (OP -> asigna .)
    decimal         reduce using rule 37 (OP -> asigna .)
    char            reduce using rule 37 (OP -> asigna .)
    iden            reduce using rule 37 (OP -> asigna .)
    par1            reduce using rule 37 (OP -> asigna .)
    mas             reduce using rule 37 (OP -> asigna .)
    menos           reduce using rule 37 (OP -> asigna .)
    not             reduce using rule 37 (OP -> asigna .)
    notb            reduce using rule 37 (OP -> asigna .)
    andb            reduce using rule 37 (OP -> asigna .)
    incremento      reduce using rule 37 (OP -> asigna .)
    decremento      reduce using rule 37 (OP -> asigna .)
    llav1           reduce using rule 37 (OP -> asigna .)
    t_sizeof        reduce using rule 37 (OP -> asigna .)


state 40

    (18) LACCESO -> cor1 . EXP cor2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 72
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 41

    (54) Funcion -> t_void iden . par1 Parametros par2 BLOQUE

    par1            shift and go to state 73


state 42

    (25) ASIGNACION -> ACCESO_STRUCT OP . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    ACCESO_STRUCT                  shift and go to state 67
    EXP                            shift and go to state 74
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 43

    (48) ACCESO_STRUCT -> ItemsStruct2 punto . ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    iden            shift and go to state 76

    ItemsStruct2                   shift and go to state 75

state 44

    (19) LASIGNACION -> LASIGNACION coma ASIGNACION .

    pyc             reduce using rule 19 (LASIGNACION -> LASIGNACION coma ASIGNACION .)
    coma            reduce using rule 19 (LASIGNACION -> LASIGNACION coma ASIGNACION .)


state 45

    (9) Declaracion -> Tipos L_Dec pyc .

    t_struct        reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_void          reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_char          reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_int           reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_double        reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_float         reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    iden            reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    $end            reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    llav2           reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_if            reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_break         reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_continue      reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_switch        reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_do            reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_while         reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_return        reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_goto          reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_for           reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_default       reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)
    t_case          reduce using rule 9 (Declaracion -> Tipos L_Dec pyc .)


state 46

    (10) L_Dec -> L_Dec coma . Dec
    (12) Dec -> . iden
    (13) Dec -> . iden asigna EXP
    (14) Dec -> . iden cor1 cor2 asigna EXP
    (15) Dec -> . iden LACCESO
    (16) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 78

    Dec                            shift and go to state 77

state 47

    (53) Funcion -> Tipos iden par1 . Parametros par2 BLOQUE
    (55) Parametros -> .
    (56) Parametros -> . Parametros coma Parametro
    (57) Parametros -> . Parametro
    (101) Parametro -> . Tipos iden
    (102) Parametro -> . Tipos iden LACCESO
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float

    par2            reduce using rule 55 (Parametros -> .)
    coma            reduce using rule 55 (Parametros -> .)
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    Tipos                          shift and go to state 79
    Parametros                     shift and go to state 80
    Parametro                      shift and go to state 81

state 48

    (13) Dec -> iden asigna . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 82
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 49

    (14) Dec -> iden cor1 . cor2 asigna EXP
    (18) LACCESO -> cor1 . EXP cor2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    cor2            shift and go to state 83
    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 72
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 50

    (15) Dec -> iden LACCESO .
    (16) Dec -> iden LACCESO . asigna EXP
    (17) LACCESO -> LACCESO . cor1 EXP cor2

    pyc             reduce using rule 15 (Dec -> iden LACCESO .)
    coma            reduce using rule 15 (Dec -> iden LACCESO .)
    asigna          shift and go to state 84
    cor1            shift and go to state 71


state 51

    (38) STRUCT -> t_struct iden llav1 . ATRIBUTOS llav2
    (39) ATRIBUTOS -> . ATRIBUTOS ATRIBUTO
    (40) ATRIBUTOS -> . ATRIBUTO
    (41) ATRIBUTO -> . Tipos LItemsStruct pyc
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float

    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    ATRIBUTOS                      shift and go to state 85
    ATRIBUTO                       shift and go to state 86
    Tipos                          shift and go to state 87

state 52

    (122) EXP -> iden .
    (103) LLAMADA -> iden . par1 ELEMENTS par2
    (104) LLAMADA -> iden . par1 par2
    (46) ItemsStruct2 -> iden .
    (47) ItemsStruct2 -> iden . LACCESO
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    mas             reduce using rule 122 (EXP -> iden .)
    menos           reduce using rule 122 (EXP -> iden .)
    por             reduce using rule 122 (EXP -> iden .)
    division        reduce using rule 122 (EXP -> iden .)
    modulo          reduce using rule 122 (EXP -> iden .)
    mayor           reduce using rule 122 (EXP -> iden .)
    mayori          reduce using rule 122 (EXP -> iden .)
    menor           reduce using rule 122 (EXP -> iden .)
    menori          reduce using rule 122 (EXP -> iden .)
    igual           reduce using rule 122 (EXP -> iden .)
    diferente       reduce using rule 122 (EXP -> iden .)
    and             reduce using rule 122 (EXP -> iden .)
    or              reduce using rule 122 (EXP -> iden .)
    shiftizq        reduce using rule 122 (EXP -> iden .)
    shiftder        reduce using rule 122 (EXP -> iden .)
    andb            reduce using rule 122 (EXP -> iden .)
    xorb            reduce using rule 122 (EXP -> iden .)
    orb             reduce using rule 122 (EXP -> iden .)
    condicional     reduce using rule 122 (EXP -> iden .)
    incremento      reduce using rule 122 (EXP -> iden .)
    decremento      reduce using rule 122 (EXP -> iden .)
    pyc             reduce using rule 122 (EXP -> iden .)
    coma            reduce using rule 122 (EXP -> iden .)
    cor2            reduce using rule 122 (EXP -> iden .)
    par2            reduce using rule 122 (EXP -> iden .)
    llav2           reduce using rule 122 (EXP -> iden .)
    bipunto         reduce using rule 122 (EXP -> iden .)
    t_struct        reduce using rule 122 (EXP -> iden .)
    t_if            reduce using rule 122 (EXP -> iden .)
    iden            reduce using rule 122 (EXP -> iden .)
    t_break         reduce using rule 122 (EXP -> iden .)
    t_continue      reduce using rule 122 (EXP -> iden .)
    t_switch        reduce using rule 122 (EXP -> iden .)
    t_do            reduce using rule 122 (EXP -> iden .)
    t_while         reduce using rule 122 (EXP -> iden .)
    t_return        reduce using rule 122 (EXP -> iden .)
    t_goto          reduce using rule 122 (EXP -> iden .)
    t_for           reduce using rule 122 (EXP -> iden .)
    t_char          reduce using rule 122 (EXP -> iden .)
    t_int           reduce using rule 122 (EXP -> iden .)
    t_double        reduce using rule 122 (EXP -> iden .)
    t_float         reduce using rule 122 (EXP -> iden .)
    t_default       reduce using rule 122 (EXP -> iden .)
    t_case          reduce using rule 122 (EXP -> iden .)
    par1            shift and go to state 88
    punto           reduce using rule 46 (ItemsStruct2 -> iden .)
    cor1            shift and go to state 40

    LACCESO                        shift and go to state 89

state 53

    (22) ASIGNACION -> iden OP EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 22 (ASIGNACION -> iden OP EXP .)
    coma            reduce using rule 22 (ASIGNACION -> iden OP EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 54

    (129) EXP -> mas . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 111
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 55

    (130) EXP -> menos . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 112
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 56

    (118) EXP -> string .

    mas             reduce using rule 118 (EXP -> string .)
    menos           reduce using rule 118 (EXP -> string .)
    por             reduce using rule 118 (EXP -> string .)
    division        reduce using rule 118 (EXP -> string .)
    modulo          reduce using rule 118 (EXP -> string .)
    mayor           reduce using rule 118 (EXP -> string .)
    mayori          reduce using rule 118 (EXP -> string .)
    menor           reduce using rule 118 (EXP -> string .)
    menori          reduce using rule 118 (EXP -> string .)
    igual           reduce using rule 118 (EXP -> string .)
    diferente       reduce using rule 118 (EXP -> string .)
    and             reduce using rule 118 (EXP -> string .)
    or              reduce using rule 118 (EXP -> string .)
    shiftizq        reduce using rule 118 (EXP -> string .)
    shiftder        reduce using rule 118 (EXP -> string .)
    andb            reduce using rule 118 (EXP -> string .)
    xorb            reduce using rule 118 (EXP -> string .)
    orb             reduce using rule 118 (EXP -> string .)
    condicional     reduce using rule 118 (EXP -> string .)
    incremento      reduce using rule 118 (EXP -> string .)
    decremento      reduce using rule 118 (EXP -> string .)
    pyc             reduce using rule 118 (EXP -> string .)
    coma            reduce using rule 118 (EXP -> string .)
    cor2            reduce using rule 118 (EXP -> string .)
    par2            reduce using rule 118 (EXP -> string .)
    llav2           reduce using rule 118 (EXP -> string .)
    bipunto         reduce using rule 118 (EXP -> string .)
    t_struct        reduce using rule 118 (EXP -> string .)
    t_if            reduce using rule 118 (EXP -> string .)
    iden            reduce using rule 118 (EXP -> string .)
    t_break         reduce using rule 118 (EXP -> string .)
    t_continue      reduce using rule 118 (EXP -> string .)
    t_switch        reduce using rule 118 (EXP -> string .)
    t_do            reduce using rule 118 (EXP -> string .)
    t_while         reduce using rule 118 (EXP -> string .)
    t_return        reduce using rule 118 (EXP -> string .)
    t_goto          reduce using rule 118 (EXP -> string .)
    t_for           reduce using rule 118 (EXP -> string .)
    t_char          reduce using rule 118 (EXP -> string .)
    t_int           reduce using rule 118 (EXP -> string .)
    t_double        reduce using rule 118 (EXP -> string .)
    t_float         reduce using rule 118 (EXP -> string .)
    t_default       reduce using rule 118 (EXP -> string .)
    t_case          reduce using rule 118 (EXP -> string .)


state 57

    (119) EXP -> entero .

    mas             reduce using rule 119 (EXP -> entero .)
    menos           reduce using rule 119 (EXP -> entero .)
    por             reduce using rule 119 (EXP -> entero .)
    division        reduce using rule 119 (EXP -> entero .)
    modulo          reduce using rule 119 (EXP -> entero .)
    mayor           reduce using rule 119 (EXP -> entero .)
    mayori          reduce using rule 119 (EXP -> entero .)
    menor           reduce using rule 119 (EXP -> entero .)
    menori          reduce using rule 119 (EXP -> entero .)
    igual           reduce using rule 119 (EXP -> entero .)
    diferente       reduce using rule 119 (EXP -> entero .)
    and             reduce using rule 119 (EXP -> entero .)
    or              reduce using rule 119 (EXP -> entero .)
    shiftizq        reduce using rule 119 (EXP -> entero .)
    shiftder        reduce using rule 119 (EXP -> entero .)
    andb            reduce using rule 119 (EXP -> entero .)
    xorb            reduce using rule 119 (EXP -> entero .)
    orb             reduce using rule 119 (EXP -> entero .)
    condicional     reduce using rule 119 (EXP -> entero .)
    incremento      reduce using rule 119 (EXP -> entero .)
    decremento      reduce using rule 119 (EXP -> entero .)
    pyc             reduce using rule 119 (EXP -> entero .)
    coma            reduce using rule 119 (EXP -> entero .)
    cor2            reduce using rule 119 (EXP -> entero .)
    par2            reduce using rule 119 (EXP -> entero .)
    llav2           reduce using rule 119 (EXP -> entero .)
    bipunto         reduce using rule 119 (EXP -> entero .)
    t_struct        reduce using rule 119 (EXP -> entero .)
    t_if            reduce using rule 119 (EXP -> entero .)
    iden            reduce using rule 119 (EXP -> entero .)
    t_break         reduce using rule 119 (EXP -> entero .)
    t_continue      reduce using rule 119 (EXP -> entero .)
    t_switch        reduce using rule 119 (EXP -> entero .)
    t_do            reduce using rule 119 (EXP -> entero .)
    t_while         reduce using rule 119 (EXP -> entero .)
    t_return        reduce using rule 119 (EXP -> entero .)
    t_goto          reduce using rule 119 (EXP -> entero .)
    t_for           reduce using rule 119 (EXP -> entero .)
    t_char          reduce using rule 119 (EXP -> entero .)
    t_int           reduce using rule 119 (EXP -> entero .)
    t_double        reduce using rule 119 (EXP -> entero .)
    t_float         reduce using rule 119 (EXP -> entero .)
    t_default       reduce using rule 119 (EXP -> entero .)
    t_case          reduce using rule 119 (EXP -> entero .)


state 58

    (120) EXP -> decimal .

    mas             reduce using rule 120 (EXP -> decimal .)
    menos           reduce using rule 120 (EXP -> decimal .)
    por             reduce using rule 120 (EXP -> decimal .)
    division        reduce using rule 120 (EXP -> decimal .)
    modulo          reduce using rule 120 (EXP -> decimal .)
    mayor           reduce using rule 120 (EXP -> decimal .)
    mayori          reduce using rule 120 (EXP -> decimal .)
    menor           reduce using rule 120 (EXP -> decimal .)
    menori          reduce using rule 120 (EXP -> decimal .)
    igual           reduce using rule 120 (EXP -> decimal .)
    diferente       reduce using rule 120 (EXP -> decimal .)
    and             reduce using rule 120 (EXP -> decimal .)
    or              reduce using rule 120 (EXP -> decimal .)
    shiftizq        reduce using rule 120 (EXP -> decimal .)
    shiftder        reduce using rule 120 (EXP -> decimal .)
    andb            reduce using rule 120 (EXP -> decimal .)
    xorb            reduce using rule 120 (EXP -> decimal .)
    orb             reduce using rule 120 (EXP -> decimal .)
    condicional     reduce using rule 120 (EXP -> decimal .)
    incremento      reduce using rule 120 (EXP -> decimal .)
    decremento      reduce using rule 120 (EXP -> decimal .)
    pyc             reduce using rule 120 (EXP -> decimal .)
    coma            reduce using rule 120 (EXP -> decimal .)
    cor2            reduce using rule 120 (EXP -> decimal .)
    par2            reduce using rule 120 (EXP -> decimal .)
    llav2           reduce using rule 120 (EXP -> decimal .)
    bipunto         reduce using rule 120 (EXP -> decimal .)
    t_struct        reduce using rule 120 (EXP -> decimal .)
    t_if            reduce using rule 120 (EXP -> decimal .)
    iden            reduce using rule 120 (EXP -> decimal .)
    t_break         reduce using rule 120 (EXP -> decimal .)
    t_continue      reduce using rule 120 (EXP -> decimal .)
    t_switch        reduce using rule 120 (EXP -> decimal .)
    t_do            reduce using rule 120 (EXP -> decimal .)
    t_while         reduce using rule 120 (EXP -> decimal .)
    t_return        reduce using rule 120 (EXP -> decimal .)
    t_goto          reduce using rule 120 (EXP -> decimal .)
    t_for           reduce using rule 120 (EXP -> decimal .)
    t_char          reduce using rule 120 (EXP -> decimal .)
    t_int           reduce using rule 120 (EXP -> decimal .)
    t_double        reduce using rule 120 (EXP -> decimal .)
    t_float         reduce using rule 120 (EXP -> decimal .)
    t_default       reduce using rule 120 (EXP -> decimal .)
    t_case          reduce using rule 120 (EXP -> decimal .)


state 59

    (121) EXP -> char .

    mas             reduce using rule 121 (EXP -> char .)
    menos           reduce using rule 121 (EXP -> char .)
    por             reduce using rule 121 (EXP -> char .)
    division        reduce using rule 121 (EXP -> char .)
    modulo          reduce using rule 121 (EXP -> char .)
    mayor           reduce using rule 121 (EXP -> char .)
    mayori          reduce using rule 121 (EXP -> char .)
    menor           reduce using rule 121 (EXP -> char .)
    menori          reduce using rule 121 (EXP -> char .)
    igual           reduce using rule 121 (EXP -> char .)
    diferente       reduce using rule 121 (EXP -> char .)
    and             reduce using rule 121 (EXP -> char .)
    or              reduce using rule 121 (EXP -> char .)
    shiftizq        reduce using rule 121 (EXP -> char .)
    shiftder        reduce using rule 121 (EXP -> char .)
    andb            reduce using rule 121 (EXP -> char .)
    xorb            reduce using rule 121 (EXP -> char .)
    orb             reduce using rule 121 (EXP -> char .)
    condicional     reduce using rule 121 (EXP -> char .)
    incremento      reduce using rule 121 (EXP -> char .)
    decremento      reduce using rule 121 (EXP -> char .)
    pyc             reduce using rule 121 (EXP -> char .)
    coma            reduce using rule 121 (EXP -> char .)
    cor2            reduce using rule 121 (EXP -> char .)
    par2            reduce using rule 121 (EXP -> char .)
    llav2           reduce using rule 121 (EXP -> char .)
    bipunto         reduce using rule 121 (EXP -> char .)
    t_struct        reduce using rule 121 (EXP -> char .)
    t_if            reduce using rule 121 (EXP -> char .)
    iden            reduce using rule 121 (EXP -> char .)
    t_break         reduce using rule 121 (EXP -> char .)
    t_continue      reduce using rule 121 (EXP -> char .)
    t_switch        reduce using rule 121 (EXP -> char .)
    t_do            reduce using rule 121 (EXP -> char .)
    t_while         reduce using rule 121 (EXP -> char .)
    t_return        reduce using rule 121 (EXP -> char .)
    t_goto          reduce using rule 121 (EXP -> char .)
    t_for           reduce using rule 121 (EXP -> char .)
    t_char          reduce using rule 121 (EXP -> char .)
    t_int           reduce using rule 121 (EXP -> char .)
    t_double        reduce using rule 121 (EXP -> char .)
    t_float         reduce using rule 121 (EXP -> char .)
    t_default       reduce using rule 121 (EXP -> char .)
    t_case          reduce using rule 121 (EXP -> char .)


state 60

    (123) EXP -> par1 . EXP par2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 113
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 61

    (133) EXP -> andb . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 114
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 62

    (131) EXP -> not . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 115
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 63

    (132) EXP -> notb . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 116
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 64

    (134) EXP -> incremento . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 117
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 65

    (135) EXP -> decremento . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 118
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 66

    (139) EXP -> llav1 . ELEMENTS llav2
    (140) ELEMENTS -> . ELEMENTS coma EXP
    (141) ELEMENTS -> . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    ELEMENTS                       shift and go to state 119
    EXP                            shift and go to state 120
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 67

    (142) EXP -> ACCESO_STRUCT .

    mas             reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    menos           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    por             reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    division        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    modulo          reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    mayor           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    mayori          reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    menor           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    menori          reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    igual           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    diferente       reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    and             reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    or              reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    shiftizq        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    shiftder        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    andb            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    xorb            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    orb             reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    condicional     reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    incremento      reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    decremento      reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    pyc             reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    coma            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    cor2            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    par2            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    llav2           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    bipunto         reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_struct        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_if            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    iden            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_break         reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_continue      reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_switch        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_do            reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_while         reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_return        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_goto          reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_for           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_char          reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_int           reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_double        reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_float         reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_default       reduce using rule 142 (EXP -> ACCESO_STRUCT .)
    t_case          reduce using rule 142 (EXP -> ACCESO_STRUCT .)


state 68

    (143) EXP -> LLAMADA .

    mas             reduce using rule 143 (EXP -> LLAMADA .)
    menos           reduce using rule 143 (EXP -> LLAMADA .)
    por             reduce using rule 143 (EXP -> LLAMADA .)
    division        reduce using rule 143 (EXP -> LLAMADA .)
    modulo          reduce using rule 143 (EXP -> LLAMADA .)
    mayor           reduce using rule 143 (EXP -> LLAMADA .)
    mayori          reduce using rule 143 (EXP -> LLAMADA .)
    menor           reduce using rule 143 (EXP -> LLAMADA .)
    menori          reduce using rule 143 (EXP -> LLAMADA .)
    igual           reduce using rule 143 (EXP -> LLAMADA .)
    diferente       reduce using rule 143 (EXP -> LLAMADA .)
    and             reduce using rule 143 (EXP -> LLAMADA .)
    or              reduce using rule 143 (EXP -> LLAMADA .)
    shiftizq        reduce using rule 143 (EXP -> LLAMADA .)
    shiftder        reduce using rule 143 (EXP -> LLAMADA .)
    andb            reduce using rule 143 (EXP -> LLAMADA .)
    xorb            reduce using rule 143 (EXP -> LLAMADA .)
    orb             reduce using rule 143 (EXP -> LLAMADA .)
    condicional     reduce using rule 143 (EXP -> LLAMADA .)
    incremento      reduce using rule 143 (EXP -> LLAMADA .)
    decremento      reduce using rule 143 (EXP -> LLAMADA .)
    pyc             reduce using rule 143 (EXP -> LLAMADA .)
    coma            reduce using rule 143 (EXP -> LLAMADA .)
    cor2            reduce using rule 143 (EXP -> LLAMADA .)
    par2            reduce using rule 143 (EXP -> LLAMADA .)
    llav2           reduce using rule 143 (EXP -> LLAMADA .)
    bipunto         reduce using rule 143 (EXP -> LLAMADA .)
    t_struct        reduce using rule 143 (EXP -> LLAMADA .)
    t_if            reduce using rule 143 (EXP -> LLAMADA .)
    iden            reduce using rule 143 (EXP -> LLAMADA .)
    t_break         reduce using rule 143 (EXP -> LLAMADA .)
    t_continue      reduce using rule 143 (EXP -> LLAMADA .)
    t_switch        reduce using rule 143 (EXP -> LLAMADA .)
    t_do            reduce using rule 143 (EXP -> LLAMADA .)
    t_while         reduce using rule 143 (EXP -> LLAMADA .)
    t_return        reduce using rule 143 (EXP -> LLAMADA .)
    t_goto          reduce using rule 143 (EXP -> LLAMADA .)
    t_for           reduce using rule 143 (EXP -> LLAMADA .)
    t_char          reduce using rule 143 (EXP -> LLAMADA .)
    t_int           reduce using rule 143 (EXP -> LLAMADA .)
    t_double        reduce using rule 143 (EXP -> LLAMADA .)
    t_float         reduce using rule 143 (EXP -> LLAMADA .)
    t_default       reduce using rule 143 (EXP -> LLAMADA .)
    t_case          reduce using rule 143 (EXP -> LLAMADA .)


state 69

    (144) EXP -> t_sizeof . par1 EXP par2

    par1            shift and go to state 121


state 70

    (24) ASIGNACION -> iden LACCESO OP . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 71

    (17) LACCESO -> LACCESO cor1 . EXP cor2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 123
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 72

    (18) LACCESO -> cor1 EXP . cor2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    cor2            shift and go to state 124
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 73

    (54) Funcion -> t_void iden par1 . Parametros par2 BLOQUE
    (55) Parametros -> .
    (56) Parametros -> . Parametros coma Parametro
    (57) Parametros -> . Parametro
    (101) Parametro -> . Tipos iden
    (102) Parametro -> . Tipos iden LACCESO
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float

    par2            reduce using rule 55 (Parametros -> .)
    coma            reduce using rule 55 (Parametros -> .)
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    Parametros                     shift and go to state 125
    Parametro                      shift and go to state 81
    Tipos                          shift and go to state 79

state 74

    (25) ASIGNACION -> ACCESO_STRUCT OP EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 25 (ASIGNACION -> ACCESO_STRUCT OP EXP .)
    coma            reduce using rule 25 (ASIGNACION -> ACCESO_STRUCT OP EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 75

    (48) ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .

    andbasigna      reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    divasigna       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    masasigna       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menosasigna     reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    modasigna       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    orbasigna       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    porasigna       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftizqasigna  reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftderasigna  reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    xorbasinga      reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    asigna          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    pyc             reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    coma            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    mas             reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menos           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    por             reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    division        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    modulo          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    mayor           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    mayori          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menor           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    menori          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    igual           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    diferente       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    and             reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    or              reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftizq        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    shiftder        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    andb            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    xorb            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    orb             reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    condicional     reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    incremento      reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    decremento      reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    cor2            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    par2            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    llav2           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    bipunto         reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_struct        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_if            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    iden            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_break         reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_continue      reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_switch        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_do            reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_while         reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_return        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_goto          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_for           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_char          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_int           reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_double        reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_float         reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_default       reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)
    t_case          reduce using rule 48 (ACCESO_STRUCT -> ItemsStruct2 punto ItemsStruct2 .)


state 76

    (46) ItemsStruct2 -> iden .
    (47) ItemsStruct2 -> iden . LACCESO
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    andbasigna      reduce using rule 46 (ItemsStruct2 -> iden .)
    divasigna       reduce using rule 46 (ItemsStruct2 -> iden .)
    masasigna       reduce using rule 46 (ItemsStruct2 -> iden .)
    menosasigna     reduce using rule 46 (ItemsStruct2 -> iden .)
    modasigna       reduce using rule 46 (ItemsStruct2 -> iden .)
    orbasigna       reduce using rule 46 (ItemsStruct2 -> iden .)
    porasigna       reduce using rule 46 (ItemsStruct2 -> iden .)
    shiftizqasigna  reduce using rule 46 (ItemsStruct2 -> iden .)
    shiftderasigna  reduce using rule 46 (ItemsStruct2 -> iden .)
    xorbasinga      reduce using rule 46 (ItemsStruct2 -> iden .)
    asigna          reduce using rule 46 (ItemsStruct2 -> iden .)
    pyc             reduce using rule 46 (ItemsStruct2 -> iden .)
    coma            reduce using rule 46 (ItemsStruct2 -> iden .)
    mas             reduce using rule 46 (ItemsStruct2 -> iden .)
    menos           reduce using rule 46 (ItemsStruct2 -> iden .)
    por             reduce using rule 46 (ItemsStruct2 -> iden .)
    division        reduce using rule 46 (ItemsStruct2 -> iden .)
    modulo          reduce using rule 46 (ItemsStruct2 -> iden .)
    mayor           reduce using rule 46 (ItemsStruct2 -> iden .)
    mayori          reduce using rule 46 (ItemsStruct2 -> iden .)
    menor           reduce using rule 46 (ItemsStruct2 -> iden .)
    menori          reduce using rule 46 (ItemsStruct2 -> iden .)
    igual           reduce using rule 46 (ItemsStruct2 -> iden .)
    diferente       reduce using rule 46 (ItemsStruct2 -> iden .)
    and             reduce using rule 46 (ItemsStruct2 -> iden .)
    or              reduce using rule 46 (ItemsStruct2 -> iden .)
    shiftizq        reduce using rule 46 (ItemsStruct2 -> iden .)
    shiftder        reduce using rule 46 (ItemsStruct2 -> iden .)
    andb            reduce using rule 46 (ItemsStruct2 -> iden .)
    xorb            reduce using rule 46 (ItemsStruct2 -> iden .)
    orb             reduce using rule 46 (ItemsStruct2 -> iden .)
    condicional     reduce using rule 46 (ItemsStruct2 -> iden .)
    incremento      reduce using rule 46 (ItemsStruct2 -> iden .)
    decremento      reduce using rule 46 (ItemsStruct2 -> iden .)
    cor2            reduce using rule 46 (ItemsStruct2 -> iden .)
    par2            reduce using rule 46 (ItemsStruct2 -> iden .)
    llav2           reduce using rule 46 (ItemsStruct2 -> iden .)
    bipunto         reduce using rule 46 (ItemsStruct2 -> iden .)
    t_struct        reduce using rule 46 (ItemsStruct2 -> iden .)
    t_if            reduce using rule 46 (ItemsStruct2 -> iden .)
    iden            reduce using rule 46 (ItemsStruct2 -> iden .)
    t_break         reduce using rule 46 (ItemsStruct2 -> iden .)
    t_continue      reduce using rule 46 (ItemsStruct2 -> iden .)
    t_switch        reduce using rule 46 (ItemsStruct2 -> iden .)
    t_do            reduce using rule 46 (ItemsStruct2 -> iden .)
    t_while         reduce using rule 46 (ItemsStruct2 -> iden .)
    t_return        reduce using rule 46 (ItemsStruct2 -> iden .)
    t_goto          reduce using rule 46 (ItemsStruct2 -> iden .)
    t_for           reduce using rule 46 (ItemsStruct2 -> iden .)
    t_char          reduce using rule 46 (ItemsStruct2 -> iden .)
    t_int           reduce using rule 46 (ItemsStruct2 -> iden .)
    t_double        reduce using rule 46 (ItemsStruct2 -> iden .)
    t_float         reduce using rule 46 (ItemsStruct2 -> iden .)
    t_default       reduce using rule 46 (ItemsStruct2 -> iden .)
    t_case          reduce using rule 46 (ItemsStruct2 -> iden .)
    cor1            shift and go to state 40

    LACCESO                        shift and go to state 89

state 77

    (10) L_Dec -> L_Dec coma Dec .

    pyc             reduce using rule 10 (L_Dec -> L_Dec coma Dec .)
    coma            reduce using rule 10 (L_Dec -> L_Dec coma Dec .)


state 78

    (12) Dec -> iden .
    (13) Dec -> iden . asigna EXP
    (14) Dec -> iden . cor1 cor2 asigna EXP
    (15) Dec -> iden . LACCESO
    (16) Dec -> iden . LACCESO asigna EXP
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 12 (Dec -> iden .)
    coma            reduce using rule 12 (Dec -> iden .)
    asigna          shift and go to state 48
    cor1            shift and go to state 49

    LACCESO                        shift and go to state 50

state 79

    (101) Parametro -> Tipos . iden
    (102) Parametro -> Tipos . iden LACCESO

    iden            shift and go to state 126


state 80

    (53) Funcion -> Tipos iden par1 Parametros . par2 BLOQUE
    (56) Parametros -> Parametros . coma Parametro

    par2            shift and go to state 127
    coma            shift and go to state 128


state 81

    (57) Parametros -> Parametro .

    par2            reduce using rule 57 (Parametros -> Parametro .)
    coma            reduce using rule 57 (Parametros -> Parametro .)


state 82

    (13) Dec -> iden asigna EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 13 (Dec -> iden asigna EXP .)
    coma            reduce using rule 13 (Dec -> iden asigna EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 83

    (14) Dec -> iden cor1 cor2 . asigna EXP

    asigna          shift and go to state 129


state 84

    (16) Dec -> iden LACCESO asigna . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 130
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 85

    (38) STRUCT -> t_struct iden llav1 ATRIBUTOS . llav2
    (39) ATRIBUTOS -> ATRIBUTOS . ATRIBUTO
    (41) ATRIBUTO -> . Tipos LItemsStruct pyc
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float

    llav2           shift and go to state 131
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    ATRIBUTO                       shift and go to state 132
    Tipos                          shift and go to state 87

state 86

    (40) ATRIBUTOS -> ATRIBUTO .

    llav2           reduce using rule 40 (ATRIBUTOS -> ATRIBUTO .)
    t_char          reduce using rule 40 (ATRIBUTOS -> ATRIBUTO .)
    t_int           reduce using rule 40 (ATRIBUTOS -> ATRIBUTO .)
    t_double        reduce using rule 40 (ATRIBUTOS -> ATRIBUTO .)
    t_float         reduce using rule 40 (ATRIBUTOS -> ATRIBUTO .)


state 87

    (41) ATRIBUTO -> Tipos . LItemsStruct pyc
    (42) LItemsStruct -> . LItemsStruct coma ItemsStruct
    (43) LItemsStruct -> . ItemsStruct
    (44) ItemsStruct -> . iden
    (45) ItemsStruct -> . iden LACCESO

    iden            shift and go to state 135

    LItemsStruct                   shift and go to state 133
    ItemsStruct                    shift and go to state 134

state 88

    (103) LLAMADA -> iden par1 . ELEMENTS par2
    (104) LLAMADA -> iden par1 . par2
    (140) ELEMENTS -> . ELEMENTS coma EXP
    (141) ELEMENTS -> . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    par2            shift and go to state 137
    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    ELEMENTS                       shift and go to state 136
    EXP                            shift and go to state 120
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 89

    (47) ItemsStruct2 -> iden LACCESO .
    (17) LACCESO -> LACCESO . cor1 EXP cor2

    punto           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    andbasigna      reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    divasigna       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    masasigna       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    menosasigna     reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    modasigna       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    orbasigna       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    porasigna       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    shiftizqasigna  reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    shiftderasigna  reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    xorbasinga      reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    asigna          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    pyc             reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    coma            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    mas             reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    menos           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    por             reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    division        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    modulo          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    mayor           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    mayori          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    menor           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    menori          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    igual           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    diferente       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    and             reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    or              reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    shiftizq        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    shiftder        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    andb            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    xorb            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    orb             reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    condicional     reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    incremento      reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    decremento      reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    cor2            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    par2            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    llav2           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    bipunto         reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_struct        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_if            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    iden            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_break         reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_continue      reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_switch        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_do            reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_while         reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_return        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_goto          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_for           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_char          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_int           reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_double        reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_float         reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_default       reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    t_case          reduce using rule 47 (ItemsStruct2 -> iden LACCESO .)
    cor1            shift and go to state 71


state 90

    (105) EXP -> EXP mas . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 138
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 91

    (106) EXP -> EXP menos . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 139
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 92

    (107) EXP -> EXP por . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 140
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 93

    (108) EXP -> EXP division . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 141
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 94

    (109) EXP -> EXP modulo . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 142
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 95

    (110) EXP -> EXP mayor . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 143
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 96

    (111) EXP -> EXP mayori . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 144
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 97

    (112) EXP -> EXP menor . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 145
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 98

    (113) EXP -> EXP menori . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 146
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 99

    (114) EXP -> EXP igual . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 147
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 100

    (115) EXP -> EXP diferente . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 148
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 101

    (116) EXP -> EXP and . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 149
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 102

    (117) EXP -> EXP or . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 150
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 103

    (124) EXP -> EXP shiftizq . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 151
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 104

    (125) EXP -> EXP shiftder . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 152
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 105

    (126) EXP -> EXP andb . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 153
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 106

    (127) EXP -> EXP xorb . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 154
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 107

    (128) EXP -> EXP orb . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 155
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 108

    (136) EXP -> EXP condicional . EXP bipunto EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 156
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 109

    (137) EXP -> EXP incremento .

    mas             reduce using rule 137 (EXP -> EXP incremento .)
    menos           reduce using rule 137 (EXP -> EXP incremento .)
    por             reduce using rule 137 (EXP -> EXP incremento .)
    division        reduce using rule 137 (EXP -> EXP incremento .)
    modulo          reduce using rule 137 (EXP -> EXP incremento .)
    mayor           reduce using rule 137 (EXP -> EXP incremento .)
    mayori          reduce using rule 137 (EXP -> EXP incremento .)
    menor           reduce using rule 137 (EXP -> EXP incremento .)
    menori          reduce using rule 137 (EXP -> EXP incremento .)
    igual           reduce using rule 137 (EXP -> EXP incremento .)
    diferente       reduce using rule 137 (EXP -> EXP incremento .)
    and             reduce using rule 137 (EXP -> EXP incremento .)
    or              reduce using rule 137 (EXP -> EXP incremento .)
    shiftizq        reduce using rule 137 (EXP -> EXP incremento .)
    shiftder        reduce using rule 137 (EXP -> EXP incremento .)
    andb            reduce using rule 137 (EXP -> EXP incremento .)
    xorb            reduce using rule 137 (EXP -> EXP incremento .)
    orb             reduce using rule 137 (EXP -> EXP incremento .)
    condicional     reduce using rule 137 (EXP -> EXP incremento .)
    incremento      reduce using rule 137 (EXP -> EXP incremento .)
    decremento      reduce using rule 137 (EXP -> EXP incremento .)
    pyc             reduce using rule 137 (EXP -> EXP incremento .)
    coma            reduce using rule 137 (EXP -> EXP incremento .)
    cor2            reduce using rule 137 (EXP -> EXP incremento .)
    par2            reduce using rule 137 (EXP -> EXP incremento .)
    llav2           reduce using rule 137 (EXP -> EXP incremento .)
    bipunto         reduce using rule 137 (EXP -> EXP incremento .)
    t_struct        reduce using rule 137 (EXP -> EXP incremento .)
    t_if            reduce using rule 137 (EXP -> EXP incremento .)
    iden            reduce using rule 137 (EXP -> EXP incremento .)
    t_break         reduce using rule 137 (EXP -> EXP incremento .)
    t_continue      reduce using rule 137 (EXP -> EXP incremento .)
    t_switch        reduce using rule 137 (EXP -> EXP incremento .)
    t_do            reduce using rule 137 (EXP -> EXP incremento .)
    t_while         reduce using rule 137 (EXP -> EXP incremento .)
    t_return        reduce using rule 137 (EXP -> EXP incremento .)
    t_goto          reduce using rule 137 (EXP -> EXP incremento .)
    t_for           reduce using rule 137 (EXP -> EXP incremento .)
    t_char          reduce using rule 137 (EXP -> EXP incremento .)
    t_int           reduce using rule 137 (EXP -> EXP incremento .)
    t_double        reduce using rule 137 (EXP -> EXP incremento .)
    t_float         reduce using rule 137 (EXP -> EXP incremento .)
    t_default       reduce using rule 137 (EXP -> EXP incremento .)
    t_case          reduce using rule 137 (EXP -> EXP incremento .)


state 110

    (138) EXP -> EXP decremento .

    mas             reduce using rule 138 (EXP -> EXP decremento .)
    menos           reduce using rule 138 (EXP -> EXP decremento .)
    por             reduce using rule 138 (EXP -> EXP decremento .)
    division        reduce using rule 138 (EXP -> EXP decremento .)
    modulo          reduce using rule 138 (EXP -> EXP decremento .)
    mayor           reduce using rule 138 (EXP -> EXP decremento .)
    mayori          reduce using rule 138 (EXP -> EXP decremento .)
    menor           reduce using rule 138 (EXP -> EXP decremento .)
    menori          reduce using rule 138 (EXP -> EXP decremento .)
    igual           reduce using rule 138 (EXP -> EXP decremento .)
    diferente       reduce using rule 138 (EXP -> EXP decremento .)
    and             reduce using rule 138 (EXP -> EXP decremento .)
    or              reduce using rule 138 (EXP -> EXP decremento .)
    shiftizq        reduce using rule 138 (EXP -> EXP decremento .)
    shiftder        reduce using rule 138 (EXP -> EXP decremento .)
    andb            reduce using rule 138 (EXP -> EXP decremento .)
    xorb            reduce using rule 138 (EXP -> EXP decremento .)
    orb             reduce using rule 138 (EXP -> EXP decremento .)
    condicional     reduce using rule 138 (EXP -> EXP decremento .)
    incremento      reduce using rule 138 (EXP -> EXP decremento .)
    decremento      reduce using rule 138 (EXP -> EXP decremento .)
    pyc             reduce using rule 138 (EXP -> EXP decremento .)
    coma            reduce using rule 138 (EXP -> EXP decremento .)
    cor2            reduce using rule 138 (EXP -> EXP decremento .)
    par2            reduce using rule 138 (EXP -> EXP decremento .)
    llav2           reduce using rule 138 (EXP -> EXP decremento .)
    bipunto         reduce using rule 138 (EXP -> EXP decremento .)
    t_struct        reduce using rule 138 (EXP -> EXP decremento .)
    t_if            reduce using rule 138 (EXP -> EXP decremento .)
    iden            reduce using rule 138 (EXP -> EXP decremento .)
    t_break         reduce using rule 138 (EXP -> EXP decremento .)
    t_continue      reduce using rule 138 (EXP -> EXP decremento .)
    t_switch        reduce using rule 138 (EXP -> EXP decremento .)
    t_do            reduce using rule 138 (EXP -> EXP decremento .)
    t_while         reduce using rule 138 (EXP -> EXP decremento .)
    t_return        reduce using rule 138 (EXP -> EXP decremento .)
    t_goto          reduce using rule 138 (EXP -> EXP decremento .)
    t_for           reduce using rule 138 (EXP -> EXP decremento .)
    t_char          reduce using rule 138 (EXP -> EXP decremento .)
    t_int           reduce using rule 138 (EXP -> EXP decremento .)
    t_double        reduce using rule 138 (EXP -> EXP decremento .)
    t_float         reduce using rule 138 (EXP -> EXP decremento .)
    t_default       reduce using rule 138 (EXP -> EXP decremento .)
    t_case          reduce using rule 138 (EXP -> EXP decremento .)


state 111

    (129) EXP -> mas EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 129 (EXP -> mas EXP .)
    menos           reduce using rule 129 (EXP -> mas EXP .)
    mayor           reduce using rule 129 (EXP -> mas EXP .)
    mayori          reduce using rule 129 (EXP -> mas EXP .)
    menor           reduce using rule 129 (EXP -> mas EXP .)
    menori          reduce using rule 129 (EXP -> mas EXP .)
    igual           reduce using rule 129 (EXP -> mas EXP .)
    diferente       reduce using rule 129 (EXP -> mas EXP .)
    and             reduce using rule 129 (EXP -> mas EXP .)
    or              reduce using rule 129 (EXP -> mas EXP .)
    shiftizq        reduce using rule 129 (EXP -> mas EXP .)
    shiftder        reduce using rule 129 (EXP -> mas EXP .)
    andb            reduce using rule 129 (EXP -> mas EXP .)
    xorb            reduce using rule 129 (EXP -> mas EXP .)
    orb             reduce using rule 129 (EXP -> mas EXP .)
    condicional     reduce using rule 129 (EXP -> mas EXP .)
    pyc             reduce using rule 129 (EXP -> mas EXP .)
    coma            reduce using rule 129 (EXP -> mas EXP .)
    cor2            reduce using rule 129 (EXP -> mas EXP .)
    par2            reduce using rule 129 (EXP -> mas EXP .)
    llav2           reduce using rule 129 (EXP -> mas EXP .)
    bipunto         reduce using rule 129 (EXP -> mas EXP .)
    t_struct        reduce using rule 129 (EXP -> mas EXP .)
    t_if            reduce using rule 129 (EXP -> mas EXP .)
    iden            reduce using rule 129 (EXP -> mas EXP .)
    t_break         reduce using rule 129 (EXP -> mas EXP .)
    t_continue      reduce using rule 129 (EXP -> mas EXP .)
    t_switch        reduce using rule 129 (EXP -> mas EXP .)
    t_do            reduce using rule 129 (EXP -> mas EXP .)
    t_while         reduce using rule 129 (EXP -> mas EXP .)
    t_return        reduce using rule 129 (EXP -> mas EXP .)
    t_goto          reduce using rule 129 (EXP -> mas EXP .)
    t_for           reduce using rule 129 (EXP -> mas EXP .)
    t_char          reduce using rule 129 (EXP -> mas EXP .)
    t_int           reduce using rule 129 (EXP -> mas EXP .)
    t_double        reduce using rule 129 (EXP -> mas EXP .)
    t_float         reduce using rule 129 (EXP -> mas EXP .)
    t_default       reduce using rule 129 (EXP -> mas EXP .)
    t_case          reduce using rule 129 (EXP -> mas EXP .)
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! por             [ reduce using rule 129 (EXP -> mas EXP .) ]
  ! division        [ reduce using rule 129 (EXP -> mas EXP .) ]
  ! modulo          [ reduce using rule 129 (EXP -> mas EXP .) ]
  ! incremento      [ reduce using rule 129 (EXP -> mas EXP .) ]
  ! decremento      [ reduce using rule 129 (EXP -> mas EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 112

    (130) EXP -> menos EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 130 (EXP -> menos EXP .)
    menos           reduce using rule 130 (EXP -> menos EXP .)
    mayor           reduce using rule 130 (EXP -> menos EXP .)
    mayori          reduce using rule 130 (EXP -> menos EXP .)
    menor           reduce using rule 130 (EXP -> menos EXP .)
    menori          reduce using rule 130 (EXP -> menos EXP .)
    igual           reduce using rule 130 (EXP -> menos EXP .)
    diferente       reduce using rule 130 (EXP -> menos EXP .)
    and             reduce using rule 130 (EXP -> menos EXP .)
    or              reduce using rule 130 (EXP -> menos EXP .)
    shiftizq        reduce using rule 130 (EXP -> menos EXP .)
    shiftder        reduce using rule 130 (EXP -> menos EXP .)
    andb            reduce using rule 130 (EXP -> menos EXP .)
    xorb            reduce using rule 130 (EXP -> menos EXP .)
    orb             reduce using rule 130 (EXP -> menos EXP .)
    condicional     reduce using rule 130 (EXP -> menos EXP .)
    pyc             reduce using rule 130 (EXP -> menos EXP .)
    coma            reduce using rule 130 (EXP -> menos EXP .)
    cor2            reduce using rule 130 (EXP -> menos EXP .)
    par2            reduce using rule 130 (EXP -> menos EXP .)
    llav2           reduce using rule 130 (EXP -> menos EXP .)
    bipunto         reduce using rule 130 (EXP -> menos EXP .)
    t_struct        reduce using rule 130 (EXP -> menos EXP .)
    t_if            reduce using rule 130 (EXP -> menos EXP .)
    iden            reduce using rule 130 (EXP -> menos EXP .)
    t_break         reduce using rule 130 (EXP -> menos EXP .)
    t_continue      reduce using rule 130 (EXP -> menos EXP .)
    t_switch        reduce using rule 130 (EXP -> menos EXP .)
    t_do            reduce using rule 130 (EXP -> menos EXP .)
    t_while         reduce using rule 130 (EXP -> menos EXP .)
    t_return        reduce using rule 130 (EXP -> menos EXP .)
    t_goto          reduce using rule 130 (EXP -> menos EXP .)
    t_for           reduce using rule 130 (EXP -> menos EXP .)
    t_char          reduce using rule 130 (EXP -> menos EXP .)
    t_int           reduce using rule 130 (EXP -> menos EXP .)
    t_double        reduce using rule 130 (EXP -> menos EXP .)
    t_float         reduce using rule 130 (EXP -> menos EXP .)
    t_default       reduce using rule 130 (EXP -> menos EXP .)
    t_case          reduce using rule 130 (EXP -> menos EXP .)
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! por             [ reduce using rule 130 (EXP -> menos EXP .) ]
  ! division        [ reduce using rule 130 (EXP -> menos EXP .) ]
  ! modulo          [ reduce using rule 130 (EXP -> menos EXP .) ]
  ! incremento      [ reduce using rule 130 (EXP -> menos EXP .) ]
  ! decremento      [ reduce using rule 130 (EXP -> menos EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 113

    (123) EXP -> par1 EXP . par2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 157
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 114

    (133) EXP -> andb EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    and             reduce using rule 133 (EXP -> andb EXP .)
    or              reduce using rule 133 (EXP -> andb EXP .)
    andb            reduce using rule 133 (EXP -> andb EXP .)
    xorb            reduce using rule 133 (EXP -> andb EXP .)
    orb             reduce using rule 133 (EXP -> andb EXP .)
    condicional     reduce using rule 133 (EXP -> andb EXP .)
    pyc             reduce using rule 133 (EXP -> andb EXP .)
    coma            reduce using rule 133 (EXP -> andb EXP .)
    cor2            reduce using rule 133 (EXP -> andb EXP .)
    par2            reduce using rule 133 (EXP -> andb EXP .)
    llav2           reduce using rule 133 (EXP -> andb EXP .)
    bipunto         reduce using rule 133 (EXP -> andb EXP .)
    t_struct        reduce using rule 133 (EXP -> andb EXP .)
    t_if            reduce using rule 133 (EXP -> andb EXP .)
    iden            reduce using rule 133 (EXP -> andb EXP .)
    t_break         reduce using rule 133 (EXP -> andb EXP .)
    t_continue      reduce using rule 133 (EXP -> andb EXP .)
    t_switch        reduce using rule 133 (EXP -> andb EXP .)
    t_do            reduce using rule 133 (EXP -> andb EXP .)
    t_while         reduce using rule 133 (EXP -> andb EXP .)
    t_return        reduce using rule 133 (EXP -> andb EXP .)
    t_goto          reduce using rule 133 (EXP -> andb EXP .)
    t_for           reduce using rule 133 (EXP -> andb EXP .)
    t_char          reduce using rule 133 (EXP -> andb EXP .)
    t_int           reduce using rule 133 (EXP -> andb EXP .)
    t_double        reduce using rule 133 (EXP -> andb EXP .)
    t_float         reduce using rule 133 (EXP -> andb EXP .)
    t_default       reduce using rule 133 (EXP -> andb EXP .)
    t_case          reduce using rule 133 (EXP -> andb EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! menos           [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! por             [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! division        [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! modulo          [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! mayor           [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! mayori          [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! menor           [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! menori          [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! igual           [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! diferente       [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! shiftizq        [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! shiftder        [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! incremento      [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! decremento      [ reduce using rule 133 (EXP -> andb EXP .) ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 115

    (131) EXP -> not EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 131 (EXP -> not EXP .)
    menos           reduce using rule 131 (EXP -> not EXP .)
    por             reduce using rule 131 (EXP -> not EXP .)
    division        reduce using rule 131 (EXP -> not EXP .)
    modulo          reduce using rule 131 (EXP -> not EXP .)
    mayor           reduce using rule 131 (EXP -> not EXP .)
    mayori          reduce using rule 131 (EXP -> not EXP .)
    menor           reduce using rule 131 (EXP -> not EXP .)
    menori          reduce using rule 131 (EXP -> not EXP .)
    igual           reduce using rule 131 (EXP -> not EXP .)
    diferente       reduce using rule 131 (EXP -> not EXP .)
    and             reduce using rule 131 (EXP -> not EXP .)
    or              reduce using rule 131 (EXP -> not EXP .)
    shiftizq        reduce using rule 131 (EXP -> not EXP .)
    shiftder        reduce using rule 131 (EXP -> not EXP .)
    andb            reduce using rule 131 (EXP -> not EXP .)
    xorb            reduce using rule 131 (EXP -> not EXP .)
    orb             reduce using rule 131 (EXP -> not EXP .)
    condicional     reduce using rule 131 (EXP -> not EXP .)
    pyc             reduce using rule 131 (EXP -> not EXP .)
    coma            reduce using rule 131 (EXP -> not EXP .)
    cor2            reduce using rule 131 (EXP -> not EXP .)
    par2            reduce using rule 131 (EXP -> not EXP .)
    llav2           reduce using rule 131 (EXP -> not EXP .)
    bipunto         reduce using rule 131 (EXP -> not EXP .)
    t_struct        reduce using rule 131 (EXP -> not EXP .)
    t_if            reduce using rule 131 (EXP -> not EXP .)
    iden            reduce using rule 131 (EXP -> not EXP .)
    t_break         reduce using rule 131 (EXP -> not EXP .)
    t_continue      reduce using rule 131 (EXP -> not EXP .)
    t_switch        reduce using rule 131 (EXP -> not EXP .)
    t_do            reduce using rule 131 (EXP -> not EXP .)
    t_while         reduce using rule 131 (EXP -> not EXP .)
    t_return        reduce using rule 131 (EXP -> not EXP .)
    t_goto          reduce using rule 131 (EXP -> not EXP .)
    t_for           reduce using rule 131 (EXP -> not EXP .)
    t_char          reduce using rule 131 (EXP -> not EXP .)
    t_int           reduce using rule 131 (EXP -> not EXP .)
    t_double        reduce using rule 131 (EXP -> not EXP .)
    t_float         reduce using rule 131 (EXP -> not EXP .)
    t_default       reduce using rule 131 (EXP -> not EXP .)
    t_case          reduce using rule 131 (EXP -> not EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 131 (EXP -> not EXP .) ]
  ! decremento      [ reduce using rule 131 (EXP -> not EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 116

    (132) EXP -> notb EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 132 (EXP -> notb EXP .)
    menos           reduce using rule 132 (EXP -> notb EXP .)
    por             reduce using rule 132 (EXP -> notb EXP .)
    division        reduce using rule 132 (EXP -> notb EXP .)
    modulo          reduce using rule 132 (EXP -> notb EXP .)
    mayor           reduce using rule 132 (EXP -> notb EXP .)
    mayori          reduce using rule 132 (EXP -> notb EXP .)
    menor           reduce using rule 132 (EXP -> notb EXP .)
    menori          reduce using rule 132 (EXP -> notb EXP .)
    igual           reduce using rule 132 (EXP -> notb EXP .)
    diferente       reduce using rule 132 (EXP -> notb EXP .)
    and             reduce using rule 132 (EXP -> notb EXP .)
    or              reduce using rule 132 (EXP -> notb EXP .)
    shiftizq        reduce using rule 132 (EXP -> notb EXP .)
    shiftder        reduce using rule 132 (EXP -> notb EXP .)
    andb            reduce using rule 132 (EXP -> notb EXP .)
    xorb            reduce using rule 132 (EXP -> notb EXP .)
    orb             reduce using rule 132 (EXP -> notb EXP .)
    condicional     reduce using rule 132 (EXP -> notb EXP .)
    pyc             reduce using rule 132 (EXP -> notb EXP .)
    coma            reduce using rule 132 (EXP -> notb EXP .)
    cor2            reduce using rule 132 (EXP -> notb EXP .)
    par2            reduce using rule 132 (EXP -> notb EXP .)
    llav2           reduce using rule 132 (EXP -> notb EXP .)
    bipunto         reduce using rule 132 (EXP -> notb EXP .)
    t_struct        reduce using rule 132 (EXP -> notb EXP .)
    t_if            reduce using rule 132 (EXP -> notb EXP .)
    iden            reduce using rule 132 (EXP -> notb EXP .)
    t_break         reduce using rule 132 (EXP -> notb EXP .)
    t_continue      reduce using rule 132 (EXP -> notb EXP .)
    t_switch        reduce using rule 132 (EXP -> notb EXP .)
    t_do            reduce using rule 132 (EXP -> notb EXP .)
    t_while         reduce using rule 132 (EXP -> notb EXP .)
    t_return        reduce using rule 132 (EXP -> notb EXP .)
    t_goto          reduce using rule 132 (EXP -> notb EXP .)
    t_for           reduce using rule 132 (EXP -> notb EXP .)
    t_char          reduce using rule 132 (EXP -> notb EXP .)
    t_int           reduce using rule 132 (EXP -> notb EXP .)
    t_double        reduce using rule 132 (EXP -> notb EXP .)
    t_float         reduce using rule 132 (EXP -> notb EXP .)
    t_default       reduce using rule 132 (EXP -> notb EXP .)
    t_case          reduce using rule 132 (EXP -> notb EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 132 (EXP -> notb EXP .) ]
  ! decremento      [ reduce using rule 132 (EXP -> notb EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 117

    (134) EXP -> incremento EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 134 (EXP -> incremento EXP .)
    menos           reduce using rule 134 (EXP -> incremento EXP .)
    por             reduce using rule 134 (EXP -> incremento EXP .)
    division        reduce using rule 134 (EXP -> incremento EXP .)
    modulo          reduce using rule 134 (EXP -> incremento EXP .)
    mayor           reduce using rule 134 (EXP -> incremento EXP .)
    mayori          reduce using rule 134 (EXP -> incremento EXP .)
    menor           reduce using rule 134 (EXP -> incremento EXP .)
    menori          reduce using rule 134 (EXP -> incremento EXP .)
    igual           reduce using rule 134 (EXP -> incremento EXP .)
    diferente       reduce using rule 134 (EXP -> incremento EXP .)
    and             reduce using rule 134 (EXP -> incremento EXP .)
    or              reduce using rule 134 (EXP -> incremento EXP .)
    shiftizq        reduce using rule 134 (EXP -> incremento EXP .)
    shiftder        reduce using rule 134 (EXP -> incremento EXP .)
    andb            reduce using rule 134 (EXP -> incremento EXP .)
    xorb            reduce using rule 134 (EXP -> incremento EXP .)
    orb             reduce using rule 134 (EXP -> incremento EXP .)
    condicional     reduce using rule 134 (EXP -> incremento EXP .)
    pyc             reduce using rule 134 (EXP -> incremento EXP .)
    coma            reduce using rule 134 (EXP -> incremento EXP .)
    cor2            reduce using rule 134 (EXP -> incremento EXP .)
    par2            reduce using rule 134 (EXP -> incremento EXP .)
    llav2           reduce using rule 134 (EXP -> incremento EXP .)
    bipunto         reduce using rule 134 (EXP -> incremento EXP .)
    t_struct        reduce using rule 134 (EXP -> incremento EXP .)
    t_if            reduce using rule 134 (EXP -> incremento EXP .)
    iden            reduce using rule 134 (EXP -> incremento EXP .)
    t_break         reduce using rule 134 (EXP -> incremento EXP .)
    t_continue      reduce using rule 134 (EXP -> incremento EXP .)
    t_switch        reduce using rule 134 (EXP -> incremento EXP .)
    t_do            reduce using rule 134 (EXP -> incremento EXP .)
    t_while         reduce using rule 134 (EXP -> incremento EXP .)
    t_return        reduce using rule 134 (EXP -> incremento EXP .)
    t_goto          reduce using rule 134 (EXP -> incremento EXP .)
    t_for           reduce using rule 134 (EXP -> incremento EXP .)
    t_char          reduce using rule 134 (EXP -> incremento EXP .)
    t_int           reduce using rule 134 (EXP -> incremento EXP .)
    t_double        reduce using rule 134 (EXP -> incremento EXP .)
    t_float         reduce using rule 134 (EXP -> incremento EXP .)
    t_default       reduce using rule 134 (EXP -> incremento EXP .)
    t_case          reduce using rule 134 (EXP -> incremento EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 134 (EXP -> incremento EXP .) ]
  ! decremento      [ reduce using rule 134 (EXP -> incremento EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 118

    (135) EXP -> decremento EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 135 (EXP -> decremento EXP .)
    menos           reduce using rule 135 (EXP -> decremento EXP .)
    por             reduce using rule 135 (EXP -> decremento EXP .)
    division        reduce using rule 135 (EXP -> decremento EXP .)
    modulo          reduce using rule 135 (EXP -> decremento EXP .)
    mayor           reduce using rule 135 (EXP -> decremento EXP .)
    mayori          reduce using rule 135 (EXP -> decremento EXP .)
    menor           reduce using rule 135 (EXP -> decremento EXP .)
    menori          reduce using rule 135 (EXP -> decremento EXP .)
    igual           reduce using rule 135 (EXP -> decremento EXP .)
    diferente       reduce using rule 135 (EXP -> decremento EXP .)
    and             reduce using rule 135 (EXP -> decremento EXP .)
    or              reduce using rule 135 (EXP -> decremento EXP .)
    shiftizq        reduce using rule 135 (EXP -> decremento EXP .)
    shiftder        reduce using rule 135 (EXP -> decremento EXP .)
    andb            reduce using rule 135 (EXP -> decremento EXP .)
    xorb            reduce using rule 135 (EXP -> decremento EXP .)
    orb             reduce using rule 135 (EXP -> decremento EXP .)
    condicional     reduce using rule 135 (EXP -> decremento EXP .)
    pyc             reduce using rule 135 (EXP -> decremento EXP .)
    coma            reduce using rule 135 (EXP -> decremento EXP .)
    cor2            reduce using rule 135 (EXP -> decremento EXP .)
    par2            reduce using rule 135 (EXP -> decremento EXP .)
    llav2           reduce using rule 135 (EXP -> decremento EXP .)
    bipunto         reduce using rule 135 (EXP -> decremento EXP .)
    t_struct        reduce using rule 135 (EXP -> decremento EXP .)
    t_if            reduce using rule 135 (EXP -> decremento EXP .)
    iden            reduce using rule 135 (EXP -> decremento EXP .)
    t_break         reduce using rule 135 (EXP -> decremento EXP .)
    t_continue      reduce using rule 135 (EXP -> decremento EXP .)
    t_switch        reduce using rule 135 (EXP -> decremento EXP .)
    t_do            reduce using rule 135 (EXP -> decremento EXP .)
    t_while         reduce using rule 135 (EXP -> decremento EXP .)
    t_return        reduce using rule 135 (EXP -> decremento EXP .)
    t_goto          reduce using rule 135 (EXP -> decremento EXP .)
    t_for           reduce using rule 135 (EXP -> decremento EXP .)
    t_char          reduce using rule 135 (EXP -> decremento EXP .)
    t_int           reduce using rule 135 (EXP -> decremento EXP .)
    t_double        reduce using rule 135 (EXP -> decremento EXP .)
    t_float         reduce using rule 135 (EXP -> decremento EXP .)
    t_default       reduce using rule 135 (EXP -> decremento EXP .)
    t_case          reduce using rule 135 (EXP -> decremento EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 135 (EXP -> decremento EXP .) ]
  ! decremento      [ reduce using rule 135 (EXP -> decremento EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 119

    (139) EXP -> llav1 ELEMENTS . llav2
    (140) ELEMENTS -> ELEMENTS . coma EXP

    llav2           shift and go to state 158
    coma            shift and go to state 159


state 120

    (141) ELEMENTS -> EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    llav2           reduce using rule 141 (ELEMENTS -> EXP .)
    coma            reduce using rule 141 (ELEMENTS -> EXP .)
    par2            reduce using rule 141 (ELEMENTS -> EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 121

    (144) EXP -> t_sizeof par1 . EXP par2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 160
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 122

    (24) ASIGNACION -> iden LACCESO OP EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 24 (ASIGNACION -> iden LACCESO OP EXP .)
    coma            reduce using rule 24 (ASIGNACION -> iden LACCESO OP EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 123

    (17) LACCESO -> LACCESO cor1 EXP . cor2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    cor2            shift and go to state 161
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 124

    (18) LACCESO -> cor1 EXP cor2 .

    cor1            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    andbasigna      reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    divasigna       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    masasigna       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    menosasigna     reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    modasigna       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    orbasigna       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    porasigna       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    shiftizqasigna  reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    shiftderasigna  reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    xorbasinga      reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    asigna          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    pyc             reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    coma            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    punto           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    mas             reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    menos           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    por             reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    division        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    modulo          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    mayor           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    mayori          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    menor           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    menori          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    igual           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    diferente       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    and             reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    or              reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    shiftizq        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    shiftder        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    andb            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    xorb            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    orb             reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    condicional     reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    incremento      reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    decremento      reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    cor2            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    par2            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    llav2           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    bipunto         reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_struct        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_if            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    iden            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_break         reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_continue      reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_switch        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_do            reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_while         reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_return        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_goto          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_for           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_char          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_int           reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_double        reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_float         reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_default       reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)
    t_case          reduce using rule 18 (LACCESO -> cor1 EXP cor2 .)


state 125

    (54) Funcion -> t_void iden par1 Parametros . par2 BLOQUE
    (56) Parametros -> Parametros . coma Parametro

    par2            shift and go to state 162
    coma            shift and go to state 128


state 126

    (101) Parametro -> Tipos iden .
    (102) Parametro -> Tipos iden . LACCESO
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    par2            reduce using rule 101 (Parametro -> Tipos iden .)
    coma            reduce using rule 101 (Parametro -> Tipos iden .)
    cor1            shift and go to state 40

    LACCESO                        shift and go to state 163

state 127

    (53) Funcion -> Tipos iden par1 Parametros par2 . BLOQUE
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 164

state 128

    (56) Parametros -> Parametros coma . Parametro
    (101) Parametro -> . Tipos iden
    (102) Parametro -> . Tipos iden LACCESO
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float

    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    Parametro                      shift and go to state 166
    Tipos                          shift and go to state 79

state 129

    (14) Dec -> iden cor1 cor2 asigna . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 167
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 130

    (16) Dec -> iden LACCESO asigna EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 16 (Dec -> iden LACCESO asigna EXP .)
    coma            reduce using rule 16 (Dec -> iden LACCESO asigna EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 131

    (38) STRUCT -> t_struct iden llav1 ATRIBUTOS llav2 .

    pyc             reduce using rule 38 (STRUCT -> t_struct iden llav1 ATRIBUTOS llav2 .)


state 132

    (39) ATRIBUTOS -> ATRIBUTOS ATRIBUTO .

    llav2           reduce using rule 39 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_char          reduce using rule 39 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_int           reduce using rule 39 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_double        reduce using rule 39 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)
    t_float         reduce using rule 39 (ATRIBUTOS -> ATRIBUTOS ATRIBUTO .)


state 133

    (41) ATRIBUTO -> Tipos LItemsStruct . pyc
    (42) LItemsStruct -> LItemsStruct . coma ItemsStruct

    pyc             shift and go to state 168
    coma            shift and go to state 169


state 134

    (43) LItemsStruct -> ItemsStruct .

    pyc             reduce using rule 43 (LItemsStruct -> ItemsStruct .)
    coma            reduce using rule 43 (LItemsStruct -> ItemsStruct .)


state 135

    (44) ItemsStruct -> iden .
    (45) ItemsStruct -> iden . LACCESO
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    pyc             reduce using rule 44 (ItemsStruct -> iden .)
    coma            reduce using rule 44 (ItemsStruct -> iden .)
    cor1            shift and go to state 40

    LACCESO                        shift and go to state 170

state 136

    (103) LLAMADA -> iden par1 ELEMENTS . par2
    (140) ELEMENTS -> ELEMENTS . coma EXP

    par2            shift and go to state 171
    coma            shift and go to state 159


state 137

    (104) LLAMADA -> iden par1 par2 .

    mas             reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    menos           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    por             reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    division        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    modulo          reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    mayor           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    mayori          reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    menor           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    menori          reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    igual           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    diferente       reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    and             reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    or              reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    shiftizq        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    shiftder        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    andb            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    xorb            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    orb             reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    condicional     reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    incremento      reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    decremento      reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    pyc             reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    coma            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    cor2            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    par2            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    llav2           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    bipunto         reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_struct        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_if            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    iden            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_break         reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_continue      reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_switch        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_do            reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_while         reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_return        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_goto          reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_for           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_char          reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_int           reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_double        reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_float         reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_default       reduce using rule 104 (LLAMADA -> iden par1 par2 .)
    t_case          reduce using rule 104 (LLAMADA -> iden par1 par2 .)


state 138

    (105) EXP -> EXP mas EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 105 (EXP -> EXP mas EXP .)
    menos           reduce using rule 105 (EXP -> EXP mas EXP .)
    mayor           reduce using rule 105 (EXP -> EXP mas EXP .)
    mayori          reduce using rule 105 (EXP -> EXP mas EXP .)
    menor           reduce using rule 105 (EXP -> EXP mas EXP .)
    menori          reduce using rule 105 (EXP -> EXP mas EXP .)
    igual           reduce using rule 105 (EXP -> EXP mas EXP .)
    diferente       reduce using rule 105 (EXP -> EXP mas EXP .)
    and             reduce using rule 105 (EXP -> EXP mas EXP .)
    or              reduce using rule 105 (EXP -> EXP mas EXP .)
    shiftizq        reduce using rule 105 (EXP -> EXP mas EXP .)
    shiftder        reduce using rule 105 (EXP -> EXP mas EXP .)
    andb            reduce using rule 105 (EXP -> EXP mas EXP .)
    xorb            reduce using rule 105 (EXP -> EXP mas EXP .)
    orb             reduce using rule 105 (EXP -> EXP mas EXP .)
    condicional     reduce using rule 105 (EXP -> EXP mas EXP .)
    pyc             reduce using rule 105 (EXP -> EXP mas EXP .)
    coma            reduce using rule 105 (EXP -> EXP mas EXP .)
    cor2            reduce using rule 105 (EXP -> EXP mas EXP .)
    par2            reduce using rule 105 (EXP -> EXP mas EXP .)
    llav2           reduce using rule 105 (EXP -> EXP mas EXP .)
    bipunto         reduce using rule 105 (EXP -> EXP mas EXP .)
    t_struct        reduce using rule 105 (EXP -> EXP mas EXP .)
    t_if            reduce using rule 105 (EXP -> EXP mas EXP .)
    iden            reduce using rule 105 (EXP -> EXP mas EXP .)
    t_break         reduce using rule 105 (EXP -> EXP mas EXP .)
    t_continue      reduce using rule 105 (EXP -> EXP mas EXP .)
    t_switch        reduce using rule 105 (EXP -> EXP mas EXP .)
    t_do            reduce using rule 105 (EXP -> EXP mas EXP .)
    t_while         reduce using rule 105 (EXP -> EXP mas EXP .)
    t_return        reduce using rule 105 (EXP -> EXP mas EXP .)
    t_goto          reduce using rule 105 (EXP -> EXP mas EXP .)
    t_for           reduce using rule 105 (EXP -> EXP mas EXP .)
    t_char          reduce using rule 105 (EXP -> EXP mas EXP .)
    t_int           reduce using rule 105 (EXP -> EXP mas EXP .)
    t_double        reduce using rule 105 (EXP -> EXP mas EXP .)
    t_float         reduce using rule 105 (EXP -> EXP mas EXP .)
    t_default       reduce using rule 105 (EXP -> EXP mas EXP .)
    t_case          reduce using rule 105 (EXP -> EXP mas EXP .)
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! por             [ reduce using rule 105 (EXP -> EXP mas EXP .) ]
  ! division        [ reduce using rule 105 (EXP -> EXP mas EXP .) ]
  ! modulo          [ reduce using rule 105 (EXP -> EXP mas EXP .) ]
  ! incremento      [ reduce using rule 105 (EXP -> EXP mas EXP .) ]
  ! decremento      [ reduce using rule 105 (EXP -> EXP mas EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 139

    (106) EXP -> EXP menos EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 106 (EXP -> EXP menos EXP .)
    menos           reduce using rule 106 (EXP -> EXP menos EXP .)
    mayor           reduce using rule 106 (EXP -> EXP menos EXP .)
    mayori          reduce using rule 106 (EXP -> EXP menos EXP .)
    menor           reduce using rule 106 (EXP -> EXP menos EXP .)
    menori          reduce using rule 106 (EXP -> EXP menos EXP .)
    igual           reduce using rule 106 (EXP -> EXP menos EXP .)
    diferente       reduce using rule 106 (EXP -> EXP menos EXP .)
    and             reduce using rule 106 (EXP -> EXP menos EXP .)
    or              reduce using rule 106 (EXP -> EXP menos EXP .)
    shiftizq        reduce using rule 106 (EXP -> EXP menos EXP .)
    shiftder        reduce using rule 106 (EXP -> EXP menos EXP .)
    andb            reduce using rule 106 (EXP -> EXP menos EXP .)
    xorb            reduce using rule 106 (EXP -> EXP menos EXP .)
    orb             reduce using rule 106 (EXP -> EXP menos EXP .)
    condicional     reduce using rule 106 (EXP -> EXP menos EXP .)
    pyc             reduce using rule 106 (EXP -> EXP menos EXP .)
    coma            reduce using rule 106 (EXP -> EXP menos EXP .)
    cor2            reduce using rule 106 (EXP -> EXP menos EXP .)
    par2            reduce using rule 106 (EXP -> EXP menos EXP .)
    llav2           reduce using rule 106 (EXP -> EXP menos EXP .)
    bipunto         reduce using rule 106 (EXP -> EXP menos EXP .)
    t_struct        reduce using rule 106 (EXP -> EXP menos EXP .)
    t_if            reduce using rule 106 (EXP -> EXP menos EXP .)
    iden            reduce using rule 106 (EXP -> EXP menos EXP .)
    t_break         reduce using rule 106 (EXP -> EXP menos EXP .)
    t_continue      reduce using rule 106 (EXP -> EXP menos EXP .)
    t_switch        reduce using rule 106 (EXP -> EXP menos EXP .)
    t_do            reduce using rule 106 (EXP -> EXP menos EXP .)
    t_while         reduce using rule 106 (EXP -> EXP menos EXP .)
    t_return        reduce using rule 106 (EXP -> EXP menos EXP .)
    t_goto          reduce using rule 106 (EXP -> EXP menos EXP .)
    t_for           reduce using rule 106 (EXP -> EXP menos EXP .)
    t_char          reduce using rule 106 (EXP -> EXP menos EXP .)
    t_int           reduce using rule 106 (EXP -> EXP menos EXP .)
    t_double        reduce using rule 106 (EXP -> EXP menos EXP .)
    t_float         reduce using rule 106 (EXP -> EXP menos EXP .)
    t_default       reduce using rule 106 (EXP -> EXP menos EXP .)
    t_case          reduce using rule 106 (EXP -> EXP menos EXP .)
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! por             [ reduce using rule 106 (EXP -> EXP menos EXP .) ]
  ! division        [ reduce using rule 106 (EXP -> EXP menos EXP .) ]
  ! modulo          [ reduce using rule 106 (EXP -> EXP menos EXP .) ]
  ! incremento      [ reduce using rule 106 (EXP -> EXP menos EXP .) ]
  ! decremento      [ reduce using rule 106 (EXP -> EXP menos EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 140

    (107) EXP -> EXP por EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 107 (EXP -> EXP por EXP .)
    menos           reduce using rule 107 (EXP -> EXP por EXP .)
    por             reduce using rule 107 (EXP -> EXP por EXP .)
    division        reduce using rule 107 (EXP -> EXP por EXP .)
    modulo          reduce using rule 107 (EXP -> EXP por EXP .)
    mayor           reduce using rule 107 (EXP -> EXP por EXP .)
    mayori          reduce using rule 107 (EXP -> EXP por EXP .)
    menor           reduce using rule 107 (EXP -> EXP por EXP .)
    menori          reduce using rule 107 (EXP -> EXP por EXP .)
    igual           reduce using rule 107 (EXP -> EXP por EXP .)
    diferente       reduce using rule 107 (EXP -> EXP por EXP .)
    and             reduce using rule 107 (EXP -> EXP por EXP .)
    or              reduce using rule 107 (EXP -> EXP por EXP .)
    shiftizq        reduce using rule 107 (EXP -> EXP por EXP .)
    shiftder        reduce using rule 107 (EXP -> EXP por EXP .)
    andb            reduce using rule 107 (EXP -> EXP por EXP .)
    xorb            reduce using rule 107 (EXP -> EXP por EXP .)
    orb             reduce using rule 107 (EXP -> EXP por EXP .)
    condicional     reduce using rule 107 (EXP -> EXP por EXP .)
    pyc             reduce using rule 107 (EXP -> EXP por EXP .)
    coma            reduce using rule 107 (EXP -> EXP por EXP .)
    cor2            reduce using rule 107 (EXP -> EXP por EXP .)
    par2            reduce using rule 107 (EXP -> EXP por EXP .)
    llav2           reduce using rule 107 (EXP -> EXP por EXP .)
    bipunto         reduce using rule 107 (EXP -> EXP por EXP .)
    t_struct        reduce using rule 107 (EXP -> EXP por EXP .)
    t_if            reduce using rule 107 (EXP -> EXP por EXP .)
    iden            reduce using rule 107 (EXP -> EXP por EXP .)
    t_break         reduce using rule 107 (EXP -> EXP por EXP .)
    t_continue      reduce using rule 107 (EXP -> EXP por EXP .)
    t_switch        reduce using rule 107 (EXP -> EXP por EXP .)
    t_do            reduce using rule 107 (EXP -> EXP por EXP .)
    t_while         reduce using rule 107 (EXP -> EXP por EXP .)
    t_return        reduce using rule 107 (EXP -> EXP por EXP .)
    t_goto          reduce using rule 107 (EXP -> EXP por EXP .)
    t_for           reduce using rule 107 (EXP -> EXP por EXP .)
    t_char          reduce using rule 107 (EXP -> EXP por EXP .)
    t_int           reduce using rule 107 (EXP -> EXP por EXP .)
    t_double        reduce using rule 107 (EXP -> EXP por EXP .)
    t_float         reduce using rule 107 (EXP -> EXP por EXP .)
    t_default       reduce using rule 107 (EXP -> EXP por EXP .)
    t_case          reduce using rule 107 (EXP -> EXP por EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 107 (EXP -> EXP por EXP .) ]
  ! decremento      [ reduce using rule 107 (EXP -> EXP por EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 141

    (108) EXP -> EXP division EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 108 (EXP -> EXP division EXP .)
    menos           reduce using rule 108 (EXP -> EXP division EXP .)
    por             reduce using rule 108 (EXP -> EXP division EXP .)
    division        reduce using rule 108 (EXP -> EXP division EXP .)
    modulo          reduce using rule 108 (EXP -> EXP division EXP .)
    mayor           reduce using rule 108 (EXP -> EXP division EXP .)
    mayori          reduce using rule 108 (EXP -> EXP division EXP .)
    menor           reduce using rule 108 (EXP -> EXP division EXP .)
    menori          reduce using rule 108 (EXP -> EXP division EXP .)
    igual           reduce using rule 108 (EXP -> EXP division EXP .)
    diferente       reduce using rule 108 (EXP -> EXP division EXP .)
    and             reduce using rule 108 (EXP -> EXP division EXP .)
    or              reduce using rule 108 (EXP -> EXP division EXP .)
    shiftizq        reduce using rule 108 (EXP -> EXP division EXP .)
    shiftder        reduce using rule 108 (EXP -> EXP division EXP .)
    andb            reduce using rule 108 (EXP -> EXP division EXP .)
    xorb            reduce using rule 108 (EXP -> EXP division EXP .)
    orb             reduce using rule 108 (EXP -> EXP division EXP .)
    condicional     reduce using rule 108 (EXP -> EXP division EXP .)
    pyc             reduce using rule 108 (EXP -> EXP division EXP .)
    coma            reduce using rule 108 (EXP -> EXP division EXP .)
    cor2            reduce using rule 108 (EXP -> EXP division EXP .)
    par2            reduce using rule 108 (EXP -> EXP division EXP .)
    llav2           reduce using rule 108 (EXP -> EXP division EXP .)
    bipunto         reduce using rule 108 (EXP -> EXP division EXP .)
    t_struct        reduce using rule 108 (EXP -> EXP division EXP .)
    t_if            reduce using rule 108 (EXP -> EXP division EXP .)
    iden            reduce using rule 108 (EXP -> EXP division EXP .)
    t_break         reduce using rule 108 (EXP -> EXP division EXP .)
    t_continue      reduce using rule 108 (EXP -> EXP division EXP .)
    t_switch        reduce using rule 108 (EXP -> EXP division EXP .)
    t_do            reduce using rule 108 (EXP -> EXP division EXP .)
    t_while         reduce using rule 108 (EXP -> EXP division EXP .)
    t_return        reduce using rule 108 (EXP -> EXP division EXP .)
    t_goto          reduce using rule 108 (EXP -> EXP division EXP .)
    t_for           reduce using rule 108 (EXP -> EXP division EXP .)
    t_char          reduce using rule 108 (EXP -> EXP division EXP .)
    t_int           reduce using rule 108 (EXP -> EXP division EXP .)
    t_double        reduce using rule 108 (EXP -> EXP division EXP .)
    t_float         reduce using rule 108 (EXP -> EXP division EXP .)
    t_default       reduce using rule 108 (EXP -> EXP division EXP .)
    t_case          reduce using rule 108 (EXP -> EXP division EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 108 (EXP -> EXP division EXP .) ]
  ! decremento      [ reduce using rule 108 (EXP -> EXP division EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 142

    (109) EXP -> EXP modulo EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mas             reduce using rule 109 (EXP -> EXP modulo EXP .)
    menos           reduce using rule 109 (EXP -> EXP modulo EXP .)
    por             reduce using rule 109 (EXP -> EXP modulo EXP .)
    division        reduce using rule 109 (EXP -> EXP modulo EXP .)
    modulo          reduce using rule 109 (EXP -> EXP modulo EXP .)
    mayor           reduce using rule 109 (EXP -> EXP modulo EXP .)
    mayori          reduce using rule 109 (EXP -> EXP modulo EXP .)
    menor           reduce using rule 109 (EXP -> EXP modulo EXP .)
    menori          reduce using rule 109 (EXP -> EXP modulo EXP .)
    igual           reduce using rule 109 (EXP -> EXP modulo EXP .)
    diferente       reduce using rule 109 (EXP -> EXP modulo EXP .)
    and             reduce using rule 109 (EXP -> EXP modulo EXP .)
    or              reduce using rule 109 (EXP -> EXP modulo EXP .)
    shiftizq        reduce using rule 109 (EXP -> EXP modulo EXP .)
    shiftder        reduce using rule 109 (EXP -> EXP modulo EXP .)
    andb            reduce using rule 109 (EXP -> EXP modulo EXP .)
    xorb            reduce using rule 109 (EXP -> EXP modulo EXP .)
    orb             reduce using rule 109 (EXP -> EXP modulo EXP .)
    condicional     reduce using rule 109 (EXP -> EXP modulo EXP .)
    pyc             reduce using rule 109 (EXP -> EXP modulo EXP .)
    coma            reduce using rule 109 (EXP -> EXP modulo EXP .)
    cor2            reduce using rule 109 (EXP -> EXP modulo EXP .)
    par2            reduce using rule 109 (EXP -> EXP modulo EXP .)
    llav2           reduce using rule 109 (EXP -> EXP modulo EXP .)
    bipunto         reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_struct        reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_if            reduce using rule 109 (EXP -> EXP modulo EXP .)
    iden            reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_break         reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_continue      reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_switch        reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_do            reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_while         reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_return        reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_goto          reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_for           reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_char          reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_int           reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_double        reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_float         reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_default       reduce using rule 109 (EXP -> EXP modulo EXP .)
    t_case          reduce using rule 109 (EXP -> EXP modulo EXP .)
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! incremento      [ reduce using rule 109 (EXP -> EXP modulo EXP .) ]
  ! decremento      [ reduce using rule 109 (EXP -> EXP modulo EXP .) ]
  ! mas             [ shift and go to state 90 ]
  ! menos           [ shift and go to state 91 ]
  ! por             [ shift and go to state 92 ]
  ! division        [ shift and go to state 93 ]
  ! modulo          [ shift and go to state 94 ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 143

    (110) EXP -> EXP mayor EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mayor           reduce using rule 110 (EXP -> EXP mayor EXP .)
    mayori          reduce using rule 110 (EXP -> EXP mayor EXP .)
    menor           reduce using rule 110 (EXP -> EXP mayor EXP .)
    menori          reduce using rule 110 (EXP -> EXP mayor EXP .)
    igual           reduce using rule 110 (EXP -> EXP mayor EXP .)
    diferente       reduce using rule 110 (EXP -> EXP mayor EXP .)
    and             reduce using rule 110 (EXP -> EXP mayor EXP .)
    or              reduce using rule 110 (EXP -> EXP mayor EXP .)
    andb            reduce using rule 110 (EXP -> EXP mayor EXP .)
    xorb            reduce using rule 110 (EXP -> EXP mayor EXP .)
    orb             reduce using rule 110 (EXP -> EXP mayor EXP .)
    condicional     reduce using rule 110 (EXP -> EXP mayor EXP .)
    pyc             reduce using rule 110 (EXP -> EXP mayor EXP .)
    coma            reduce using rule 110 (EXP -> EXP mayor EXP .)
    cor2            reduce using rule 110 (EXP -> EXP mayor EXP .)
    par2            reduce using rule 110 (EXP -> EXP mayor EXP .)
    llav2           reduce using rule 110 (EXP -> EXP mayor EXP .)
    bipunto         reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_struct        reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_if            reduce using rule 110 (EXP -> EXP mayor EXP .)
    iden            reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_break         reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_continue      reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_switch        reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_do            reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_while         reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_return        reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_goto          reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_for           reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_char          reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_int           reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_double        reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_float         reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_default       reduce using rule 110 (EXP -> EXP mayor EXP .)
    t_case          reduce using rule 110 (EXP -> EXP mayor EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! menos           [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! por             [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! division        [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! modulo          [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! shiftizq        [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! shiftder        [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! incremento      [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! decremento      [ reduce using rule 110 (EXP -> EXP mayor EXP .) ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 144

    (111) EXP -> EXP mayori EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mayor           reduce using rule 111 (EXP -> EXP mayori EXP .)
    mayori          reduce using rule 111 (EXP -> EXP mayori EXP .)
    menor           reduce using rule 111 (EXP -> EXP mayori EXP .)
    menori          reduce using rule 111 (EXP -> EXP mayori EXP .)
    igual           reduce using rule 111 (EXP -> EXP mayori EXP .)
    diferente       reduce using rule 111 (EXP -> EXP mayori EXP .)
    and             reduce using rule 111 (EXP -> EXP mayori EXP .)
    or              reduce using rule 111 (EXP -> EXP mayori EXP .)
    andb            reduce using rule 111 (EXP -> EXP mayori EXP .)
    xorb            reduce using rule 111 (EXP -> EXP mayori EXP .)
    orb             reduce using rule 111 (EXP -> EXP mayori EXP .)
    condicional     reduce using rule 111 (EXP -> EXP mayori EXP .)
    pyc             reduce using rule 111 (EXP -> EXP mayori EXP .)
    coma            reduce using rule 111 (EXP -> EXP mayori EXP .)
    cor2            reduce using rule 111 (EXP -> EXP mayori EXP .)
    par2            reduce using rule 111 (EXP -> EXP mayori EXP .)
    llav2           reduce using rule 111 (EXP -> EXP mayori EXP .)
    bipunto         reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_struct        reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_if            reduce using rule 111 (EXP -> EXP mayori EXP .)
    iden            reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_break         reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_continue      reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_switch        reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_do            reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_while         reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_return        reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_goto          reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_for           reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_char          reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_int           reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_double        reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_float         reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_default       reduce using rule 111 (EXP -> EXP mayori EXP .)
    t_case          reduce using rule 111 (EXP -> EXP mayori EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! menos           [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! por             [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! division        [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! modulo          [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! shiftizq        [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! shiftder        [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! incremento      [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! decremento      [ reduce using rule 111 (EXP -> EXP mayori EXP .) ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 145

    (112) EXP -> EXP menor EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mayor           reduce using rule 112 (EXP -> EXP menor EXP .)
    mayori          reduce using rule 112 (EXP -> EXP menor EXP .)
    menor           reduce using rule 112 (EXP -> EXP menor EXP .)
    menori          reduce using rule 112 (EXP -> EXP menor EXP .)
    igual           reduce using rule 112 (EXP -> EXP menor EXP .)
    diferente       reduce using rule 112 (EXP -> EXP menor EXP .)
    and             reduce using rule 112 (EXP -> EXP menor EXP .)
    or              reduce using rule 112 (EXP -> EXP menor EXP .)
    andb            reduce using rule 112 (EXP -> EXP menor EXP .)
    xorb            reduce using rule 112 (EXP -> EXP menor EXP .)
    orb             reduce using rule 112 (EXP -> EXP menor EXP .)
    condicional     reduce using rule 112 (EXP -> EXP menor EXP .)
    pyc             reduce using rule 112 (EXP -> EXP menor EXP .)
    coma            reduce using rule 112 (EXP -> EXP menor EXP .)
    cor2            reduce using rule 112 (EXP -> EXP menor EXP .)
    par2            reduce using rule 112 (EXP -> EXP menor EXP .)
    llav2           reduce using rule 112 (EXP -> EXP menor EXP .)
    bipunto         reduce using rule 112 (EXP -> EXP menor EXP .)
    t_struct        reduce using rule 112 (EXP -> EXP menor EXP .)
    t_if            reduce using rule 112 (EXP -> EXP menor EXP .)
    iden            reduce using rule 112 (EXP -> EXP menor EXP .)
    t_break         reduce using rule 112 (EXP -> EXP menor EXP .)
    t_continue      reduce using rule 112 (EXP -> EXP menor EXP .)
    t_switch        reduce using rule 112 (EXP -> EXP menor EXP .)
    t_do            reduce using rule 112 (EXP -> EXP menor EXP .)
    t_while         reduce using rule 112 (EXP -> EXP menor EXP .)
    t_return        reduce using rule 112 (EXP -> EXP menor EXP .)
    t_goto          reduce using rule 112 (EXP -> EXP menor EXP .)
    t_for           reduce using rule 112 (EXP -> EXP menor EXP .)
    t_char          reduce using rule 112 (EXP -> EXP menor EXP .)
    t_int           reduce using rule 112 (EXP -> EXP menor EXP .)
    t_double        reduce using rule 112 (EXP -> EXP menor EXP .)
    t_float         reduce using rule 112 (EXP -> EXP menor EXP .)
    t_default       reduce using rule 112 (EXP -> EXP menor EXP .)
    t_case          reduce using rule 112 (EXP -> EXP menor EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! menos           [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! por             [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! division        [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! modulo          [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! shiftizq        [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! shiftder        [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! incremento      [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! decremento      [ reduce using rule 112 (EXP -> EXP menor EXP .) ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 146

    (113) EXP -> EXP menori EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mayor           reduce using rule 113 (EXP -> EXP menori EXP .)
    mayori          reduce using rule 113 (EXP -> EXP menori EXP .)
    menor           reduce using rule 113 (EXP -> EXP menori EXP .)
    menori          reduce using rule 113 (EXP -> EXP menori EXP .)
    igual           reduce using rule 113 (EXP -> EXP menori EXP .)
    diferente       reduce using rule 113 (EXP -> EXP menori EXP .)
    and             reduce using rule 113 (EXP -> EXP menori EXP .)
    or              reduce using rule 113 (EXP -> EXP menori EXP .)
    andb            reduce using rule 113 (EXP -> EXP menori EXP .)
    xorb            reduce using rule 113 (EXP -> EXP menori EXP .)
    orb             reduce using rule 113 (EXP -> EXP menori EXP .)
    condicional     reduce using rule 113 (EXP -> EXP menori EXP .)
    pyc             reduce using rule 113 (EXP -> EXP menori EXP .)
    coma            reduce using rule 113 (EXP -> EXP menori EXP .)
    cor2            reduce using rule 113 (EXP -> EXP menori EXP .)
    par2            reduce using rule 113 (EXP -> EXP menori EXP .)
    llav2           reduce using rule 113 (EXP -> EXP menori EXP .)
    bipunto         reduce using rule 113 (EXP -> EXP menori EXP .)
    t_struct        reduce using rule 113 (EXP -> EXP menori EXP .)
    t_if            reduce using rule 113 (EXP -> EXP menori EXP .)
    iden            reduce using rule 113 (EXP -> EXP menori EXP .)
    t_break         reduce using rule 113 (EXP -> EXP menori EXP .)
    t_continue      reduce using rule 113 (EXP -> EXP menori EXP .)
    t_switch        reduce using rule 113 (EXP -> EXP menori EXP .)
    t_do            reduce using rule 113 (EXP -> EXP menori EXP .)
    t_while         reduce using rule 113 (EXP -> EXP menori EXP .)
    t_return        reduce using rule 113 (EXP -> EXP menori EXP .)
    t_goto          reduce using rule 113 (EXP -> EXP menori EXP .)
    t_for           reduce using rule 113 (EXP -> EXP menori EXP .)
    t_char          reduce using rule 113 (EXP -> EXP menori EXP .)
    t_int           reduce using rule 113 (EXP -> EXP menori EXP .)
    t_double        reduce using rule 113 (EXP -> EXP menori EXP .)
    t_float         reduce using rule 113 (EXP -> EXP menori EXP .)
    t_default       reduce using rule 113 (EXP -> EXP menori EXP .)
    t_case          reduce using rule 113 (EXP -> EXP menori EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! menos           [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! por             [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! division        [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! modulo          [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! shiftizq        [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! shiftder        [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! incremento      [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! decremento      [ reduce using rule 113 (EXP -> EXP menori EXP .) ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 147

    (114) EXP -> EXP igual EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    igual           reduce using rule 114 (EXP -> EXP igual EXP .)
    diferente       reduce using rule 114 (EXP -> EXP igual EXP .)
    and             reduce using rule 114 (EXP -> EXP igual EXP .)
    or              reduce using rule 114 (EXP -> EXP igual EXP .)
    andb            reduce using rule 114 (EXP -> EXP igual EXP .)
    xorb            reduce using rule 114 (EXP -> EXP igual EXP .)
    orb             reduce using rule 114 (EXP -> EXP igual EXP .)
    condicional     reduce using rule 114 (EXP -> EXP igual EXP .)
    pyc             reduce using rule 114 (EXP -> EXP igual EXP .)
    coma            reduce using rule 114 (EXP -> EXP igual EXP .)
    cor2            reduce using rule 114 (EXP -> EXP igual EXP .)
    par2            reduce using rule 114 (EXP -> EXP igual EXP .)
    llav2           reduce using rule 114 (EXP -> EXP igual EXP .)
    bipunto         reduce using rule 114 (EXP -> EXP igual EXP .)
    t_struct        reduce using rule 114 (EXP -> EXP igual EXP .)
    t_if            reduce using rule 114 (EXP -> EXP igual EXP .)
    iden            reduce using rule 114 (EXP -> EXP igual EXP .)
    t_break         reduce using rule 114 (EXP -> EXP igual EXP .)
    t_continue      reduce using rule 114 (EXP -> EXP igual EXP .)
    t_switch        reduce using rule 114 (EXP -> EXP igual EXP .)
    t_do            reduce using rule 114 (EXP -> EXP igual EXP .)
    t_while         reduce using rule 114 (EXP -> EXP igual EXP .)
    t_return        reduce using rule 114 (EXP -> EXP igual EXP .)
    t_goto          reduce using rule 114 (EXP -> EXP igual EXP .)
    t_for           reduce using rule 114 (EXP -> EXP igual EXP .)
    t_char          reduce using rule 114 (EXP -> EXP igual EXP .)
    t_int           reduce using rule 114 (EXP -> EXP igual EXP .)
    t_double        reduce using rule 114 (EXP -> EXP igual EXP .)
    t_float         reduce using rule 114 (EXP -> EXP igual EXP .)
    t_default       reduce using rule 114 (EXP -> EXP igual EXP .)
    t_case          reduce using rule 114 (EXP -> EXP igual EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! menos           [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! por             [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! division        [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! modulo          [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! mayor           [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! mayori          [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! menor           [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! menori          [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! shiftizq        [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! shiftder        [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! incremento      [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! decremento      [ reduce using rule 114 (EXP -> EXP igual EXP .) ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 148

    (115) EXP -> EXP diferente EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    igual           reduce using rule 115 (EXP -> EXP diferente EXP .)
    diferente       reduce using rule 115 (EXP -> EXP diferente EXP .)
    and             reduce using rule 115 (EXP -> EXP diferente EXP .)
    or              reduce using rule 115 (EXP -> EXP diferente EXP .)
    andb            reduce using rule 115 (EXP -> EXP diferente EXP .)
    xorb            reduce using rule 115 (EXP -> EXP diferente EXP .)
    orb             reduce using rule 115 (EXP -> EXP diferente EXP .)
    condicional     reduce using rule 115 (EXP -> EXP diferente EXP .)
    pyc             reduce using rule 115 (EXP -> EXP diferente EXP .)
    coma            reduce using rule 115 (EXP -> EXP diferente EXP .)
    cor2            reduce using rule 115 (EXP -> EXP diferente EXP .)
    par2            reduce using rule 115 (EXP -> EXP diferente EXP .)
    llav2           reduce using rule 115 (EXP -> EXP diferente EXP .)
    bipunto         reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_struct        reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_if            reduce using rule 115 (EXP -> EXP diferente EXP .)
    iden            reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_break         reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_continue      reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_switch        reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_do            reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_while         reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_return        reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_goto          reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_for           reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_char          reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_int           reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_double        reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_float         reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_default       reduce using rule 115 (EXP -> EXP diferente EXP .)
    t_case          reduce using rule 115 (EXP -> EXP diferente EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! menos           [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! por             [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! division        [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! modulo          [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! mayor           [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! mayori          [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! menor           [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! menori          [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! shiftizq        [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! shiftder        [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! incremento      [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! decremento      [ reduce using rule 115 (EXP -> EXP diferente EXP .) ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 149

    (116) EXP -> EXP and EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    and             reduce using rule 116 (EXP -> EXP and EXP .)
    or              reduce using rule 116 (EXP -> EXP and EXP .)
    condicional     reduce using rule 116 (EXP -> EXP and EXP .)
    pyc             reduce using rule 116 (EXP -> EXP and EXP .)
    coma            reduce using rule 116 (EXP -> EXP and EXP .)
    cor2            reduce using rule 116 (EXP -> EXP and EXP .)
    par2            reduce using rule 116 (EXP -> EXP and EXP .)
    llav2           reduce using rule 116 (EXP -> EXP and EXP .)
    bipunto         reduce using rule 116 (EXP -> EXP and EXP .)
    t_struct        reduce using rule 116 (EXP -> EXP and EXP .)
    t_if            reduce using rule 116 (EXP -> EXP and EXP .)
    iden            reduce using rule 116 (EXP -> EXP and EXP .)
    t_break         reduce using rule 116 (EXP -> EXP and EXP .)
    t_continue      reduce using rule 116 (EXP -> EXP and EXP .)
    t_switch        reduce using rule 116 (EXP -> EXP and EXP .)
    t_do            reduce using rule 116 (EXP -> EXP and EXP .)
    t_while         reduce using rule 116 (EXP -> EXP and EXP .)
    t_return        reduce using rule 116 (EXP -> EXP and EXP .)
    t_goto          reduce using rule 116 (EXP -> EXP and EXP .)
    t_for           reduce using rule 116 (EXP -> EXP and EXP .)
    t_char          reduce using rule 116 (EXP -> EXP and EXP .)
    t_int           reduce using rule 116 (EXP -> EXP and EXP .)
    t_double        reduce using rule 116 (EXP -> EXP and EXP .)
    t_float         reduce using rule 116 (EXP -> EXP and EXP .)
    t_default       reduce using rule 116 (EXP -> EXP and EXP .)
    t_case          reduce using rule 116 (EXP -> EXP and EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! menos           [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! por             [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! division        [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! modulo          [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! mayor           [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! mayori          [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! menor           [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! menori          [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! igual           [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! diferente       [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! shiftizq        [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! shiftder        [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! andb            [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! xorb            [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! orb             [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! incremento      [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! decremento      [ reduce using rule 116 (EXP -> EXP and EXP .) ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! condicional     [ shift and go to state 108 ]


state 150

    (117) EXP -> EXP or EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    or              reduce using rule 117 (EXP -> EXP or EXP .)
    condicional     reduce using rule 117 (EXP -> EXP or EXP .)
    pyc             reduce using rule 117 (EXP -> EXP or EXP .)
    coma            reduce using rule 117 (EXP -> EXP or EXP .)
    cor2            reduce using rule 117 (EXP -> EXP or EXP .)
    par2            reduce using rule 117 (EXP -> EXP or EXP .)
    llav2           reduce using rule 117 (EXP -> EXP or EXP .)
    bipunto         reduce using rule 117 (EXP -> EXP or EXP .)
    t_struct        reduce using rule 117 (EXP -> EXP or EXP .)
    t_if            reduce using rule 117 (EXP -> EXP or EXP .)
    iden            reduce using rule 117 (EXP -> EXP or EXP .)
    t_break         reduce using rule 117 (EXP -> EXP or EXP .)
    t_continue      reduce using rule 117 (EXP -> EXP or EXP .)
    t_switch        reduce using rule 117 (EXP -> EXP or EXP .)
    t_do            reduce using rule 117 (EXP -> EXP or EXP .)
    t_while         reduce using rule 117 (EXP -> EXP or EXP .)
    t_return        reduce using rule 117 (EXP -> EXP or EXP .)
    t_goto          reduce using rule 117 (EXP -> EXP or EXP .)
    t_for           reduce using rule 117 (EXP -> EXP or EXP .)
    t_char          reduce using rule 117 (EXP -> EXP or EXP .)
    t_int           reduce using rule 117 (EXP -> EXP or EXP .)
    t_double        reduce using rule 117 (EXP -> EXP or EXP .)
    t_float         reduce using rule 117 (EXP -> EXP or EXP .)
    t_default       reduce using rule 117 (EXP -> EXP or EXP .)
    t_case          reduce using rule 117 (EXP -> EXP or EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! menos           [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! por             [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! division        [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! modulo          [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! mayor           [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! mayori          [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! menor           [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! menori          [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! igual           [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! diferente       [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! and             [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! shiftizq        [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! shiftder        [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! andb            [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! xorb            [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! orb             [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! incremento      [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! decremento      [ reduce using rule 117 (EXP -> EXP or EXP .) ]
  ! or              [ shift and go to state 102 ]
  ! condicional     [ shift and go to state 108 ]


state 151

    (124) EXP -> EXP shiftizq EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mayor           reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    mayori          reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    menor           reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    menori          reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    igual           reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    diferente       reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    and             reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    or              reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    shiftizq        reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    shiftder        reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    andb            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    xorb            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    orb             reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    condicional     reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    pyc             reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    coma            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    cor2            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    par2            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    llav2           reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    bipunto         reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_struct        reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_if            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    iden            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_break         reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_continue      reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_switch        reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_do            reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_while         reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_return        reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_goto          reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_for           reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_char          reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_int           reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_double        reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_float         reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_default       reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    t_case          reduce using rule 124 (EXP -> EXP shiftizq EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! menos           [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! por             [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! division        [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! modulo          [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! incremento      [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! decremento      [ reduce using rule 124 (EXP -> EXP shiftizq EXP .) ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 152

    (125) EXP -> EXP shiftder EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    mayor           reduce using rule 125 (EXP -> EXP shiftder EXP .)
    mayori          reduce using rule 125 (EXP -> EXP shiftder EXP .)
    menor           reduce using rule 125 (EXP -> EXP shiftder EXP .)
    menori          reduce using rule 125 (EXP -> EXP shiftder EXP .)
    igual           reduce using rule 125 (EXP -> EXP shiftder EXP .)
    diferente       reduce using rule 125 (EXP -> EXP shiftder EXP .)
    and             reduce using rule 125 (EXP -> EXP shiftder EXP .)
    or              reduce using rule 125 (EXP -> EXP shiftder EXP .)
    shiftizq        reduce using rule 125 (EXP -> EXP shiftder EXP .)
    shiftder        reduce using rule 125 (EXP -> EXP shiftder EXP .)
    andb            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    xorb            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    orb             reduce using rule 125 (EXP -> EXP shiftder EXP .)
    condicional     reduce using rule 125 (EXP -> EXP shiftder EXP .)
    pyc             reduce using rule 125 (EXP -> EXP shiftder EXP .)
    coma            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    cor2            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    par2            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    llav2           reduce using rule 125 (EXP -> EXP shiftder EXP .)
    bipunto         reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_struct        reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_if            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    iden            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_break         reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_continue      reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_switch        reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_do            reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_while         reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_return        reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_goto          reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_for           reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_char          reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_int           reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_double        reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_float         reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_default       reduce using rule 125 (EXP -> EXP shiftder EXP .)
    t_case          reduce using rule 125 (EXP -> EXP shiftder EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! menos           [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! por             [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! division        [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! modulo          [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! incremento      [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! decremento      [ reduce using rule 125 (EXP -> EXP shiftder EXP .) ]
  ! mayor           [ shift and go to state 95 ]
  ! mayori          [ shift and go to state 96 ]
  ! menor           [ shift and go to state 97 ]
  ! menori          [ shift and go to state 98 ]
  ! igual           [ shift and go to state 99 ]
  ! diferente       [ shift and go to state 100 ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! shiftizq        [ shift and go to state 103 ]
  ! shiftder        [ shift and go to state 104 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 153

    (126) EXP -> EXP andb EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    and             reduce using rule 126 (EXP -> EXP andb EXP .)
    or              reduce using rule 126 (EXP -> EXP andb EXP .)
    andb            reduce using rule 126 (EXP -> EXP andb EXP .)
    xorb            reduce using rule 126 (EXP -> EXP andb EXP .)
    orb             reduce using rule 126 (EXP -> EXP andb EXP .)
    condicional     reduce using rule 126 (EXP -> EXP andb EXP .)
    pyc             reduce using rule 126 (EXP -> EXP andb EXP .)
    coma            reduce using rule 126 (EXP -> EXP andb EXP .)
    cor2            reduce using rule 126 (EXP -> EXP andb EXP .)
    par2            reduce using rule 126 (EXP -> EXP andb EXP .)
    llav2           reduce using rule 126 (EXP -> EXP andb EXP .)
    bipunto         reduce using rule 126 (EXP -> EXP andb EXP .)
    t_struct        reduce using rule 126 (EXP -> EXP andb EXP .)
    t_if            reduce using rule 126 (EXP -> EXP andb EXP .)
    iden            reduce using rule 126 (EXP -> EXP andb EXP .)
    t_break         reduce using rule 126 (EXP -> EXP andb EXP .)
    t_continue      reduce using rule 126 (EXP -> EXP andb EXP .)
    t_switch        reduce using rule 126 (EXP -> EXP andb EXP .)
    t_do            reduce using rule 126 (EXP -> EXP andb EXP .)
    t_while         reduce using rule 126 (EXP -> EXP andb EXP .)
    t_return        reduce using rule 126 (EXP -> EXP andb EXP .)
    t_goto          reduce using rule 126 (EXP -> EXP andb EXP .)
    t_for           reduce using rule 126 (EXP -> EXP andb EXP .)
    t_char          reduce using rule 126 (EXP -> EXP andb EXP .)
    t_int           reduce using rule 126 (EXP -> EXP andb EXP .)
    t_double        reduce using rule 126 (EXP -> EXP andb EXP .)
    t_float         reduce using rule 126 (EXP -> EXP andb EXP .)
    t_default       reduce using rule 126 (EXP -> EXP andb EXP .)
    t_case          reduce using rule 126 (EXP -> EXP andb EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! menos           [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! por             [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! division        [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! modulo          [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! mayor           [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! mayori          [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! menor           [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! menori          [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! igual           [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! diferente       [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! shiftizq        [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! shiftder        [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! incremento      [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! decremento      [ reduce using rule 126 (EXP -> EXP andb EXP .) ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! andb            [ shift and go to state 105 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 154

    (127) EXP -> EXP xorb EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    and             reduce using rule 127 (EXP -> EXP xorb EXP .)
    or              reduce using rule 127 (EXP -> EXP xorb EXP .)
    xorb            reduce using rule 127 (EXP -> EXP xorb EXP .)
    orb             reduce using rule 127 (EXP -> EXP xorb EXP .)
    condicional     reduce using rule 127 (EXP -> EXP xorb EXP .)
    pyc             reduce using rule 127 (EXP -> EXP xorb EXP .)
    coma            reduce using rule 127 (EXP -> EXP xorb EXP .)
    cor2            reduce using rule 127 (EXP -> EXP xorb EXP .)
    par2            reduce using rule 127 (EXP -> EXP xorb EXP .)
    llav2           reduce using rule 127 (EXP -> EXP xorb EXP .)
    bipunto         reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_struct        reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_if            reduce using rule 127 (EXP -> EXP xorb EXP .)
    iden            reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_break         reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_continue      reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_switch        reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_do            reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_while         reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_return        reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_goto          reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_for           reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_char          reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_int           reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_double        reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_float         reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_default       reduce using rule 127 (EXP -> EXP xorb EXP .)
    t_case          reduce using rule 127 (EXP -> EXP xorb EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! menos           [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! por             [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! division        [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! modulo          [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! mayor           [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! mayori          [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! menor           [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! menori          [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! igual           [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! diferente       [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! shiftizq        [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! shiftder        [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! andb            [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! incremento      [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! decremento      [ reduce using rule 127 (EXP -> EXP xorb EXP .) ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! xorb            [ shift and go to state 106 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 155

    (128) EXP -> EXP orb EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    and             reduce using rule 128 (EXP -> EXP orb EXP .)
    or              reduce using rule 128 (EXP -> EXP orb EXP .)
    orb             reduce using rule 128 (EXP -> EXP orb EXP .)
    condicional     reduce using rule 128 (EXP -> EXP orb EXP .)
    pyc             reduce using rule 128 (EXP -> EXP orb EXP .)
    coma            reduce using rule 128 (EXP -> EXP orb EXP .)
    cor2            reduce using rule 128 (EXP -> EXP orb EXP .)
    par2            reduce using rule 128 (EXP -> EXP orb EXP .)
    llav2           reduce using rule 128 (EXP -> EXP orb EXP .)
    bipunto         reduce using rule 128 (EXP -> EXP orb EXP .)
    t_struct        reduce using rule 128 (EXP -> EXP orb EXP .)
    t_if            reduce using rule 128 (EXP -> EXP orb EXP .)
    iden            reduce using rule 128 (EXP -> EXP orb EXP .)
    t_break         reduce using rule 128 (EXP -> EXP orb EXP .)
    t_continue      reduce using rule 128 (EXP -> EXP orb EXP .)
    t_switch        reduce using rule 128 (EXP -> EXP orb EXP .)
    t_do            reduce using rule 128 (EXP -> EXP orb EXP .)
    t_while         reduce using rule 128 (EXP -> EXP orb EXP .)
    t_return        reduce using rule 128 (EXP -> EXP orb EXP .)
    t_goto          reduce using rule 128 (EXP -> EXP orb EXP .)
    t_for           reduce using rule 128 (EXP -> EXP orb EXP .)
    t_char          reduce using rule 128 (EXP -> EXP orb EXP .)
    t_int           reduce using rule 128 (EXP -> EXP orb EXP .)
    t_double        reduce using rule 128 (EXP -> EXP orb EXP .)
    t_float         reduce using rule 128 (EXP -> EXP orb EXP .)
    t_default       reduce using rule 128 (EXP -> EXP orb EXP .)
    t_case          reduce using rule 128 (EXP -> EXP orb EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! menos           [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! por             [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! division        [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! modulo          [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! mayor           [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! mayori          [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! menor           [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! menori          [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! igual           [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! diferente       [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! shiftizq        [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! shiftder        [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! andb            [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! xorb            [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! incremento      [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! decremento      [ reduce using rule 128 (EXP -> EXP orb EXP .) ]
  ! and             [ shift and go to state 101 ]
  ! or              [ shift and go to state 102 ]
  ! orb             [ shift and go to state 107 ]
  ! condicional     [ shift and go to state 108 ]


state 156

    (136) EXP -> EXP condicional EXP . bipunto EXP
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    bipunto         shift and go to state 172
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 157

    (123) EXP -> par1 EXP par2 .

    mas             reduce using rule 123 (EXP -> par1 EXP par2 .)
    menos           reduce using rule 123 (EXP -> par1 EXP par2 .)
    por             reduce using rule 123 (EXP -> par1 EXP par2 .)
    division        reduce using rule 123 (EXP -> par1 EXP par2 .)
    modulo          reduce using rule 123 (EXP -> par1 EXP par2 .)
    mayor           reduce using rule 123 (EXP -> par1 EXP par2 .)
    mayori          reduce using rule 123 (EXP -> par1 EXP par2 .)
    menor           reduce using rule 123 (EXP -> par1 EXP par2 .)
    menori          reduce using rule 123 (EXP -> par1 EXP par2 .)
    igual           reduce using rule 123 (EXP -> par1 EXP par2 .)
    diferente       reduce using rule 123 (EXP -> par1 EXP par2 .)
    and             reduce using rule 123 (EXP -> par1 EXP par2 .)
    or              reduce using rule 123 (EXP -> par1 EXP par2 .)
    shiftizq        reduce using rule 123 (EXP -> par1 EXP par2 .)
    shiftder        reduce using rule 123 (EXP -> par1 EXP par2 .)
    andb            reduce using rule 123 (EXP -> par1 EXP par2 .)
    xorb            reduce using rule 123 (EXP -> par1 EXP par2 .)
    orb             reduce using rule 123 (EXP -> par1 EXP par2 .)
    condicional     reduce using rule 123 (EXP -> par1 EXP par2 .)
    incremento      reduce using rule 123 (EXP -> par1 EXP par2 .)
    decremento      reduce using rule 123 (EXP -> par1 EXP par2 .)
    pyc             reduce using rule 123 (EXP -> par1 EXP par2 .)
    coma            reduce using rule 123 (EXP -> par1 EXP par2 .)
    cor2            reduce using rule 123 (EXP -> par1 EXP par2 .)
    par2            reduce using rule 123 (EXP -> par1 EXP par2 .)
    llav2           reduce using rule 123 (EXP -> par1 EXP par2 .)
    bipunto         reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_struct        reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_if            reduce using rule 123 (EXP -> par1 EXP par2 .)
    iden            reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_break         reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_continue      reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_switch        reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_do            reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_while         reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_return        reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_goto          reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_for           reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_char          reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_int           reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_double        reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_float         reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_default       reduce using rule 123 (EXP -> par1 EXP par2 .)
    t_case          reduce using rule 123 (EXP -> par1 EXP par2 .)


state 158

    (139) EXP -> llav1 ELEMENTS llav2 .

    mas             reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    menos           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    por             reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    division        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    modulo          reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    mayor           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    mayori          reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    menor           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    menori          reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    igual           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    diferente       reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    and             reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    or              reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    shiftizq        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    shiftder        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    andb            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    xorb            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    orb             reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    condicional     reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    incremento      reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    decremento      reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    pyc             reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    coma            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    cor2            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    par2            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    llav2           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    bipunto         reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_struct        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_if            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    iden            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_break         reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_continue      reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_switch        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_do            reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_while         reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_return        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_goto          reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_for           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_char          reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_int           reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_double        reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_float         reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_default       reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)
    t_case          reduce using rule 139 (EXP -> llav1 ELEMENTS llav2 .)


state 159

    (140) ELEMENTS -> ELEMENTS coma . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 173
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 160

    (144) EXP -> t_sizeof par1 EXP . par2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 174
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 161

    (17) LACCESO -> LACCESO cor1 EXP cor2 .

    cor1            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    andbasigna      reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    divasigna       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    masasigna       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menosasigna     reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    modasigna       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    orbasigna       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    porasigna       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftizqasigna  reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftderasigna  reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    xorbasinga      reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    asigna          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    pyc             reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    coma            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    punto           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    mas             reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menos           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    por             reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    division        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    modulo          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    mayor           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    mayori          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menor           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    menori          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    igual           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    diferente       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    and             reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    or              reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftizq        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    shiftder        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    andb            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    xorb            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    orb             reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    condicional     reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    incremento      reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    decremento      reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    cor2            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    par2            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    llav2           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    bipunto         reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_struct        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_if            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    iden            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_break         reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_continue      reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_switch        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_do            reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_while         reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_return        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_goto          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_for           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_char          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_int           reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_double        reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_float         reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_default       reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)
    t_case          reduce using rule 17 (LACCESO -> LACCESO cor1 EXP cor2 .)


state 162

    (54) Funcion -> t_void iden par1 Parametros par2 . BLOQUE
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 175

state 163

    (102) Parametro -> Tipos iden LACCESO .
    (17) LACCESO -> LACCESO . cor1 EXP cor2

    par2            reduce using rule 102 (Parametro -> Tipos iden LACCESO .)
    coma            reduce using rule 102 (Parametro -> Tipos iden LACCESO .)
    cor1            shift and go to state 71


state 164

    (53) Funcion -> Tipos iden par1 Parametros par2 BLOQUE .

    t_struct        reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_void          reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_char          reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_int           reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_double        reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    t_float         reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    iden            reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)
    $end            reduce using rule 53 (Funcion -> Tipos iden par1 Parametros par2 BLOQUE .)


state 165

    (74) BLOQUE -> llav1 . SS_F llav2
    (75) BLOQUE -> llav1 . llav2
    (58) SS_F -> . SS_F S_F
    (59) SS_F -> . S_F
    (60) S_F -> . Declaracion
    (61) S_F -> . LASIGNACION pyc
    (62) S_F -> . STRUCT pyc
    (63) S_F -> . IF
    (64) S_F -> . LLAMADA pyc
    (65) S_F -> . BREAK pyc
    (66) S_F -> . CONTINUE pyc
    (67) S_F -> . SWITCH
    (68) S_F -> . DO_WHILE pyc
    (69) S_F -> . WHILE
    (70) S_F -> . RETURN
    (71) S_F -> . ETIQUETA
    (72) S_F -> . GOTO pyc
    (73) S_F -> . FOR
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (96) BREAK -> . t_break
    (97) CONTINUE -> . t_continue
    (88) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (84) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (85) WHILE -> . t_while par1 EXP par2 BLOQUE
    (86) RETURN -> . t_return EXP
    (87) RETURN -> . t_return
    (82) ETIQUETA -> . iden bipunto
    (83) GOTO -> . t_goto iden
    (76) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    llav2           shift and go to state 177
    t_struct        shift and go to state 10
    t_if            shift and go to state 195
    iden            shift and go to state 194
    t_break         shift and go to state 196
    t_continue      shift and go to state 197
    t_switch        shift and go to state 198
    t_do            shift and go to state 199
    t_while         shift and go to state 200
    t_return        shift and go to state 201
    t_goto          shift and go to state 202
    t_for           shift and go to state 203
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    SS_F                           shift and go to state 176
    S_F                            shift and go to state 178
    Declaracion                    shift and go to state 179
    LASIGNACION                    shift and go to state 180
    STRUCT                         shift and go to state 181
    IF                             shift and go to state 182
    LLAMADA                        shift and go to state 183
    BREAK                          shift and go to state 184
    CONTINUE                       shift and go to state 185
    SWITCH                         shift and go to state 186
    DO_WHILE                       shift and go to state 187
    WHILE                          shift and go to state 188
    RETURN                         shift and go to state 189
    ETIQUETA                       shift and go to state 190
    GOTO                           shift and go to state 191
    FOR                            shift and go to state 192
    Tipos                          shift and go to state 193
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 166

    (56) Parametros -> Parametros coma Parametro .

    par2            reduce using rule 56 (Parametros -> Parametros coma Parametro .)
    coma            reduce using rule 56 (Parametros -> Parametros coma Parametro .)


state 167

    (14) Dec -> iden cor1 cor2 asigna EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 14 (Dec -> iden cor1 cor2 asigna EXP .)
    coma            reduce using rule 14 (Dec -> iden cor1 cor2 asigna EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 168

    (41) ATRIBUTO -> Tipos LItemsStruct pyc .

    llav2           reduce using rule 41 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_char          reduce using rule 41 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_int           reduce using rule 41 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_double        reduce using rule 41 (ATRIBUTO -> Tipos LItemsStruct pyc .)
    t_float         reduce using rule 41 (ATRIBUTO -> Tipos LItemsStruct pyc .)


state 169

    (42) LItemsStruct -> LItemsStruct coma . ItemsStruct
    (44) ItemsStruct -> . iden
    (45) ItemsStruct -> . iden LACCESO

    iden            shift and go to state 135

    ItemsStruct                    shift and go to state 204

state 170

    (45) ItemsStruct -> iden LACCESO .
    (17) LACCESO -> LACCESO . cor1 EXP cor2

    pyc             reduce using rule 45 (ItemsStruct -> iden LACCESO .)
    coma            reduce using rule 45 (ItemsStruct -> iden LACCESO .)
    cor1            shift and go to state 71


state 171

    (103) LLAMADA -> iden par1 ELEMENTS par2 .

    mas             reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    menos           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    por             reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    division        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    modulo          reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    mayor           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    mayori          reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    menor           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    menori          reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    igual           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    diferente       reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    and             reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    or              reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    shiftizq        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    shiftder        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    andb            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    xorb            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    orb             reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    condicional     reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    incremento      reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    decremento      reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    pyc             reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    coma            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    cor2            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    par2            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    llav2           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    bipunto         reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_struct        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_if            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    iden            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_break         reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_continue      reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_switch        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_do            reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_while         reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_return        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_goto          reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_for           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_char          reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_int           reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_double        reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_float         reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_default       reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)
    t_case          reduce using rule 103 (LLAMADA -> iden par1 ELEMENTS par2 .)


state 172

    (136) EXP -> EXP condicional EXP bipunto . EXP
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 205
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 173

    (140) ELEMENTS -> ELEMENTS coma EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    llav2           reduce using rule 140 (ELEMENTS -> ELEMENTS coma EXP .)
    coma            reduce using rule 140 (ELEMENTS -> ELEMENTS coma EXP .)
    par2            reduce using rule 140 (ELEMENTS -> ELEMENTS coma EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 174

    (144) EXP -> t_sizeof par1 EXP par2 .

    mas             reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    menos           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    por             reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    division        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    modulo          reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    mayor           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    mayori          reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    menor           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    menori          reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    igual           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    diferente       reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    and             reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    or              reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    shiftizq        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    shiftder        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    andb            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    xorb            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    orb             reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    condicional     reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    incremento      reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    decremento      reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    pyc             reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    coma            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    cor2            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    par2            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    llav2           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    bipunto         reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_struct        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_if            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    iden            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_break         reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_continue      reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_switch        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_do            reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_while         reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_return        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_goto          reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_for           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_char          reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_int           reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_double        reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_float         reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_default       reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)
    t_case          reduce using rule 144 (EXP -> t_sizeof par1 EXP par2 .)


state 175

    (54) Funcion -> t_void iden par1 Parametros par2 BLOQUE .

    t_struct        reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_void          reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_char          reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_int           reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_double        reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    t_float         reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    iden            reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)
    $end            reduce using rule 54 (Funcion -> t_void iden par1 Parametros par2 BLOQUE .)


state 176

    (74) BLOQUE -> llav1 SS_F . llav2
    (58) SS_F -> SS_F . S_F
    (60) S_F -> . Declaracion
    (61) S_F -> . LASIGNACION pyc
    (62) S_F -> . STRUCT pyc
    (63) S_F -> . IF
    (64) S_F -> . LLAMADA pyc
    (65) S_F -> . BREAK pyc
    (66) S_F -> . CONTINUE pyc
    (67) S_F -> . SWITCH
    (68) S_F -> . DO_WHILE pyc
    (69) S_F -> . WHILE
    (70) S_F -> . RETURN
    (71) S_F -> . ETIQUETA
    (72) S_F -> . GOTO pyc
    (73) S_F -> . FOR
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (96) BREAK -> . t_break
    (97) CONTINUE -> . t_continue
    (88) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (84) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (85) WHILE -> . t_while par1 EXP par2 BLOQUE
    (86) RETURN -> . t_return EXP
    (87) RETURN -> . t_return
    (82) ETIQUETA -> . iden bipunto
    (83) GOTO -> . t_goto iden
    (76) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    llav2           shift and go to state 206
    t_struct        shift and go to state 10
    t_if            shift and go to state 195
    iden            shift and go to state 194
    t_break         shift and go to state 196
    t_continue      shift and go to state 197
    t_switch        shift and go to state 198
    t_do            shift and go to state 199
    t_while         shift and go to state 200
    t_return        shift and go to state 201
    t_goto          shift and go to state 202
    t_for           shift and go to state 203
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    S_F                            shift and go to state 207
    Declaracion                    shift and go to state 179
    LASIGNACION                    shift and go to state 180
    STRUCT                         shift and go to state 181
    IF                             shift and go to state 182
    LLAMADA                        shift and go to state 183
    BREAK                          shift and go to state 184
    CONTINUE                       shift and go to state 185
    SWITCH                         shift and go to state 186
    DO_WHILE                       shift and go to state 187
    WHILE                          shift and go to state 188
    RETURN                         shift and go to state 189
    ETIQUETA                       shift and go to state 190
    GOTO                           shift and go to state 191
    FOR                            shift and go to state 192
    Tipos                          shift and go to state 193
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 177

    (75) BLOQUE -> llav1 llav2 .

    t_struct        reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_void          reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_char          reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_int           reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_double        reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_float         reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    iden            reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    $end            reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_while         reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_else          reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    llav2           reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_if            reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_break         reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_continue      reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_switch        reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_do            reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_return        reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_goto          reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_for           reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_default       reduce using rule 75 (BLOQUE -> llav1 llav2 .)
    t_case          reduce using rule 75 (BLOQUE -> llav1 llav2 .)


state 178

    (59) SS_F -> S_F .

    llav2           reduce using rule 59 (SS_F -> S_F .)
    t_struct        reduce using rule 59 (SS_F -> S_F .)
    t_if            reduce using rule 59 (SS_F -> S_F .)
    iden            reduce using rule 59 (SS_F -> S_F .)
    t_break         reduce using rule 59 (SS_F -> S_F .)
    t_continue      reduce using rule 59 (SS_F -> S_F .)
    t_switch        reduce using rule 59 (SS_F -> S_F .)
    t_do            reduce using rule 59 (SS_F -> S_F .)
    t_while         reduce using rule 59 (SS_F -> S_F .)
    t_return        reduce using rule 59 (SS_F -> S_F .)
    t_goto          reduce using rule 59 (SS_F -> S_F .)
    t_for           reduce using rule 59 (SS_F -> S_F .)
    t_char          reduce using rule 59 (SS_F -> S_F .)
    t_int           reduce using rule 59 (SS_F -> S_F .)
    t_double        reduce using rule 59 (SS_F -> S_F .)
    t_float         reduce using rule 59 (SS_F -> S_F .)
    t_default       reduce using rule 59 (SS_F -> S_F .)
    t_case          reduce using rule 59 (SS_F -> S_F .)


state 179

    (60) S_F -> Declaracion .

    llav2           reduce using rule 60 (S_F -> Declaracion .)
    t_struct        reduce using rule 60 (S_F -> Declaracion .)
    t_if            reduce using rule 60 (S_F -> Declaracion .)
    iden            reduce using rule 60 (S_F -> Declaracion .)
    t_break         reduce using rule 60 (S_F -> Declaracion .)
    t_continue      reduce using rule 60 (S_F -> Declaracion .)
    t_switch        reduce using rule 60 (S_F -> Declaracion .)
    t_do            reduce using rule 60 (S_F -> Declaracion .)
    t_while         reduce using rule 60 (S_F -> Declaracion .)
    t_return        reduce using rule 60 (S_F -> Declaracion .)
    t_goto          reduce using rule 60 (S_F -> Declaracion .)
    t_for           reduce using rule 60 (S_F -> Declaracion .)
    t_char          reduce using rule 60 (S_F -> Declaracion .)
    t_int           reduce using rule 60 (S_F -> Declaracion .)
    t_double        reduce using rule 60 (S_F -> Declaracion .)
    t_float         reduce using rule 60 (S_F -> Declaracion .)
    t_default       reduce using rule 60 (S_F -> Declaracion .)
    t_case          reduce using rule 60 (S_F -> Declaracion .)


state 180

    (61) S_F -> LASIGNACION . pyc
    (19) LASIGNACION -> LASIGNACION . coma ASIGNACION

    pyc             shift and go to state 208
    coma            shift and go to state 21


state 181

    (62) S_F -> STRUCT . pyc

    pyc             shift and go to state 209


state 182

    (63) S_F -> IF .

    llav2           reduce using rule 63 (S_F -> IF .)
    t_struct        reduce using rule 63 (S_F -> IF .)
    t_if            reduce using rule 63 (S_F -> IF .)
    iden            reduce using rule 63 (S_F -> IF .)
    t_break         reduce using rule 63 (S_F -> IF .)
    t_continue      reduce using rule 63 (S_F -> IF .)
    t_switch        reduce using rule 63 (S_F -> IF .)
    t_do            reduce using rule 63 (S_F -> IF .)
    t_while         reduce using rule 63 (S_F -> IF .)
    t_return        reduce using rule 63 (S_F -> IF .)
    t_goto          reduce using rule 63 (S_F -> IF .)
    t_for           reduce using rule 63 (S_F -> IF .)
    t_char          reduce using rule 63 (S_F -> IF .)
    t_int           reduce using rule 63 (S_F -> IF .)
    t_double        reduce using rule 63 (S_F -> IF .)
    t_float         reduce using rule 63 (S_F -> IF .)
    t_default       reduce using rule 63 (S_F -> IF .)
    t_case          reduce using rule 63 (S_F -> IF .)


state 183

    (64) S_F -> LLAMADA . pyc

    pyc             shift and go to state 210


state 184

    (65) S_F -> BREAK . pyc

    pyc             shift and go to state 211


state 185

    (66) S_F -> CONTINUE . pyc

    pyc             shift and go to state 212


state 186

    (67) S_F -> SWITCH .

    llav2           reduce using rule 67 (S_F -> SWITCH .)
    t_struct        reduce using rule 67 (S_F -> SWITCH .)
    t_if            reduce using rule 67 (S_F -> SWITCH .)
    iden            reduce using rule 67 (S_F -> SWITCH .)
    t_break         reduce using rule 67 (S_F -> SWITCH .)
    t_continue      reduce using rule 67 (S_F -> SWITCH .)
    t_switch        reduce using rule 67 (S_F -> SWITCH .)
    t_do            reduce using rule 67 (S_F -> SWITCH .)
    t_while         reduce using rule 67 (S_F -> SWITCH .)
    t_return        reduce using rule 67 (S_F -> SWITCH .)
    t_goto          reduce using rule 67 (S_F -> SWITCH .)
    t_for           reduce using rule 67 (S_F -> SWITCH .)
    t_char          reduce using rule 67 (S_F -> SWITCH .)
    t_int           reduce using rule 67 (S_F -> SWITCH .)
    t_double        reduce using rule 67 (S_F -> SWITCH .)
    t_float         reduce using rule 67 (S_F -> SWITCH .)
    t_default       reduce using rule 67 (S_F -> SWITCH .)
    t_case          reduce using rule 67 (S_F -> SWITCH .)


state 187

    (68) S_F -> DO_WHILE . pyc

    pyc             shift and go to state 213


state 188

    (69) S_F -> WHILE .

    llav2           reduce using rule 69 (S_F -> WHILE .)
    t_struct        reduce using rule 69 (S_F -> WHILE .)
    t_if            reduce using rule 69 (S_F -> WHILE .)
    iden            reduce using rule 69 (S_F -> WHILE .)
    t_break         reduce using rule 69 (S_F -> WHILE .)
    t_continue      reduce using rule 69 (S_F -> WHILE .)
    t_switch        reduce using rule 69 (S_F -> WHILE .)
    t_do            reduce using rule 69 (S_F -> WHILE .)
    t_while         reduce using rule 69 (S_F -> WHILE .)
    t_return        reduce using rule 69 (S_F -> WHILE .)
    t_goto          reduce using rule 69 (S_F -> WHILE .)
    t_for           reduce using rule 69 (S_F -> WHILE .)
    t_char          reduce using rule 69 (S_F -> WHILE .)
    t_int           reduce using rule 69 (S_F -> WHILE .)
    t_double        reduce using rule 69 (S_F -> WHILE .)
    t_float         reduce using rule 69 (S_F -> WHILE .)
    t_default       reduce using rule 69 (S_F -> WHILE .)
    t_case          reduce using rule 69 (S_F -> WHILE .)


state 189

    (70) S_F -> RETURN .

    llav2           reduce using rule 70 (S_F -> RETURN .)
    t_struct        reduce using rule 70 (S_F -> RETURN .)
    t_if            reduce using rule 70 (S_F -> RETURN .)
    iden            reduce using rule 70 (S_F -> RETURN .)
    t_break         reduce using rule 70 (S_F -> RETURN .)
    t_continue      reduce using rule 70 (S_F -> RETURN .)
    t_switch        reduce using rule 70 (S_F -> RETURN .)
    t_do            reduce using rule 70 (S_F -> RETURN .)
    t_while         reduce using rule 70 (S_F -> RETURN .)
    t_return        reduce using rule 70 (S_F -> RETURN .)
    t_goto          reduce using rule 70 (S_F -> RETURN .)
    t_for           reduce using rule 70 (S_F -> RETURN .)
    t_char          reduce using rule 70 (S_F -> RETURN .)
    t_int           reduce using rule 70 (S_F -> RETURN .)
    t_double        reduce using rule 70 (S_F -> RETURN .)
    t_float         reduce using rule 70 (S_F -> RETURN .)
    t_default       reduce using rule 70 (S_F -> RETURN .)
    t_case          reduce using rule 70 (S_F -> RETURN .)


state 190

    (71) S_F -> ETIQUETA .

    llav2           reduce using rule 71 (S_F -> ETIQUETA .)
    t_struct        reduce using rule 71 (S_F -> ETIQUETA .)
    t_if            reduce using rule 71 (S_F -> ETIQUETA .)
    iden            reduce using rule 71 (S_F -> ETIQUETA .)
    t_break         reduce using rule 71 (S_F -> ETIQUETA .)
    t_continue      reduce using rule 71 (S_F -> ETIQUETA .)
    t_switch        reduce using rule 71 (S_F -> ETIQUETA .)
    t_do            reduce using rule 71 (S_F -> ETIQUETA .)
    t_while         reduce using rule 71 (S_F -> ETIQUETA .)
    t_return        reduce using rule 71 (S_F -> ETIQUETA .)
    t_goto          reduce using rule 71 (S_F -> ETIQUETA .)
    t_for           reduce using rule 71 (S_F -> ETIQUETA .)
    t_char          reduce using rule 71 (S_F -> ETIQUETA .)
    t_int           reduce using rule 71 (S_F -> ETIQUETA .)
    t_double        reduce using rule 71 (S_F -> ETIQUETA .)
    t_float         reduce using rule 71 (S_F -> ETIQUETA .)
    t_default       reduce using rule 71 (S_F -> ETIQUETA .)
    t_case          reduce using rule 71 (S_F -> ETIQUETA .)


state 191

    (72) S_F -> GOTO . pyc

    pyc             shift and go to state 214


state 192

    (73) S_F -> FOR .

    llav2           reduce using rule 73 (S_F -> FOR .)
    t_struct        reduce using rule 73 (S_F -> FOR .)
    t_if            reduce using rule 73 (S_F -> FOR .)
    iden            reduce using rule 73 (S_F -> FOR .)
    t_break         reduce using rule 73 (S_F -> FOR .)
    t_continue      reduce using rule 73 (S_F -> FOR .)
    t_switch        reduce using rule 73 (S_F -> FOR .)
    t_do            reduce using rule 73 (S_F -> FOR .)
    t_while         reduce using rule 73 (S_F -> FOR .)
    t_return        reduce using rule 73 (S_F -> FOR .)
    t_goto          reduce using rule 73 (S_F -> FOR .)
    t_for           reduce using rule 73 (S_F -> FOR .)
    t_char          reduce using rule 73 (S_F -> FOR .)
    t_int           reduce using rule 73 (S_F -> FOR .)
    t_double        reduce using rule 73 (S_F -> FOR .)
    t_float         reduce using rule 73 (S_F -> FOR .)
    t_default       reduce using rule 73 (S_F -> FOR .)
    t_case          reduce using rule 73 (S_F -> FOR .)


state 193

    (9) Declaracion -> Tipos . L_Dec pyc
    (10) L_Dec -> . L_Dec coma Dec
    (11) L_Dec -> . Dec
    (12) Dec -> . iden
    (13) Dec -> . iden asigna EXP
    (14) Dec -> . iden cor1 cor2 asigna EXP
    (15) Dec -> . iden LACCESO
    (16) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 78

    L_Dec                          shift and go to state 23
    Dec                            shift and go to state 25

state 194

    (103) LLAMADA -> iden . par1 ELEMENTS par2
    (104) LLAMADA -> iden . par1 par2
    (82) ETIQUETA -> iden . bipunto
    (21) ASIGNACION -> iden .
    (22) ASIGNACION -> iden . OP EXP
    (23) ASIGNACION -> iden . LACCESO
    (24) ASIGNACION -> iden . LACCESO OP EXP
    (46) ItemsStruct2 -> iden .
    (47) ItemsStruct2 -> iden . LACCESO
    (27) OP -> . andbasigna
    (28) OP -> . divasigna
    (29) OP -> . masasigna
    (30) OP -> . menosasigna
    (31) OP -> . modasigna
    (32) OP -> . orbasigna
    (33) OP -> . porasigna
    (34) OP -> . shiftizqasigna
    (35) OP -> . shiftderasigna
    (36) OP -> . xorbasinga
    (37) OP -> . asigna
    (17) LACCESO -> . LACCESO cor1 EXP cor2
    (18) LACCESO -> . cor1 EXP cor2

    par1            shift and go to state 88
    bipunto         shift and go to state 215
    pyc             reduce using rule 21 (ASIGNACION -> iden .)
    coma            reduce using rule 21 (ASIGNACION -> iden .)
    punto           reduce using rule 46 (ItemsStruct2 -> iden .)
    andbasigna      shift and go to state 29
    divasigna       shift and go to state 30
    masasigna       shift and go to state 31
    menosasigna     shift and go to state 32
    modasigna       shift and go to state 33
    orbasigna       shift and go to state 34
    porasigna       shift and go to state 35
    shiftizqasigna  shift and go to state 36
    shiftderasigna  shift and go to state 37
    xorbasinga      shift and go to state 38
    asigna          shift and go to state 39
    cor1            shift and go to state 40

    OP                             shift and go to state 27
    LACCESO                        shift and go to state 28

state 195

    (98) IF -> t_if . par1 EXP par2 BLOQUE
    (99) IF -> t_if . par1 EXP par2 BLOQUE t_else IF
    (100) IF -> t_if . par1 EXP par2 BLOQUE t_else BLOQUE

    par1            shift and go to state 216


state 196

    (96) BREAK -> t_break .

    pyc             reduce using rule 96 (BREAK -> t_break .)


state 197

    (97) CONTINUE -> t_continue .

    pyc             reduce using rule 97 (CONTINUE -> t_continue .)


state 198

    (88) SWITCH -> t_switch . par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> t_switch . par1 EXP par2 llav1 CASOS DEFAULT llav2

    par1            shift and go to state 217


state 199

    (84) DO_WHILE -> t_do . BLOQUE t_while par1 EXP par2
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 218

state 200

    (85) WHILE -> t_while . par1 EXP par2 BLOQUE

    par1            shift and go to state 219


state 201

    (86) RETURN -> t_return . EXP
    (87) RETURN -> t_return .
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

  ! shift/reduce conflict for iden resolved as shift
    llav2           reduce using rule 87 (RETURN -> t_return .)
    t_struct        reduce using rule 87 (RETURN -> t_return .)
    t_if            reduce using rule 87 (RETURN -> t_return .)
    t_break         reduce using rule 87 (RETURN -> t_return .)
    t_continue      reduce using rule 87 (RETURN -> t_return .)
    t_switch        reduce using rule 87 (RETURN -> t_return .)
    t_do            reduce using rule 87 (RETURN -> t_return .)
    t_while         reduce using rule 87 (RETURN -> t_return .)
    t_return        reduce using rule 87 (RETURN -> t_return .)
    t_goto          reduce using rule 87 (RETURN -> t_return .)
    t_for           reduce using rule 87 (RETURN -> t_return .)
    t_char          reduce using rule 87 (RETURN -> t_return .)
    t_int           reduce using rule 87 (RETURN -> t_return .)
    t_double        reduce using rule 87 (RETURN -> t_return .)
    t_float         reduce using rule 87 (RETURN -> t_return .)
    t_default       reduce using rule 87 (RETURN -> t_return .)
    t_case          reduce using rule 87 (RETURN -> t_return .)
    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

  ! iden            [ reduce using rule 87 (RETURN -> t_return .) ]

    EXP                            shift and go to state 220
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 202

    (83) GOTO -> t_goto . iden

    iden            shift and go to state 221


state 203

    (76) FOR -> t_for . par1 INICIO EXP pyc INCDC BLOQUE

    par1            shift and go to state 222


state 204

    (42) LItemsStruct -> LItemsStruct coma ItemsStruct .

    pyc             reduce using rule 42 (LItemsStruct -> LItemsStruct coma ItemsStruct .)
    coma            reduce using rule 42 (LItemsStruct -> LItemsStruct coma ItemsStruct .)


state 205

    (136) EXP -> EXP condicional EXP bipunto EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    coma            reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    cor2            reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    par2            reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    llav2           reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    bipunto         reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_struct        reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_if            reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    iden            reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_break         reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_continue      reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_switch        reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_do            reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_while         reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_return        reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_goto          reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_for           reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_char          reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_int           reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_double        reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_float         reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_default       reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    t_case          reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110

  ! mas             [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! menos           [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! por             [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! division        [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! modulo          [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! mayor           [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! mayori          [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! menor           [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! menori          [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! igual           [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! diferente       [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! and             [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! or              [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! shiftizq        [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! shiftder        [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! andb            [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! xorb            [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! orb             [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! condicional     [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! incremento      [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]
  ! decremento      [ reduce using rule 136 (EXP -> EXP condicional EXP bipunto EXP .) ]


state 206

    (74) BLOQUE -> llav1 SS_F llav2 .

    t_struct        reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_void          reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_char          reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_int           reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_double        reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_float         reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    iden            reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    $end            reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_while         reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_else          reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    llav2           reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_if            reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_break         reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_continue      reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_switch        reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_do            reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_return        reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_goto          reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_for           reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_default       reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)
    t_case          reduce using rule 74 (BLOQUE -> llav1 SS_F llav2 .)


state 207

    (58) SS_F -> SS_F S_F .

    llav2           reduce using rule 58 (SS_F -> SS_F S_F .)
    t_struct        reduce using rule 58 (SS_F -> SS_F S_F .)
    t_if            reduce using rule 58 (SS_F -> SS_F S_F .)
    iden            reduce using rule 58 (SS_F -> SS_F S_F .)
    t_break         reduce using rule 58 (SS_F -> SS_F S_F .)
    t_continue      reduce using rule 58 (SS_F -> SS_F S_F .)
    t_switch        reduce using rule 58 (SS_F -> SS_F S_F .)
    t_do            reduce using rule 58 (SS_F -> SS_F S_F .)
    t_while         reduce using rule 58 (SS_F -> SS_F S_F .)
    t_return        reduce using rule 58 (SS_F -> SS_F S_F .)
    t_goto          reduce using rule 58 (SS_F -> SS_F S_F .)
    t_for           reduce using rule 58 (SS_F -> SS_F S_F .)
    t_char          reduce using rule 58 (SS_F -> SS_F S_F .)
    t_int           reduce using rule 58 (SS_F -> SS_F S_F .)
    t_double        reduce using rule 58 (SS_F -> SS_F S_F .)
    t_float         reduce using rule 58 (SS_F -> SS_F S_F .)
    t_default       reduce using rule 58 (SS_F -> SS_F S_F .)
    t_case          reduce using rule 58 (SS_F -> SS_F S_F .)


state 208

    (61) S_F -> LASIGNACION pyc .

    llav2           reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_struct        reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_if            reduce using rule 61 (S_F -> LASIGNACION pyc .)
    iden            reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_break         reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_continue      reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_switch        reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_do            reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_while         reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_return        reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_goto          reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_for           reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_char          reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_int           reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_double        reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_float         reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_default       reduce using rule 61 (S_F -> LASIGNACION pyc .)
    t_case          reduce using rule 61 (S_F -> LASIGNACION pyc .)


state 209

    (62) S_F -> STRUCT pyc .

    llav2           reduce using rule 62 (S_F -> STRUCT pyc .)
    t_struct        reduce using rule 62 (S_F -> STRUCT pyc .)
    t_if            reduce using rule 62 (S_F -> STRUCT pyc .)
    iden            reduce using rule 62 (S_F -> STRUCT pyc .)
    t_break         reduce using rule 62 (S_F -> STRUCT pyc .)
    t_continue      reduce using rule 62 (S_F -> STRUCT pyc .)
    t_switch        reduce using rule 62 (S_F -> STRUCT pyc .)
    t_do            reduce using rule 62 (S_F -> STRUCT pyc .)
    t_while         reduce using rule 62 (S_F -> STRUCT pyc .)
    t_return        reduce using rule 62 (S_F -> STRUCT pyc .)
    t_goto          reduce using rule 62 (S_F -> STRUCT pyc .)
    t_for           reduce using rule 62 (S_F -> STRUCT pyc .)
    t_char          reduce using rule 62 (S_F -> STRUCT pyc .)
    t_int           reduce using rule 62 (S_F -> STRUCT pyc .)
    t_double        reduce using rule 62 (S_F -> STRUCT pyc .)
    t_float         reduce using rule 62 (S_F -> STRUCT pyc .)
    t_default       reduce using rule 62 (S_F -> STRUCT pyc .)
    t_case          reduce using rule 62 (S_F -> STRUCT pyc .)


state 210

    (64) S_F -> LLAMADA pyc .

    llav2           reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_struct        reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_if            reduce using rule 64 (S_F -> LLAMADA pyc .)
    iden            reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_break         reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_continue      reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_switch        reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_do            reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_while         reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_return        reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_goto          reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_for           reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_char          reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_int           reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_double        reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_float         reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_default       reduce using rule 64 (S_F -> LLAMADA pyc .)
    t_case          reduce using rule 64 (S_F -> LLAMADA pyc .)


state 211

    (65) S_F -> BREAK pyc .

    llav2           reduce using rule 65 (S_F -> BREAK pyc .)
    t_struct        reduce using rule 65 (S_F -> BREAK pyc .)
    t_if            reduce using rule 65 (S_F -> BREAK pyc .)
    iden            reduce using rule 65 (S_F -> BREAK pyc .)
    t_break         reduce using rule 65 (S_F -> BREAK pyc .)
    t_continue      reduce using rule 65 (S_F -> BREAK pyc .)
    t_switch        reduce using rule 65 (S_F -> BREAK pyc .)
    t_do            reduce using rule 65 (S_F -> BREAK pyc .)
    t_while         reduce using rule 65 (S_F -> BREAK pyc .)
    t_return        reduce using rule 65 (S_F -> BREAK pyc .)
    t_goto          reduce using rule 65 (S_F -> BREAK pyc .)
    t_for           reduce using rule 65 (S_F -> BREAK pyc .)
    t_char          reduce using rule 65 (S_F -> BREAK pyc .)
    t_int           reduce using rule 65 (S_F -> BREAK pyc .)
    t_double        reduce using rule 65 (S_F -> BREAK pyc .)
    t_float         reduce using rule 65 (S_F -> BREAK pyc .)
    t_default       reduce using rule 65 (S_F -> BREAK pyc .)
    t_case          reduce using rule 65 (S_F -> BREAK pyc .)


state 212

    (66) S_F -> CONTINUE pyc .

    llav2           reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_struct        reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_if            reduce using rule 66 (S_F -> CONTINUE pyc .)
    iden            reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_break         reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_continue      reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_switch        reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_do            reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_while         reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_return        reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_goto          reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_for           reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_char          reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_int           reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_double        reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_float         reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_default       reduce using rule 66 (S_F -> CONTINUE pyc .)
    t_case          reduce using rule 66 (S_F -> CONTINUE pyc .)


state 213

    (68) S_F -> DO_WHILE pyc .

    llav2           reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_struct        reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_if            reduce using rule 68 (S_F -> DO_WHILE pyc .)
    iden            reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_break         reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_continue      reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_switch        reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_do            reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_while         reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_return        reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_goto          reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_for           reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_char          reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_int           reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_double        reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_float         reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_default       reduce using rule 68 (S_F -> DO_WHILE pyc .)
    t_case          reduce using rule 68 (S_F -> DO_WHILE pyc .)


state 214

    (72) S_F -> GOTO pyc .

    llav2           reduce using rule 72 (S_F -> GOTO pyc .)
    t_struct        reduce using rule 72 (S_F -> GOTO pyc .)
    t_if            reduce using rule 72 (S_F -> GOTO pyc .)
    iden            reduce using rule 72 (S_F -> GOTO pyc .)
    t_break         reduce using rule 72 (S_F -> GOTO pyc .)
    t_continue      reduce using rule 72 (S_F -> GOTO pyc .)
    t_switch        reduce using rule 72 (S_F -> GOTO pyc .)
    t_do            reduce using rule 72 (S_F -> GOTO pyc .)
    t_while         reduce using rule 72 (S_F -> GOTO pyc .)
    t_return        reduce using rule 72 (S_F -> GOTO pyc .)
    t_goto          reduce using rule 72 (S_F -> GOTO pyc .)
    t_for           reduce using rule 72 (S_F -> GOTO pyc .)
    t_char          reduce using rule 72 (S_F -> GOTO pyc .)
    t_int           reduce using rule 72 (S_F -> GOTO pyc .)
    t_double        reduce using rule 72 (S_F -> GOTO pyc .)
    t_float         reduce using rule 72 (S_F -> GOTO pyc .)
    t_default       reduce using rule 72 (S_F -> GOTO pyc .)
    t_case          reduce using rule 72 (S_F -> GOTO pyc .)


state 215

    (82) ETIQUETA -> iden bipunto .

    llav2           reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_struct        reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_if            reduce using rule 82 (ETIQUETA -> iden bipunto .)
    iden            reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_break         reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_continue      reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_switch        reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_do            reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_while         reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_return        reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_goto          reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_for           reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_char          reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_int           reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_double        reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_float         reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_default       reduce using rule 82 (ETIQUETA -> iden bipunto .)
    t_case          reduce using rule 82 (ETIQUETA -> iden bipunto .)


state 216

    (98) IF -> t_if par1 . EXP par2 BLOQUE
    (99) IF -> t_if par1 . EXP par2 BLOQUE t_else IF
    (100) IF -> t_if par1 . EXP par2 BLOQUE t_else BLOQUE
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 223
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 217

    (88) SWITCH -> t_switch par1 . EXP par2 llav1 CASOS llav2
    (89) SWITCH -> t_switch par1 . EXP par2 llav1 CASOS DEFAULT llav2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 224
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 218

    (84) DO_WHILE -> t_do BLOQUE . t_while par1 EXP par2

    t_while         shift and go to state 225


state 219

    (85) WHILE -> t_while par1 . EXP par2 BLOQUE
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 226
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 220

    (86) RETURN -> t_return EXP .
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    llav2           reduce using rule 86 (RETURN -> t_return EXP .)
    t_struct        reduce using rule 86 (RETURN -> t_return EXP .)
    t_if            reduce using rule 86 (RETURN -> t_return EXP .)
    iden            reduce using rule 86 (RETURN -> t_return EXP .)
    t_break         reduce using rule 86 (RETURN -> t_return EXP .)
    t_continue      reduce using rule 86 (RETURN -> t_return EXP .)
    t_switch        reduce using rule 86 (RETURN -> t_return EXP .)
    t_do            reduce using rule 86 (RETURN -> t_return EXP .)
    t_while         reduce using rule 86 (RETURN -> t_return EXP .)
    t_return        reduce using rule 86 (RETURN -> t_return EXP .)
    t_goto          reduce using rule 86 (RETURN -> t_return EXP .)
    t_for           reduce using rule 86 (RETURN -> t_return EXP .)
    t_char          reduce using rule 86 (RETURN -> t_return EXP .)
    t_int           reduce using rule 86 (RETURN -> t_return EXP .)
    t_double        reduce using rule 86 (RETURN -> t_return EXP .)
    t_float         reduce using rule 86 (RETURN -> t_return EXP .)
    t_default       reduce using rule 86 (RETURN -> t_return EXP .)
    t_case          reduce using rule 86 (RETURN -> t_return EXP .)
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 221

    (83) GOTO -> t_goto iden .

    pyc             reduce using rule 83 (GOTO -> t_goto iden .)


state 222

    (76) FOR -> t_for par1 . INICIO EXP pyc INCDC BLOQUE
    (77) INICIO -> . Tipos Dec pyc
    (78) INICIO -> . ASIGNACION pyc
    (79) INICIO -> . pyc
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    pyc             shift and go to state 228
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16
    iden            shift and go to state 11

    INICIO                         shift and go to state 227
    Tipos                          shift and go to state 229
    ASIGNACION                     shift and go to state 230
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 223

    (98) IF -> t_if par1 EXP . par2 BLOQUE
    (99) IF -> t_if par1 EXP . par2 BLOQUE t_else IF
    (100) IF -> t_if par1 EXP . par2 BLOQUE t_else BLOQUE
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 231
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 224

    (88) SWITCH -> t_switch par1 EXP . par2 llav1 CASOS llav2
    (89) SWITCH -> t_switch par1 EXP . par2 llav1 CASOS DEFAULT llav2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 232
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 225

    (84) DO_WHILE -> t_do BLOQUE t_while . par1 EXP par2

    par1            shift and go to state 233


state 226

    (85) WHILE -> t_while par1 EXP . par2 BLOQUE
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 234
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 227

    (76) FOR -> t_for par1 INICIO . EXP pyc INCDC BLOQUE
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 235
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 228

    (79) INICIO -> pyc .

    string          reduce using rule 79 (INICIO -> pyc .)
    entero          reduce using rule 79 (INICIO -> pyc .)
    decimal         reduce using rule 79 (INICIO -> pyc .)
    char            reduce using rule 79 (INICIO -> pyc .)
    iden            reduce using rule 79 (INICIO -> pyc .)
    par1            reduce using rule 79 (INICIO -> pyc .)
    mas             reduce using rule 79 (INICIO -> pyc .)
    menos           reduce using rule 79 (INICIO -> pyc .)
    not             reduce using rule 79 (INICIO -> pyc .)
    notb            reduce using rule 79 (INICIO -> pyc .)
    andb            reduce using rule 79 (INICIO -> pyc .)
    incremento      reduce using rule 79 (INICIO -> pyc .)
    decremento      reduce using rule 79 (INICIO -> pyc .)
    llav1           reduce using rule 79 (INICIO -> pyc .)
    t_sizeof        reduce using rule 79 (INICIO -> pyc .)


state 229

    (77) INICIO -> Tipos . Dec pyc
    (12) Dec -> . iden
    (13) Dec -> . iden asigna EXP
    (14) Dec -> . iden cor1 cor2 asigna EXP
    (15) Dec -> . iden LACCESO
    (16) Dec -> . iden LACCESO asigna EXP

    iden            shift and go to state 78

    Dec                            shift and go to state 236

state 230

    (78) INICIO -> ASIGNACION . pyc

    pyc             shift and go to state 237


state 231

    (98) IF -> t_if par1 EXP par2 . BLOQUE
    (99) IF -> t_if par1 EXP par2 . BLOQUE t_else IF
    (100) IF -> t_if par1 EXP par2 . BLOQUE t_else BLOQUE
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 238

state 232

    (88) SWITCH -> t_switch par1 EXP par2 . llav1 CASOS llav2
    (89) SWITCH -> t_switch par1 EXP par2 . llav1 CASOS DEFAULT llav2

    llav1           shift and go to state 239


state 233

    (84) DO_WHILE -> t_do BLOQUE t_while par1 . EXP par2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 240
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 234

    (85) WHILE -> t_while par1 EXP par2 . BLOQUE
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 241

state 235

    (76) FOR -> t_for par1 INICIO EXP . pyc INCDC BLOQUE
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    pyc             shift and go to state 242
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 236

    (77) INICIO -> Tipos Dec . pyc

    pyc             shift and go to state 243


state 237

    (78) INICIO -> ASIGNACION pyc .

    string          reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    entero          reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    decimal         reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    char            reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    iden            reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    par1            reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    mas             reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    menos           reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    not             reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    notb            reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    andb            reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    incremento      reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    decremento      reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    llav1           reduce using rule 78 (INICIO -> ASIGNACION pyc .)
    t_sizeof        reduce using rule 78 (INICIO -> ASIGNACION pyc .)


state 238

    (98) IF -> t_if par1 EXP par2 BLOQUE .
    (99) IF -> t_if par1 EXP par2 BLOQUE . t_else IF
    (100) IF -> t_if par1 EXP par2 BLOQUE . t_else BLOQUE

    llav2           reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_struct        reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_if            reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    iden            reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_break         reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_continue      reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_switch        reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_do            reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_while         reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_return        reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_goto          reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_for           reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_char          reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_int           reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_double        reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_float         reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_default       reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_case          reduce using rule 98 (IF -> t_if par1 EXP par2 BLOQUE .)
    t_else          shift and go to state 244


state 239

    (88) SWITCH -> t_switch par1 EXP par2 llav1 . CASOS llav2
    (89) SWITCH -> t_switch par1 EXP par2 llav1 . CASOS DEFAULT llav2
    (90) CASOS -> . CASOS CASO
    (91) CASOS -> . CASO
    (92) CASO -> . t_case EXP bipunto SS_F
    (93) CASO -> . t_case EXP bipunto

    t_case          shift and go to state 247

    CASOS                          shift and go to state 245
    CASO                           shift and go to state 246

state 240

    (84) DO_WHILE -> t_do BLOQUE t_while par1 EXP . par2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 248
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 241

    (85) WHILE -> t_while par1 EXP par2 BLOQUE .

    llav2           reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_struct        reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_if            reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    iden            reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_break         reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_continue      reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_switch        reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_do            reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_while         reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_return        reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_goto          reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_for           reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_char          reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_int           reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_double        reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_float         reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_default       reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)
    t_case          reduce using rule 85 (WHILE -> t_while par1 EXP par2 BLOQUE .)


state 242

    (76) FOR -> t_for par1 INICIO EXP pyc . INCDC BLOQUE
    (80) INCDC -> . EXP par2
    (81) INCDC -> . par2
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    par2            shift and go to state 251
    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 249
    INCDC                          shift and go to state 250
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 243

    (77) INICIO -> Tipos Dec pyc .

    string          reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    entero          reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    decimal         reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    char            reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    iden            reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    par1            reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    mas             reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    menos           reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    not             reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    notb            reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    andb            reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    incremento      reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    decremento      reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    llav1           reduce using rule 77 (INICIO -> Tipos Dec pyc .)
    t_sizeof        reduce using rule 77 (INICIO -> Tipos Dec pyc .)


state 244

    (99) IF -> t_if par1 EXP par2 BLOQUE t_else . IF
    (100) IF -> t_if par1 EXP par2 BLOQUE t_else . BLOQUE
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    t_if            shift and go to state 195
    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 252
    IF                             shift and go to state 253

state 245

    (88) SWITCH -> t_switch par1 EXP par2 llav1 CASOS . llav2
    (89) SWITCH -> t_switch par1 EXP par2 llav1 CASOS . DEFAULT llav2
    (90) CASOS -> CASOS . CASO
    (94) DEFAULT -> . t_default bipunto SS_F
    (95) DEFAULT -> . t_default bipunto
    (92) CASO -> . t_case EXP bipunto SS_F
    (93) CASO -> . t_case EXP bipunto

    llav2           shift and go to state 254
    t_default       shift and go to state 257
    t_case          shift and go to state 247

    DEFAULT                        shift and go to state 255
    CASO                           shift and go to state 256

state 246

    (91) CASOS -> CASO .

    llav2           reduce using rule 91 (CASOS -> CASO .)
    t_default       reduce using rule 91 (CASOS -> CASO .)
    t_case          reduce using rule 91 (CASOS -> CASO .)


state 247

    (92) CASO -> t_case . EXP bipunto SS_F
    (93) CASO -> t_case . EXP bipunto
    (105) EXP -> . EXP mas EXP
    (106) EXP -> . EXP menos EXP
    (107) EXP -> . EXP por EXP
    (108) EXP -> . EXP division EXP
    (109) EXP -> . EXP modulo EXP
    (110) EXP -> . EXP mayor EXP
    (111) EXP -> . EXP mayori EXP
    (112) EXP -> . EXP menor EXP
    (113) EXP -> . EXP menori EXP
    (114) EXP -> . EXP igual EXP
    (115) EXP -> . EXP diferente EXP
    (116) EXP -> . EXP and EXP
    (117) EXP -> . EXP or EXP
    (118) EXP -> . string
    (119) EXP -> . entero
    (120) EXP -> . decimal
    (121) EXP -> . char
    (122) EXP -> . iden
    (123) EXP -> . par1 EXP par2
    (124) EXP -> . EXP shiftizq EXP
    (125) EXP -> . EXP shiftder EXP
    (126) EXP -> . EXP andb EXP
    (127) EXP -> . EXP xorb EXP
    (128) EXP -> . EXP orb EXP
    (129) EXP -> . mas EXP
    (130) EXP -> . menos EXP
    (131) EXP -> . not EXP
    (132) EXP -> . notb EXP
    (133) EXP -> . andb EXP
    (134) EXP -> . incremento EXP
    (135) EXP -> . decremento EXP
    (136) EXP -> . EXP condicional EXP bipunto EXP
    (137) EXP -> . EXP incremento
    (138) EXP -> . EXP decremento
    (139) EXP -> . llav1 ELEMENTS llav2
    (142) EXP -> . ACCESO_STRUCT
    (143) EXP -> . LLAMADA
    (144) EXP -> . t_sizeof par1 EXP par2
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    string          shift and go to state 56
    entero          shift and go to state 57
    decimal         shift and go to state 58
    char            shift and go to state 59
    iden            shift and go to state 52
    par1            shift and go to state 60
    mas             shift and go to state 54
    menos           shift and go to state 55
    not             shift and go to state 62
    notb            shift and go to state 63
    andb            shift and go to state 61
    incremento      shift and go to state 64
    decremento      shift and go to state 65
    llav1           shift and go to state 66
    t_sizeof        shift and go to state 69

    EXP                            shift and go to state 258
    ACCESO_STRUCT                  shift and go to state 67
    LLAMADA                        shift and go to state 68
    ItemsStruct2                   shift and go to state 18

state 248

    (84) DO_WHILE -> t_do BLOQUE t_while par1 EXP par2 .

    pyc             reduce using rule 84 (DO_WHILE -> t_do BLOQUE t_while par1 EXP par2 .)


state 249

    (80) INCDC -> EXP . par2
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    par2            shift and go to state 259
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 250

    (76) FOR -> t_for par1 INICIO EXP pyc INCDC . BLOQUE
    (74) BLOQUE -> . llav1 SS_F llav2
    (75) BLOQUE -> . llav1 llav2

    llav1           shift and go to state 165

    BLOQUE                         shift and go to state 260

state 251

    (81) INCDC -> par2 .

    llav1           reduce using rule 81 (INCDC -> par2 .)


state 252

    (100) IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .

    llav2           reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_struct        reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_if            reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    iden            reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_break         reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_continue      reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_switch        reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_do            reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_while         reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_return        reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_goto          reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_for           reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_char          reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_int           reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_double        reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_float         reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_default       reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)
    t_case          reduce using rule 100 (IF -> t_if par1 EXP par2 BLOQUE t_else BLOQUE .)


state 253

    (99) IF -> t_if par1 EXP par2 BLOQUE t_else IF .

    llav2           reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_struct        reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_if            reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    iden            reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_break         reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_continue      reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_switch        reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_do            reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_while         reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_return        reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_goto          reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_for           reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_char          reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_int           reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_double        reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_float         reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_default       reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)
    t_case          reduce using rule 99 (IF -> t_if par1 EXP par2 BLOQUE t_else IF .)


state 254

    (88) SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .

    llav2           reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_struct        reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_if            reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    iden            reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_break         reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_continue      reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_switch        reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_do            reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_while         reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_return        reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_goto          reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_for           reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_char          reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_int           reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_double        reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_float         reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_default       reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)
    t_case          reduce using rule 88 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS llav2 .)


state 255

    (89) SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT . llav2

    llav2           shift and go to state 261


state 256

    (90) CASOS -> CASOS CASO .

    llav2           reduce using rule 90 (CASOS -> CASOS CASO .)
    t_default       reduce using rule 90 (CASOS -> CASOS CASO .)
    t_case          reduce using rule 90 (CASOS -> CASOS CASO .)


state 257

    (94) DEFAULT -> t_default . bipunto SS_F
    (95) DEFAULT -> t_default . bipunto

    bipunto         shift and go to state 262


state 258

    (92) CASO -> t_case EXP . bipunto SS_F
    (93) CASO -> t_case EXP . bipunto
    (105) EXP -> EXP . mas EXP
    (106) EXP -> EXP . menos EXP
    (107) EXP -> EXP . por EXP
    (108) EXP -> EXP . division EXP
    (109) EXP -> EXP . modulo EXP
    (110) EXP -> EXP . mayor EXP
    (111) EXP -> EXP . mayori EXP
    (112) EXP -> EXP . menor EXP
    (113) EXP -> EXP . menori EXP
    (114) EXP -> EXP . igual EXP
    (115) EXP -> EXP . diferente EXP
    (116) EXP -> EXP . and EXP
    (117) EXP -> EXP . or EXP
    (124) EXP -> EXP . shiftizq EXP
    (125) EXP -> EXP . shiftder EXP
    (126) EXP -> EXP . andb EXP
    (127) EXP -> EXP . xorb EXP
    (128) EXP -> EXP . orb EXP
    (136) EXP -> EXP . condicional EXP bipunto EXP
    (137) EXP -> EXP . incremento
    (138) EXP -> EXP . decremento

    bipunto         shift and go to state 263
    mas             shift and go to state 90
    menos           shift and go to state 91
    por             shift and go to state 92
    division        shift and go to state 93
    modulo          shift and go to state 94
    mayor           shift and go to state 95
    mayori          shift and go to state 96
    menor           shift and go to state 97
    menori          shift and go to state 98
    igual           shift and go to state 99
    diferente       shift and go to state 100
    and             shift and go to state 101
    or              shift and go to state 102
    shiftizq        shift and go to state 103
    shiftder        shift and go to state 104
    andb            shift and go to state 105
    xorb            shift and go to state 106
    orb             shift and go to state 107
    condicional     shift and go to state 108
    incremento      shift and go to state 109
    decremento      shift and go to state 110


state 259

    (80) INCDC -> EXP par2 .

    llav1           reduce using rule 80 (INCDC -> EXP par2 .)


state 260

    (76) FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .

    llav2           reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_struct        reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_if            reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    iden            reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_break         reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_continue      reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_switch        reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_do            reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_while         reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_return        reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_goto          reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_for           reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_char          reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_int           reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_double        reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_float         reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_default       reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)
    t_case          reduce using rule 76 (FOR -> t_for par1 INICIO EXP pyc INCDC BLOQUE .)


state 261

    (89) SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .

    llav2           reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_struct        reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_if            reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    iden            reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_break         reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_continue      reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_switch        reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_do            reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_while         reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_return        reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_goto          reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_for           reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_char          reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_int           reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_double        reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_float         reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_default       reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)
    t_case          reduce using rule 89 (SWITCH -> t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2 .)


state 262

    (94) DEFAULT -> t_default bipunto . SS_F
    (95) DEFAULT -> t_default bipunto .
    (58) SS_F -> . SS_F S_F
    (59) SS_F -> . S_F
    (60) S_F -> . Declaracion
    (61) S_F -> . LASIGNACION pyc
    (62) S_F -> . STRUCT pyc
    (63) S_F -> . IF
    (64) S_F -> . LLAMADA pyc
    (65) S_F -> . BREAK pyc
    (66) S_F -> . CONTINUE pyc
    (67) S_F -> . SWITCH
    (68) S_F -> . DO_WHILE pyc
    (69) S_F -> . WHILE
    (70) S_F -> . RETURN
    (71) S_F -> . ETIQUETA
    (72) S_F -> . GOTO pyc
    (73) S_F -> . FOR
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (96) BREAK -> . t_break
    (97) CONTINUE -> . t_continue
    (88) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (84) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (85) WHILE -> . t_while par1 EXP par2 BLOQUE
    (86) RETURN -> . t_return EXP
    (87) RETURN -> . t_return
    (82) ETIQUETA -> . iden bipunto
    (83) GOTO -> . t_goto iden
    (76) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 95 (DEFAULT -> t_default bipunto .)
    t_struct        shift and go to state 10
    t_if            shift and go to state 195
    iden            shift and go to state 194
    t_break         shift and go to state 196
    t_continue      shift and go to state 197
    t_switch        shift and go to state 198
    t_do            shift and go to state 199
    t_while         shift and go to state 200
    t_return        shift and go to state 201
    t_goto          shift and go to state 202
    t_for           shift and go to state 203
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    SS_F                           shift and go to state 264
    S_F                            shift and go to state 178
    Declaracion                    shift and go to state 179
    LASIGNACION                    shift and go to state 180
    STRUCT                         shift and go to state 181
    IF                             shift and go to state 182
    LLAMADA                        shift and go to state 183
    BREAK                          shift and go to state 184
    CONTINUE                       shift and go to state 185
    SWITCH                         shift and go to state 186
    DO_WHILE                       shift and go to state 187
    WHILE                          shift and go to state 188
    RETURN                         shift and go to state 189
    ETIQUETA                       shift and go to state 190
    GOTO                           shift and go to state 191
    FOR                            shift and go to state 192
    Tipos                          shift and go to state 193
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 263

    (92) CASO -> t_case EXP bipunto . SS_F
    (93) CASO -> t_case EXP bipunto .
    (58) SS_F -> . SS_F S_F
    (59) SS_F -> . S_F
    (60) S_F -> . Declaracion
    (61) S_F -> . LASIGNACION pyc
    (62) S_F -> . STRUCT pyc
    (63) S_F -> . IF
    (64) S_F -> . LLAMADA pyc
    (65) S_F -> . BREAK pyc
    (66) S_F -> . CONTINUE pyc
    (67) S_F -> . SWITCH
    (68) S_F -> . DO_WHILE pyc
    (69) S_F -> . WHILE
    (70) S_F -> . RETURN
    (71) S_F -> . ETIQUETA
    (72) S_F -> . GOTO pyc
    (73) S_F -> . FOR
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (96) BREAK -> . t_break
    (97) CONTINUE -> . t_continue
    (88) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (84) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (85) WHILE -> . t_while par1 EXP par2 BLOQUE
    (86) RETURN -> . t_return EXP
    (87) RETURN -> . t_return
    (82) ETIQUETA -> . iden bipunto
    (83) GOTO -> . t_goto iden
    (76) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 93 (CASO -> t_case EXP bipunto .)
    t_default       reduce using rule 93 (CASO -> t_case EXP bipunto .)
    t_case          reduce using rule 93 (CASO -> t_case EXP bipunto .)
    t_struct        shift and go to state 10
    t_if            shift and go to state 195
    iden            shift and go to state 194
    t_break         shift and go to state 196
    t_continue      shift and go to state 197
    t_switch        shift and go to state 198
    t_do            shift and go to state 199
    t_while         shift and go to state 200
    t_return        shift and go to state 201
    t_goto          shift and go to state 202
    t_for           shift and go to state 203
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    SS_F                           shift and go to state 265
    S_F                            shift and go to state 178
    Declaracion                    shift and go to state 179
    LASIGNACION                    shift and go to state 180
    STRUCT                         shift and go to state 181
    IF                             shift and go to state 182
    LLAMADA                        shift and go to state 183
    BREAK                          shift and go to state 184
    CONTINUE                       shift and go to state 185
    SWITCH                         shift and go to state 186
    DO_WHILE                       shift and go to state 187
    WHILE                          shift and go to state 188
    RETURN                         shift and go to state 189
    ETIQUETA                       shift and go to state 190
    GOTO                           shift and go to state 191
    FOR                            shift and go to state 192
    Tipos                          shift and go to state 193
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 264

    (94) DEFAULT -> t_default bipunto SS_F .
    (58) SS_F -> SS_F . S_F
    (60) S_F -> . Declaracion
    (61) S_F -> . LASIGNACION pyc
    (62) S_F -> . STRUCT pyc
    (63) S_F -> . IF
    (64) S_F -> . LLAMADA pyc
    (65) S_F -> . BREAK pyc
    (66) S_F -> . CONTINUE pyc
    (67) S_F -> . SWITCH
    (68) S_F -> . DO_WHILE pyc
    (69) S_F -> . WHILE
    (70) S_F -> . RETURN
    (71) S_F -> . ETIQUETA
    (72) S_F -> . GOTO pyc
    (73) S_F -> . FOR
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (96) BREAK -> . t_break
    (97) CONTINUE -> . t_continue
    (88) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (84) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (85) WHILE -> . t_while par1 EXP par2 BLOQUE
    (86) RETURN -> . t_return EXP
    (87) RETURN -> . t_return
    (82) ETIQUETA -> . iden bipunto
    (83) GOTO -> . t_goto iden
    (76) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 94 (DEFAULT -> t_default bipunto SS_F .)
    t_struct        shift and go to state 10
    t_if            shift and go to state 195
    iden            shift and go to state 194
    t_break         shift and go to state 196
    t_continue      shift and go to state 197
    t_switch        shift and go to state 198
    t_do            shift and go to state 199
    t_while         shift and go to state 200
    t_return        shift and go to state 201
    t_goto          shift and go to state 202
    t_for           shift and go to state 203
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    S_F                            shift and go to state 207
    Declaracion                    shift and go to state 179
    LASIGNACION                    shift and go to state 180
    STRUCT                         shift and go to state 181
    IF                             shift and go to state 182
    LLAMADA                        shift and go to state 183
    BREAK                          shift and go to state 184
    CONTINUE                       shift and go to state 185
    SWITCH                         shift and go to state 186
    DO_WHILE                       shift and go to state 187
    WHILE                          shift and go to state 188
    RETURN                         shift and go to state 189
    ETIQUETA                       shift and go to state 190
    GOTO                           shift and go to state 191
    FOR                            shift and go to state 192
    Tipos                          shift and go to state 193
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18

state 265

    (92) CASO -> t_case EXP bipunto SS_F .
    (58) SS_F -> SS_F . S_F
    (60) S_F -> . Declaracion
    (61) S_F -> . LASIGNACION pyc
    (62) S_F -> . STRUCT pyc
    (63) S_F -> . IF
    (64) S_F -> . LLAMADA pyc
    (65) S_F -> . BREAK pyc
    (66) S_F -> . CONTINUE pyc
    (67) S_F -> . SWITCH
    (68) S_F -> . DO_WHILE pyc
    (69) S_F -> . WHILE
    (70) S_F -> . RETURN
    (71) S_F -> . ETIQUETA
    (72) S_F -> . GOTO pyc
    (73) S_F -> . FOR
    (9) Declaracion -> . Tipos L_Dec pyc
    (19) LASIGNACION -> . LASIGNACION coma ASIGNACION
    (20) LASIGNACION -> . ASIGNACION
    (38) STRUCT -> . t_struct iden llav1 ATRIBUTOS llav2
    (98) IF -> . t_if par1 EXP par2 BLOQUE
    (99) IF -> . t_if par1 EXP par2 BLOQUE t_else IF
    (100) IF -> . t_if par1 EXP par2 BLOQUE t_else BLOQUE
    (103) LLAMADA -> . iden par1 ELEMENTS par2
    (104) LLAMADA -> . iden par1 par2
    (96) BREAK -> . t_break
    (97) CONTINUE -> . t_continue
    (88) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS llav2
    (89) SWITCH -> . t_switch par1 EXP par2 llav1 CASOS DEFAULT llav2
    (84) DO_WHILE -> . t_do BLOQUE t_while par1 EXP par2
    (85) WHILE -> . t_while par1 EXP par2 BLOQUE
    (86) RETURN -> . t_return EXP
    (87) RETURN -> . t_return
    (82) ETIQUETA -> . iden bipunto
    (83) GOTO -> . t_goto iden
    (76) FOR -> . t_for par1 INICIO EXP pyc INCDC BLOQUE
    (49) Tipos -> . t_char
    (50) Tipos -> . t_int
    (51) Tipos -> . t_double
    (52) Tipos -> . t_float
    (21) ASIGNACION -> . iden
    (22) ASIGNACION -> . iden OP EXP
    (23) ASIGNACION -> . iden LACCESO
    (24) ASIGNACION -> . iden LACCESO OP EXP
    (25) ASIGNACION -> . ACCESO_STRUCT OP EXP
    (26) ASIGNACION -> . ACCESO_STRUCT
    (48) ACCESO_STRUCT -> . ItemsStruct2 punto ItemsStruct2
    (46) ItemsStruct2 -> . iden
    (47) ItemsStruct2 -> . iden LACCESO

    llav2           reduce using rule 92 (CASO -> t_case EXP bipunto SS_F .)
    t_default       reduce using rule 92 (CASO -> t_case EXP bipunto SS_F .)
    t_case          reduce using rule 92 (CASO -> t_case EXP bipunto SS_F .)
    t_struct        shift and go to state 10
    t_if            shift and go to state 195
    iden            shift and go to state 194
    t_break         shift and go to state 196
    t_continue      shift and go to state 197
    t_switch        shift and go to state 198
    t_do            shift and go to state 199
    t_while         shift and go to state 200
    t_return        shift and go to state 201
    t_goto          shift and go to state 202
    t_for           shift and go to state 203
    t_char          shift and go to state 13
    t_int           shift and go to state 14
    t_double        shift and go to state 15
    t_float         shift and go to state 16

    S_F                            shift and go to state 207
    Declaracion                    shift and go to state 179
    LASIGNACION                    shift and go to state 180
    STRUCT                         shift and go to state 181
    IF                             shift and go to state 182
    LLAMADA                        shift and go to state 183
    BREAK                          shift and go to state 184
    CONTINUE                       shift and go to state 185
    SWITCH                         shift and go to state 186
    DO_WHILE                       shift and go to state 187
    WHILE                          shift and go to state 188
    RETURN                         shift and go to state 189
    ETIQUETA                       shift and go to state 190
    GOTO                           shift and go to state 191
    FOR                            shift and go to state 192
    Tipos                          shift and go to state 193
    ASIGNACION                     shift and go to state 9
    ACCESO_STRUCT                  shift and go to state 17
    ItemsStruct2                   shift and go to state 18
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for iden in state 201 resolved as shift
